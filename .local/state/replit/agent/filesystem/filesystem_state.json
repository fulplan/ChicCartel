{"file_contents":{"README.md":{"content":"# ChicCartel","size_bytes":12},"design_guidelines.md":{"content":"# Design Guidelines: Modern Fashion E-Commerce Platform\n\n## Design Approach: Reference-Based (Fashion E-Commerce Leaders)\n\n**Selected References**: Drawing inspiration from Zara, ASOS, and premium Shopify fashion stores\n**Rationale**: Fashion e-commerce is experience-focused, visual-rich, and design-differentiated. The industry demands stunning product presentation, emotional engagement, and trend-forward aesthetics.\n\n**Core Principles**:\n- Product-first philosophy: Large, immersive imagery dominates\n- Sophisticated minimalism: Flat design with premium feel\n- Editorial quality: Magazine-inspired layouts\n- Effortless discovery: Intuitive browsing and filtering\n\n---\n\n## Color Palette\n\n### Light Mode (Primary)\n- **Background**: 0 0% 98% (soft white)\n- **Surface**: 0 0% 100% (pure white)\n- **Primary Brand**: 0 0% 10% (deep charcoal - sophisticated black)\n- **Secondary**: 0 0% 40% (medium gray for supporting text)\n- **Accent**: 25 95% 53% (warm terracotta - sparingly for CTAs and highlights)\n- **Border**: 0 0% 90% (subtle dividers)\n\n### Dark Mode\n- **Background**: 0 0% 8% (rich charcoal)\n- **Surface**: 0 0% 12% (slightly elevated)\n- **Primary Brand**: 0 0% 95% (off-white text)\n- **Secondary**: 0 0% 65% (muted gray)\n- **Accent**: 25 90% 60% (lighter terracotta)\n- **Border**: 0 0% 20% (subtle contrast)\n\n---\n\n## Typography\n\n**Font Families**:\n- **Headings**: 'Cormorant Garamond' (elegant serif for editorial feel)\n- **Body/UI**: 'Inter' (clean sans-serif for readability)\n- **Accents**: 'Bebas Neue' (condensed display for sale tags, categories)\n\n**Scale**:\n- Hero Headlines: text-6xl md:text-7xl lg:text-8xl font-light\n- Section Titles: text-3xl md:text-4xl font-normal\n- Product Names: text-xl font-medium\n- Body Text: text-base leading-relaxed\n- Small Print: text-sm text-secondary\n\n---\n\n## Layout System\n\n**Spacing Primitives**: Tailwind units of 4, 6, 8, 12, 16, 24\n- Micro spacing: p-4, gap-4 (component internals)\n- Standard spacing: p-8, gap-8 (between elements)\n- Section spacing: py-16 md:py-24 (major sections)\n- Generous breathing room: py-24 md:py-32 (featured sections)\n\n**Grid Strategy**:\n- Desktop: 4-column product grids (grid-cols-4)\n- Tablet: 3-column (md:grid-cols-3)\n- Mobile: 2-column (grid-cols-2)\n- Featured products: 2-3 column asymmetric layouts\n\n---\n\n## Component Library\n\n### Navigation\n- Sticky header with transparent-to-solid scroll transition\n- Mega menu with category imagery for collections\n- Minimal icon-based mobile nav\n- Search with autocomplete product previews\n\n### Product Display\n- **Product Cards**: Borderless with image hover swap (alternate views), minimal text overlay, quick-add cart button on hover\n- **Product Grid**: Masonry-style for editorial pages, standard grid for category browsing\n- **Product Detail**: Split-screen (50/50) with sticky image gallery, accordion specs\n\n### Hero Sections\n- Full-width immersive imagery with text overlay\n- Split hero: half image, half content for seasonal campaigns\n- Video background option for collection launches\n- Minimal text, strong typography contrast\n\n### Shopping Features\n- **Filter Sidebar**: Collapsible with checkbox groups, price sliders\n- **Cart Drawer**: Slide-in from right, quick edit functionality\n- **Wishlist**: Heart icon integration, grid view saved items\n\n### Content Blocks\n- **Editorial Grid**: Magazine-style with mixed image sizes\n- **Lookbook**: Full-bleed scrollable imagery with product tags\n- **Collection Preview**: Large hero image + 3-4 product cards below\n- **Instagram Feed**: Social proof grid integration\n\n### Forms & Interactions\n- Underline-style inputs for newsletter signup\n- Floating labels for checkout forms\n- Smooth micro-animations on add-to-cart (scale + fade)\n- Size selector: pill-style buttons with selected state\n\n---\n\n## Images\n\n### Hero Images (Large, Full-Width)\n- **Homepage Hero**: Fashion model in seasonal collection, studio or lifestyle setting (1920x1080 minimum)\n- **Collection Pages**: Thematic lifestyle photography showcasing collection mood\n- **Campaign Banners**: Editorial-quality imagery for promotions\n\n### Product Photography\n- Clean white background for e-commerce consistency\n- Lifestyle shots for hover states (on-model or styled)\n- Detail shots for material/texture closeups\n- 4-6 images per product minimum\n\n### Supporting Imagery\n- **About/Brand Story**: Behind-the-scenes, atelier photography\n- **Category Tiles**: Curated outfit or product group shots\n- **Instagram Grid**: User-generated content, authentic styling\n- **Lookbook**: Full-length editorial spreads\n\n### Image Treatment\n- Subtle grayscale filters for sophistication\n- Maintain aspect ratios (3:4 portrait for products, 16:9 for banners)\n- Lazy loading for performance\n- Responsive srcset for optimal delivery\n\n---\n\n## Key Pages Layout\n\n**Homepage**: Hero banner → Featured collection grid → Split promotional banner → New arrivals 4-col grid → Editorial lookbook section → Instagram feed → Newsletter signup\n\n**Collection Page**: Hero image with collection name → Filter sidebar + 4-col product grid → Load more pagination\n\n**Product Detail**: Breadcrumb nav → Image gallery (left 60%) + Product info (right 40%) → Description tabs → Related products carousel → Recently viewed\n\n**Cart/Checkout**: Clean, minimal steps with progress indicator, order summary sticky sidebar\n\n---\n\nThis design system creates a premium, modern fashion e-commerce experience that balances editorial sophistication with conversion-focused functionality. The flat design aesthetic maintains visual clarity while rich layouts ensure engaging product discovery.","size_bytes":5607},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# Fashion E-Commerce Platform\n\n## Overview\n\nThis is a modern fashion e-commerce platform built with a full-stack TypeScript architecture. The application features a sophisticated, magazine-inspired design inspired by premium fashion retailers like Zara and ASOS. It emphasizes visual storytelling, immersive product presentation, and seamless user experience with support for both light and dark themes.\n\nThe platform is designed to showcase fashion products through large imagery, editorial-quality layouts, and intuitive browsing capabilities. It includes features like product carousels, filtering systems, shopping cart functionality, and responsive design across all devices.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n\n**Framework & Build System**\n- React 18 with TypeScript for type-safe component development\n- Vite as the build tool and development server for fast hot-module replacement\n- Wouter for lightweight client-side routing (HomePage, ShopPage, NotFound)\n- Single Page Application (SPA) architecture with client-side navigation\n\n**UI Component System**\n- Radix UI primitives for accessible, unstyled component foundations (dialogs, dropdowns, tooltips, etc.)\n- shadcn/ui component library with the \"new-york\" style variant\n- Custom fashion-focused components (ProductCard, Hero, CartDrawer, FilterSidebar, etc.)\n- Tailwind CSS for utility-first styling with custom design tokens\n\n**Design System**\n- Typography: Cormorant Garamond (serif headings), Inter (body text), Bebas Neue (accents)\n- Color palette: Neutral-based with terracotta accents, optimized for both light and dark modes\n- Sophisticated minimalist aesthetic with flat design and premium feel\n- Custom CSS variables for theme consistency and dynamic theming\n\n**State Management & Data Fetching**\n- TanStack Query (React Query) for server state management and caching\n- Local component state with React hooks for UI interactions\n- No global state management library - component-level state kept simple\n\n**Key Features & Interactions**\n- Scroll-based animations using Intersection Observer API (useScrollAnimation hook)\n- Embla Carousel for product and hero image carousels with autoplay\n- Shopping cart with drawer interface, quantity management, and checkout flow\n- Product filtering system with category, price range, size, and color filters\n- Theme toggle between light and dark modes with localStorage persistence\n- Responsive design with mobile-first approach and hamburger navigation\n\n### Backend Architecture\n\n**Server Framework**\n- Express.js for HTTP server and REST API routing\n- TypeScript throughout for type safety across the stack\n- Session-based architecture preparation (connect-pg-simple for session storage)\n\n**API Design**\n- RESTful API structure with `/api` prefix for all endpoints\n- Middleware for JSON parsing, URL encoding, and request logging\n- Centralized error handling middleware\n- Request/response logging with duration tracking for API calls\n\n**Development Environment**\n- Vite middleware mode integration for seamless development experience\n- Hot Module Replacement (HMR) during development\n- Separate production and development build processes\n- Custom error overlay and dev banner for Replit environment\n\n### Data Storage Solutions\n\n**Database Layer**\n- Drizzle ORM for type-safe database operations\n- PostgreSQL as the primary database (via Neon serverless)\n- Schema-first approach with drizzle-zod for validation\n- Migration system using drizzle-kit\n\n**Current Schema**\n- Users table with id (UUID), username (unique), and password fields\n- Prepared for session storage integration with connect-pg-simple\n\n**Storage Interface Pattern**\n- Abstract IStorage interface defining CRUD operations\n- MemStorage implementation for in-memory development/testing\n- Design allows easy swap to database-backed storage implementation\n- User management methods: getUser, getUserByUsername, createUser\n\n### Authentication and Authorization\n\n**Planned Architecture** (prepared but not fully implemented)\n- Session-based authentication using express-session\n- PostgreSQL session store via connect-pg-simple\n- Cookie-based session management with credentials included in fetch requests\n- User schema prepared with username/password fields\n\n**Security Considerations**\n- Password hashing preparation (schema ready)\n- Session persistence across server restarts\n- Unauthorized behavior handling in query client (returnNull or throw)\n\n## External Dependencies\n\n### UI & Styling Libraries\n- **Radix UI**: Complete suite of accessible, unstyled UI primitives (~25 components)\n- **Tailwind CSS**: Utility-first CSS framework with PostCSS processing\n- **class-variance-authority**: Component variant management\n- **clsx & tailwind-merge**: Conditional className utilities\n\n### Data & State Management\n- **TanStack Query v5**: Server state management, caching, and synchronization\n- **React Hook Form**: Form state management with validation\n- **Zod**: Schema validation library integrated with Drizzle\n\n### Database & ORM\n- **Drizzle ORM**: TypeScript ORM for PostgreSQL with type-safe queries\n- **@neondatabase/serverless**: Neon's serverless PostgreSQL driver\n- **drizzle-zod**: Drizzle schema to Zod validator conversion\n\n### Routing & Navigation\n- **Wouter**: Lightweight client-side routing (~1.2KB)\n\n### Carousels & Animations\n- **Embla Carousel**: Carousel library with React bindings and autoplay plugin\n- **date-fns**: Date utility library for formatting\n\n### Development Tools\n- **Vite**: Build tool and development server with React plugin\n- **TypeScript**: Type safety across frontend and backend\n- **ESBuild**: JavaScript bundler for production builds\n- **tsx**: TypeScript execution for Node.js development\n\n### Replit-Specific Integrations\n- **@replit/vite-plugin-runtime-error-modal**: Error overlay for development\n- **@replit/vite-plugin-cartographer**: Development tooling\n- **@replit/vite-plugin-dev-banner**: Development environment banner\n\n### Fonts\n- **Google Fonts**: Cormorant Garamond, Inter, and Bebas Neue loaded via CDN\n\n### Session Management (Prepared)\n- **express-session**: Session middleware for Express\n- **connect-pg-simple**: PostgreSQL session store","size_bytes":6264},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        display: [\"var(--font-display)\"],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4092},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n          await import(\"@replit/vite-plugin-dev-banner\").then((m) =>\n            m.devBanner(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":1080},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport HomePage from \"@/pages/HomePage\";\nimport ShopPage from \"@/pages/ShopPage\";\nimport NewArrivalsPage from \"@/pages/NewArrivalsPage\";\nimport WomenPage from \"@/pages/WomenPage\";\nimport MenPage from \"@/pages/MenPage\";\nimport AccessoriesPage from \"@/pages/AccessoriesPage\";\nimport SalePage from \"@/pages/SalePage\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={HomePage} />\n      <Route path=\"/shop\" component={ShopPage} />\n      <Route path=\"/new-arrivals\" component={NewArrivalsPage} />\n      <Route path=\"/women\" component={WomenPage} />\n      <Route path=\"/men\" component={MenPage} />\n      <Route path=\"/accessories\" component={AccessoriesPage} />\n      <Route path=\"/sale\" component={SalePage} />\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1314},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 98%;\n\n  --foreground: 0 0% 10%;\n\n  --border: 0 0% 90%;\n\n  --card: 0 0% 100%;\n\n  --card-foreground: 0 0% 10%;\n\n  --card-border: 0 0% 94%;\n\n  --sidebar: 0 0% 96%;\n\n  --sidebar-foreground: 0 0% 10%;\n\n  --sidebar-border: 0 0% 92%;\n\n  --sidebar-primary: 0 0% 10%;\n\n  --sidebar-primary-foreground: 0 0% 98%;\n\n  --sidebar-accent: 0 0% 92%;\n\n  --sidebar-accent-foreground: 0 0% 10%;\n\n  --sidebar-ring: 25 95% 53%;\n\n  --popover: 0 0% 100%;\n\n  --popover-foreground: 0 0% 10%;\n\n  --popover-border: 0 0% 92%;\n\n  --primary: 0 0% 10%;\n\n  --primary-foreground: 0 0% 98%;\n\n  --secondary: 0 0% 94%;\n\n  --secondary-foreground: 0 0% 10%;\n\n  --muted: 0 0% 94%;\n\n  --muted-foreground: 0 0% 40%;\n\n  --accent: 25 95% 53%;\n\n  --accent-foreground: 0 0% 98%;\n\n  --destructive: 0 84% 45%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 0 0% 85%;\n  --ring: 25 95% 53%;\n  --chart-1: 0 0% 10%;\n  --chart-2: 25 95% 53%;\n  --chart-3: 0 0% 40%;\n  --chart-4: 200 80% 45%;\n  --chart-5: 280 65% 50%;\n\n  --font-sans: Inter, -apple-system, BlinkMacSystemFont, sans-serif;\n  --font-serif: 'Cormorant Garamond', Georgia, serif;\n  --font-mono: 'SF Mono', Menlo, monospace;\n  --font-display: 'Bebas Neue', Impact, sans-serif;\n  --radius: .25rem;\n  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.05);\n  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.08);\n  --shadow-sm: 0px 2px 4px 0px hsl(0 0% 0% / 0.06), 0px 1px 2px -1px hsl(0 0% 0% / 0.04);\n  --shadow: 0px 4px 6px 0px hsl(0 0% 0% / 0.07), 0px 2px 4px -1px hsl(0 0% 0% / 0.05);\n  --shadow-md: 0px 6px 12px 0px hsl(0 0% 0% / 0.08), 0px 3px 6px -2px hsl(0 0% 0% / 0.06);\n  --shadow-lg: 0px 10px 20px 0px hsl(0 0% 0% / 0.10), 0px 4px 8px -2px hsl(0 0% 0% / 0.08);\n  --shadow-xl: 0px 16px 32px 0px hsl(0 0% 0% / 0.12), 0px 6px 12px -3px hsl(0 0% 0% / 0.10);\n  --shadow-2xl: 0px 24px 48px 0px hsl(0 0% 0% / 0.15);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 0 0% 8%;\n\n  --foreground: 0 0% 95%;\n\n  --border: 0 0% 20%;\n\n  --card: 0 0% 12%;\n\n  --card-foreground: 0 0% 95%;\n\n  --card-border: 0 0% 16%;\n\n  --sidebar: 0 0% 10%;\n\n  --sidebar-foreground: 0 0% 95%;\n\n  --sidebar-border: 0 0% 14%;\n\n  --sidebar-primary: 0 0% 95%;\n\n  --sidebar-primary-foreground: 0 0% 8%;\n\n  --sidebar-accent: 0 0% 18%;\n\n  --sidebar-accent-foreground: 0 0% 95%;\n\n  --sidebar-ring: 25 90% 60%;\n\n  --popover: 0 0% 12%;\n\n  --popover-foreground: 0 0% 95%;\n\n  --popover-border: 0 0% 18%;\n\n  --primary: 0 0% 95%;\n\n  --primary-foreground: 0 0% 8%;\n\n  --secondary: 0 0% 18%;\n\n  --secondary-foreground: 0 0% 95%;\n\n  --muted: 0 0% 16%;\n\n  --muted-foreground: 0 0% 65%;\n\n  --accent: 25 90% 60%;\n\n  --accent-foreground: 0 0% 8%;\n\n  --destructive: 0 80% 50%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 0 0% 25%;\n  --ring: 25 90% 60%;\n  --chart-1: 0 0% 95%;\n  --chart-2: 25 90% 60%;\n  --chart-3: 0 0% 65%;\n  --chart-4: 200 75% 55%;\n  --chart-5: 280 60% 60%;\n\n  --shadow-2xs: 0px 1px 2px 0px hsl(0 0% 0% / 0.30);\n  --shadow-xs: 0px 1px 3px 0px hsl(0 0% 0% / 0.40);\n  --shadow-sm: 0px 2px 4px 0px hsl(0 0% 0% / 0.35), 0px 1px 2px -1px hsl(0 0% 0% / 0.30);\n  --shadow: 0px 4px 6px 0px hsl(0 0% 0% / 0.40), 0px 2px 4px -1px hsl(0 0% 0% / 0.35);\n  --shadow-md: 0px 6px 12px 0px hsl(0 0% 0% / 0.45), 0px 3px 6px -2px hsl(0 0% 0% / 0.40);\n  --shadow-lg: 0px 10px 20px 0px hsl(0 0% 0% / 0.50), 0px 4px 8px -2px hsl(0 0% 0% / 0.45);\n  --shadow-xl: 0px 16px 32px 0px hsl(0 0% 0% / 0.55), 0px 6px 12px -3px hsl(0 0% 0% / 0.50);\n  --shadow-2xl: 0px 24px 48px 0px hsl(0 0% 0% / 0.60);\n\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    border-radius: inherit;\n    z-index: -1;\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    border-radius: inherit;\n    z-index: 999;\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n\n  /* Animation Keyframes */\n  @keyframes fade-in {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @keyframes fade-in-up {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  @keyframes fade-in-down {\n    from {\n      opacity: 0;\n      transform: translateY(-30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  @keyframes fade-in-left {\n    from {\n      opacity: 0;\n      transform: translateX(-30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateX(0);\n    }\n  }\n\n  @keyframes fade-in-right {\n    from {\n      opacity: 0;\n      transform: translateX(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateX(0);\n    }\n  }\n\n  @keyframes scale-in {\n    from {\n      opacity: 0;\n      transform: scale(0.95);\n    }\n    to {\n      opacity: 1;\n      transform: scale(1);\n    }\n  }\n\n  @keyframes ken-burns {\n    0% {\n      transform: scale(1);\n    }\n    100% {\n      transform: scale(1.1);\n    }\n  }\n\n  @keyframes slide-in-right {\n    from {\n      transform: translateX(100%);\n    }\n    to {\n      transform: translateX(0);\n    }\n  }\n\n  @keyframes slide-in-left {\n    from {\n      transform: translateX(-100%);\n    }\n    to {\n      transform: translateX(0);\n    }\n  }\n\n  @keyframes pulse-subtle {\n    0%, 100% {\n      opacity: 1;\n    }\n    50% {\n      opacity: 0.8;\n    }\n  }\n\n  /* Animation Classes */\n  .animate-fade-in {\n    animation: fade-in 0.6s ease-out forwards;\n  }\n\n  .animate-fade-in-up {\n    animation: fade-in-up 0.8s ease-out forwards;\n  }\n\n  .animate-fade-in-down {\n    animation: fade-in-down 0.8s ease-out forwards;\n  }\n\n  .animate-fade-in-left {\n    animation: fade-in-left 0.8s ease-out forwards;\n  }\n\n  .animate-fade-in-right {\n    animation: fade-in-right 0.8s ease-out forwards;\n  }\n\n  .animate-scale-in {\n    animation: scale-in 0.6s ease-out forwards;\n  }\n\n  .animate-ken-burns {\n    animation: ken-burns 20s ease-out infinite alternate;\n  }\n\n  .animate-slide-in-right {\n    animation: slide-in-right 0.5s ease-out forwards;\n  }\n\n  .animate-slide-in-left {\n    animation: slide-in-left 0.5s ease-out forwards;\n  }\n\n  .animate-pulse-subtle {\n    animation: pulse-subtle 2s ease-in-out infinite;\n  }\n\n  .animate-fade-out {\n    animation: fade-out 0.5s ease-out forwards;\n  }\n\n  @keyframes fade-out {\n    from {\n      opacity: 1;\n    }\n    to {\n      opacity: 0;\n      visibility: hidden;\n    }\n  }\n\n  /* Smooth scroll */\n  html {\n    scroll-behavior: smooth;\n  }\n\n  /* Image hover zoom effect */\n  .image-zoom-hover {\n    overflow: hidden;\n  }\n\n  .image-zoom-hover img {\n    transition: transform 0.7s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  .image-zoom-hover:hover img {\n    transform: scale(1.1);\n  }\n}","size_bytes":12317},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/AnimatedSection.tsx":{"content":"import { useScrollAnimation } from '@/hooks/useScrollAnimation';\n\ninterface AnimatedSectionProps {\n  children: React.ReactNode;\n  animation?: 'fade-in' | 'fade-in-up' | 'fade-in-down' | 'fade-in-left' | 'fade-in-right' | 'scale-in';\n  delay?: number;\n  className?: string;\n}\n\nexport default function AnimatedSection({ \n  children, \n  animation = 'fade-in-up',\n  delay = 0,\n  className = ''\n}: AnimatedSectionProps) {\n  const { ref, isVisible } = useScrollAnimation({ threshold: 0.1 });\n\n  const animationClass = isVisible ? `animate-${animation}` : 'opacity-0';\n  const delayStyle = { animationDelay: `${delay}ms` };\n\n  return (\n    <div \n      ref={ref} \n      className={`${animationClass} ${className}`}\n      style={isVisible ? delayStyle : undefined}\n    >\n      {children}\n    </div>\n  );\n}\n","size_bytes":797},"client/src/components/CartDrawer.tsx":{"content":"import { X, Minus, Plus, Trash2 } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sheet, SheetContent, SheetHeader, SheetTitle, SheetDescription } from \"@/components/ui/sheet\";\nimport { Separator } from \"@/components/ui/separator\";\n\ninterface CartItem {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n  size?: string;\n}\n\ninterface CartDrawerProps {\n  isOpen: boolean;\n  onClose: () => void;\n  items: CartItem[];\n  onUpdateQuantity?: (id: string, quantity: number) => void;\n  onRemoveItem?: (id: string) => void;\n  onCheckout?: () => void;\n}\n\nexport default function CartDrawer({\n  isOpen,\n  onClose,\n  items,\n  onUpdateQuantity,\n  onRemoveItem,\n  onCheckout\n}: CartDrawerProps) {\n  const subtotal = items.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  const shipping = subtotal > 0 ? (subtotal > 200 ? 0 : 15) : 0;\n  const total = subtotal + shipping;\n\n  return (\n    <Sheet open={isOpen} onOpenChange={onClose}>\n      <SheetContent className=\"w-full sm:max-w-lg flex flex-col\" data-testid=\"drawer-cart\">\n        <SheetHeader>\n          <SheetTitle className=\"text-2xl font-serif\" data-testid=\"text-cart-title\">\n            Shopping Cart ({items.length})\n          </SheetTitle>\n          <SheetDescription>\n            Review and manage items in your shopping cart\n          </SheetDescription>\n        </SheetHeader>\n\n        {items.length === 0 ? (\n          <div className=\"flex-1 flex items-center justify-center\">\n            <p className=\"text-muted-foreground\" data-testid=\"text-empty-cart\">\n              Your cart is empty\n            </p>\n          </div>\n        ) : (\n          <>\n            {/* Cart Items */}\n            <div className=\"flex-1 overflow-y-auto py-6 space-y-6\">\n              {items.map((item) => (\n                <div key={item.id} className=\"flex gap-4\" data-testid={`item-cart-${item.id}`}>\n                  <div className=\"w-24 h-32 flex-shrink-0 bg-muted rounded-md overflow-hidden\">\n                    <img\n                      src={item.image}\n                      alt={item.name}\n                      className=\"w-full h-full object-cover\"\n                      data-testid={`img-cart-item-${item.id}`}\n                    />\n                  </div>\n\n                  <div className=\"flex-1 flex flex-col justify-between\">\n                    <div>\n                      <h4 className=\"font-medium\" data-testid={`text-cart-item-name-${item.id}`}>\n                        {item.name}\n                      </h4>\n                      {item.size && (\n                        <p className=\"text-sm text-muted-foreground mt-1\" data-testid={`text-cart-item-size-${item.id}`}>\n                          Size: {item.size}\n                        </p>\n                      )}\n                      <p className=\"font-medium mt-2\" data-testid={`text-cart-item-price-${item.id}`}>\n                        ${item.price}\n                      </p>\n                    </div>\n\n                    <div className=\"flex items-center justify-between\">\n                      {/* Quantity Controls */}\n                      <div className=\"flex items-center gap-2\">\n                        <Button\n                          size=\"icon\"\n                          variant=\"outline\"\n                          className=\"h-8 w-8\"\n                          onClick={() => onUpdateQuantity?.(item.id, Math.max(1, item.quantity - 1))}\n                          data-testid={`button-decrease-${item.id}`}\n                        >\n                          <Minus className=\"h-3 w-3\" />\n                        </Button>\n                        <span className=\"w-8 text-center\" data-testid={`text-quantity-${item.id}`}>\n                          {item.quantity}\n                        </span>\n                        <Button\n                          size=\"icon\"\n                          variant=\"outline\"\n                          className=\"h-8 w-8\"\n                          onClick={() => onUpdateQuantity?.(item.id, item.quantity + 1)}\n                          data-testid={`button-increase-${item.id}`}\n                        >\n                          <Plus className=\"h-3 w-3\" />\n                        </Button>\n                      </div>\n\n                      {/* Remove Button */}\n                      <Button\n                        size=\"icon\"\n                        variant=\"ghost\"\n                        onClick={() => onRemoveItem?.(item.id)}\n                        data-testid={`button-remove-${item.id}`}\n                      >\n                        <Trash2 className=\"h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <Separator />\n\n            {/* Cart Summary */}\n            <div className=\"space-y-4 py-4\">\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-muted-foreground\">Subtotal</span>\n                <span data-testid=\"text-subtotal\">${subtotal}</span>\n              </div>\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-muted-foreground\">Shipping</span>\n                <span data-testid=\"text-shipping\">\n                  {shipping === 0 ? 'Free' : `$${shipping}`}\n                </span>\n              </div>\n              <Separator />\n              <div className=\"flex justify-between font-medium text-lg\">\n                <span>Total</span>\n                <span data-testid=\"text-total\">${total}</span>\n              </div>\n\n              <Button\n                size=\"lg\"\n                className=\"w-full\"\n                onClick={onCheckout}\n                data-testid=\"button-checkout\"\n              >\n                Checkout\n              </Button>\n            </div>\n          </>\n        )}\n      </SheetContent>\n    </Sheet>\n  );\n}\n","size_bytes":5922},"client/src/components/CategoryBanner.tsx":{"content":"import { Button } from \"@/components/ui/button\";\n\ninterface CategoryBannerProps {\n  title: string;\n  description?: string;\n  imageSrc?: string;\n  ctaText?: string;\n  onCtaClick?: () => void;\n  variant?: 'default' | 'split';\n}\n\nexport default function CategoryBanner({\n  title,\n  description,\n  imageSrc,\n  ctaText = \"Shop Now\",\n  onCtaClick,\n  variant = 'default'\n}: CategoryBannerProps) {\n  if (variant === 'split') {\n    return (\n      <div className=\"grid md:grid-cols-2 gap-0 overflow-hidden rounded-md\" data-testid=\"banner-category-split\">\n        {/* Image */}\n        <div className=\"relative h-56 sm:h-64 md:h-auto bg-muted\">\n          {imageSrc && (\n            <img\n              src={imageSrc}\n              alt={title}\n              className=\"w-full h-full object-cover\"\n              data-testid=\"img-category-banner\"\n            />\n          )}\n        </div>\n\n        {/* Content */}\n        <div className=\"flex items-center justify-center p-6 sm:p-8 md:p-12 bg-muted\">\n          <div className=\"max-w-md w-full\">\n            <h3 \n              className=\"text-2xl sm:text-3xl md:text-4xl font-serif font-light mb-3 md:mb-4\"\n              data-testid=\"text-category-title\"\n            >\n              {title}\n            </h3>\n            {description && (\n              <p className=\"text-muted-foreground mb-4 md:mb-6 leading-relaxed text-sm sm:text-base\" data-testid=\"text-category-description\">\n                {description}\n              </p>\n            )}\n            <Button onClick={onCtaClick} className=\"w-full sm:w-auto\" data-testid=\"button-category-cta\">\n              {ctaText}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"relative h-64 sm:h-72 md:h-80 overflow-hidden rounded-md bg-muted\" data-testid=\"banner-category-default\">\n      {imageSrc && (\n        <>\n          <img\n            src={imageSrc}\n            alt={title}\n            className=\"w-full h-full object-cover\"\n            data-testid=\"img-category-banner\"\n          />\n          <div className=\"absolute inset-0 bg-black/50\" />\n        </>\n      )}\n      \n      <div className=\"absolute inset-0 flex items-center justify-center text-center text-white p-4 sm:p-6 md:p-8\">\n        <div className=\"max-w-2xl\">\n          <h3 \n            className=\"text-2xl sm:text-3xl md:text-4xl lg:text-5xl font-serif font-light mb-3 md:mb-4\"\n            data-testid=\"text-category-title\"\n          >\n            {title}\n          </h3>\n          {description && (\n            <p className=\"text-sm sm:text-base md:text-lg mb-4 md:mb-6 text-white/90\" data-testid=\"text-category-description\">\n              {description}\n            </p>\n          )}\n          <Button \n            variant=\"outline\" \n            onClick={onCtaClick}\n            className=\"bg-white/10 backdrop-blur-sm border-white/30 text-white hover:bg-white/20 w-full sm:w-auto\"\n            data-testid=\"button-category-cta\"\n          >\n            {ctaText}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3041},"client/src/components/CategoryCarousel.tsx":{"content":"import useEmblaCarousel from 'embla-carousel-react';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\n\ninterface Category {\n  id: string;\n  name: string;\n  imageSrc: string;\n  count?: number;\n  onClick?: () => void;\n}\n\ninterface CategoryCarouselProps {\n  categories: Category[];\n}\n\nexport default function CategoryCarousel({ categories }: CategoryCarouselProps) {\n  const [emblaRef, emblaApi] = useEmblaCarousel({\n    align: 'start',\n    slidesToScroll: 1,\n    breakpoints: {\n      '(min-width: 640px)': { slidesToScroll: 2 },\n      '(min-width: 1024px)': { slidesToScroll: 3 },\n    },\n  });\n\n  const [canScrollPrev, setCanScrollPrev] = useState(false);\n  const [canScrollNext, setCanScrollNext] = useState(false);\n\n  const scrollPrev = useCallback(() => {\n    if (emblaApi) emblaApi.scrollPrev();\n  }, [emblaApi]);\n\n  const scrollNext = useCallback(() => {\n    if (emblaApi) emblaApi.scrollNext();\n  }, [emblaApi]);\n\n  const onSelect = useCallback(() => {\n    if (!emblaApi) return;\n    setCanScrollPrev(emblaApi.canScrollPrev());\n    setCanScrollNext(emblaApi.canScrollNext());\n  }, [emblaApi]);\n\n  useEffect(() => {\n    if (!emblaApi) return;\n    onSelect();\n    emblaApi.on('select', onSelect);\n    emblaApi.on('reInit', onSelect);\n  }, [emblaApi, onSelect]);\n\n  return (\n    <div className=\"animate-fade-in\">\n      <div className=\"flex items-center justify-between mb-8\">\n        <h2 className=\"text-2xl sm:text-3xl md:text-4xl font-serif font-light\" data-testid=\"text-category-carousel-title\">\n          Shop by Category\n        </h2>\n        <div className=\"flex gap-2\">\n          <Button\n            size=\"icon\"\n            variant=\"outline\"\n            onClick={scrollPrev}\n            disabled={!canScrollPrev}\n            className=\"hidden md:flex\"\n            data-testid=\"button-category-carousel-prev\"\n          >\n            <ChevronLeft className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            size=\"icon\"\n            variant=\"outline\"\n            onClick={scrollNext}\n            disabled={!canScrollNext}\n            className=\"hidden md:flex\"\n            data-testid=\"button-category-carousel-next\"\n          >\n            <ChevronRight className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"overflow-hidden\" ref={emblaRef}>\n        <div className=\"flex gap-4 md:gap-6\">\n          {categories.map((category) => (\n            <div \n              key={category.id}\n              className=\"flex-[0_0_70%] sm:flex-[0_0_45%] md:flex-[0_0_32%] lg:flex-[0_0_24%] min-w-0\"\n            >\n              <button\n                onClick={category.onClick}\n                className=\"group relative w-full aspect-[4/5] overflow-hidden rounded-md hover-elevate active-elevate-2 transition-all\"\n                data-testid={`button-category-${category.id}`}\n              >\n                <img\n                  src={category.imageSrc}\n                  alt={category.name}\n                  className=\"w-full h-full object-cover transition-transform duration-700 group-hover:scale-110\"\n                  data-testid={`img-category-${category.id}`}\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent\" />\n                <div className=\"absolute inset-x-0 bottom-0 p-6 text-white\">\n                  <h3 className=\"text-xl sm:text-2xl font-serif font-light mb-1\" data-testid={`text-category-name-${category.id}`}>\n                    {category.name}\n                  </h3>\n                  {category.count && (\n                    <p className=\"text-sm text-white/80\" data-testid={`text-category-count-${category.id}`}>\n                      {category.count} items\n                    </p>\n                  )}\n                </div>\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3991},"client/src/components/FilterSidebar.tsx":{"content":"import { Checkbox } from \"@/components/ui/checkbox\";\nimport { Label } from \"@/components/ui/label\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { useState } from \"react\";\n\ninterface FilterSidebarProps {\n  onFilterChange?: (filters: FilterState) => void;\n}\n\ninterface FilterState {\n  categories: string[];\n  priceRange: [number, number];\n  sizes: string[];\n  colors: string[];\n}\n\nexport default function FilterSidebar({ onFilterChange }: FilterSidebarProps) {\n  const [selectedCategories, setSelectedCategories] = useState<string[]>([]);\n  const [priceRange, setPriceRange] = useState<[number, number]>([0, 1000]);\n  const [selectedSizes, setSelectedSizes] = useState<string[]>([]);\n  const [selectedColors, setSelectedColors] = useState<string[]>([]);\n\n  const categories = ['Outerwear', 'Knitwear', 'Footwear', 'Accessories', 'Denim'];\n  const sizes = ['XS', 'S', 'M', 'L', 'XL'];\n  const colors = [\n    { name: 'Black', value: 'black', hex: '#000000' },\n    { name: 'White', value: 'white', hex: '#FFFFFF' },\n    { name: 'Beige', value: 'beige', hex: '#D4C5B9' },\n    { name: 'Navy', value: 'navy', hex: '#1E3A5F' },\n    { name: 'Olive', value: 'olive', hex: '#6B8E23' },\n  ];\n\n  const handleCategoryChange = (category: string, checked: boolean) => {\n    const updated = checked\n      ? [...selectedCategories, category]\n      : selectedCategories.filter(c => c !== category);\n    setSelectedCategories(updated);\n    onFilterChange?.({ categories: updated, priceRange, sizes: selectedSizes, colors: selectedColors });\n  };\n\n  const handleSizeChange = (size: string, checked: boolean) => {\n    const updated = checked\n      ? [...selectedSizes, size]\n      : selectedSizes.filter(s => s !== size);\n    setSelectedSizes(updated);\n    onFilterChange?.({ categories: selectedCategories, priceRange, sizes: updated, colors: selectedColors });\n  };\n\n  const handleColorChange = (color: string, checked: boolean) => {\n    const updated = checked\n      ? [...selectedColors, color]\n      : selectedColors.filter(c => c !== color);\n    setSelectedColors(updated);\n    onFilterChange?.({ categories: selectedCategories, priceRange, sizes: selectedSizes, colors: updated });\n  };\n\n  return (\n    <div className=\"space-y-8\" data-testid=\"sidebar-filters\">\n      {/* Categories */}\n      <div>\n        <h3 className=\"font-medium mb-4\" data-testid=\"text-filter-category\">Category</h3>\n        <div className=\"space-y-3\">\n          {categories.map((category) => (\n            <div key={category} className=\"flex items-center space-x-2\">\n              <Checkbox\n                id={`category-${category}`}\n                checked={selectedCategories.includes(category)}\n                onCheckedChange={(checked) => handleCategoryChange(category, checked as boolean)}\n                data-testid={`checkbox-category-${category.toLowerCase()}`}\n              />\n              <Label\n                htmlFor={`category-${category}`}\n                className=\"text-sm font-normal cursor-pointer\"\n              >\n                {category}\n              </Label>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <Separator />\n\n      {/* Price Range */}\n      <div>\n        <h3 className=\"font-medium mb-4\" data-testid=\"text-filter-price\">Price Range</h3>\n        <div className=\"space-y-4\">\n          <Slider\n            value={priceRange}\n            onValueChange={(value) => {\n              setPriceRange(value as [number, number]);\n              onFilterChange?.({ categories: selectedCategories, priceRange: value as [number, number], sizes: selectedSizes, colors: selectedColors });\n            }}\n            max={1000}\n            step={10}\n            className=\"w-full\"\n            data-testid=\"slider-price\"\n          />\n          <div className=\"flex justify-between text-sm text-muted-foreground\">\n            <span data-testid=\"text-price-min\">${priceRange[0]}</span>\n            <span data-testid=\"text-price-max\">${priceRange[1]}</span>\n          </div>\n        </div>\n      </div>\n\n      <Separator />\n\n      {/* Size */}\n      <div>\n        <h3 className=\"font-medium mb-4\" data-testid=\"text-filter-size\">Size</h3>\n        <div className=\"flex flex-wrap gap-2\">\n          {sizes.map((size) => (\n            <div key={size}>\n              <Checkbox\n                id={`size-${size}`}\n                checked={selectedSizes.includes(size)}\n                onCheckedChange={(checked) => handleSizeChange(size, checked as boolean)}\n                className=\"sr-only\"\n                data-testid={`checkbox-size-${size.toLowerCase()}`}\n              />\n              <Label\n                htmlFor={`size-${size}`}\n                className={`\n                  inline-flex items-center justify-center h-9 px-4 rounded-md border cursor-pointer transition-colors\n                  ${selectedSizes.includes(size) ? 'bg-primary text-primary-foreground border-primary' : 'bg-background hover-elevate'}\n                `}\n              >\n                {size}\n              </Label>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <Separator />\n\n      {/* Color */}\n      <div>\n        <h3 className=\"font-medium mb-4\" data-testid=\"text-filter-color\">Color</h3>\n        <div className=\"flex flex-wrap gap-3\">\n          {colors.map((color) => (\n            <div key={color.value}>\n              <Checkbox\n                id={`color-${color.value}`}\n                checked={selectedColors.includes(color.value)}\n                onCheckedChange={(checked) => handleColorChange(color.value, checked as boolean)}\n                className=\"sr-only\"\n                data-testid={`checkbox-color-${color.value}`}\n              />\n              <Label\n                htmlFor={`color-${color.value}`}\n                className=\"cursor-pointer block\"\n                title={color.name}\n              >\n                <div\n                  className={`\n                    w-10 h-10 rounded-full border-2 transition-all\n                    ${selectedColors.includes(color.value) ? 'border-primary ring-2 ring-primary ring-offset-2' : 'border-border'}\n                  `}\n                  style={{ backgroundColor: color.hex }}\n                />\n              </Label>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":6342},"client/src/components/Footer.tsx":{"content":"import { Facebook, Instagram, Twitter } from \"lucide-react\";\nimport { Input } from \"@/components/ui/input\";\nimport { Button } from \"@/components/ui/button\";\nimport { useState } from \"react\";\n\nexport default function Footer() {\n  const [email, setEmail] = useState(\"\");\n\n  const handleSubscribe = () => {\n    console.log('Subscribe:', email);\n    setEmail(\"\");\n  };\n\n  return (\n    <footer className=\"border-t border-border bg-background mt-12 sm:mt-16 md:mt-24\">\n      <div className=\"container mx-auto px-4 sm:px-6 py-12 sm:py-16\">\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8 sm:gap-10 lg:gap-12\">\n          {/* Brand */}\n          <div>\n            <h2 className=\"text-2xl font-serif font-light mb-4\" data-testid=\"text-footer-logo\">LUXE</h2>\n            <p className=\"text-muted-foreground leading-relaxed\">\n              Timeless elegance meets modern sophistication. Discover curated fashion for the discerning individual.\n            </p>\n          </div>\n\n          {/* Quick Links */}\n          <div>\n            <h3 className=\"font-medium mb-4\" data-testid=\"text-footer-shop\">Shop</h3>\n            <ul className=\"space-y-3\">\n              <li>\n                <a href=\"#\" className=\"text-muted-foreground hover:text-foreground transition-colors\" data-testid=\"link-new-arrivals\">\n                  New Arrivals\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-muted-foreground hover:text-foreground transition-colors\" data-testid=\"link-bestsellers\">\n                  Bestsellers\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-muted-foreground hover:text-foreground transition-colors\" data-testid=\"link-sale\">\n                  Sale\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-muted-foreground hover:text-foreground transition-colors\" data-testid=\"link-collections\">\n                  Collections\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          {/* Customer Service */}\n          <div>\n            <h3 className=\"font-medium mb-4\" data-testid=\"text-footer-help\">Help</h3>\n            <ul className=\"space-y-3\">\n              <li>\n                <a href=\"#\" className=\"text-muted-foreground hover:text-foreground transition-colors\" data-testid=\"link-shipping\">\n                  Shipping & Returns\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-muted-foreground hover:text-foreground transition-colors\" data-testid=\"link-size-guide\">\n                  Size Guide\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-muted-foreground hover:text-foreground transition-colors\" data-testid=\"link-contact\">\n                  Contact Us\n                </a>\n              </li>\n              <li>\n                <a href=\"#\" className=\"text-muted-foreground hover:text-foreground transition-colors\" data-testid=\"link-faq\">\n                  FAQ\n                </a>\n              </li>\n            </ul>\n          </div>\n\n          {/* Newsletter */}\n          <div>\n            <h3 className=\"font-medium mb-4\" data-testid=\"text-footer-newsletter\">Newsletter</h3>\n            <p className=\"text-muted-foreground mb-4 text-sm sm:text-base\">\n              Subscribe for exclusive offers and updates\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-2\">\n              <Input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"flex-1\"\n                data-testid=\"input-newsletter\"\n              />\n              <Button onClick={handleSubscribe} className=\"w-full sm:w-auto\" data-testid=\"button-subscribe\">\n                Subscribe\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        {/* Bottom Bar */}\n        <div className=\"border-t border-border mt-8 sm:mt-10 lg:mt-12 pt-6 sm:pt-8 flex flex-col md:flex-row justify-between items-center gap-3 sm:gap-4\">\n          <p className=\"text-xs sm:text-sm text-muted-foreground\" data-testid=\"text-copyright\">\n            © 2024 LUXE. All rights reserved.\n          </p>\n\n          {/* Social Links */}\n          <div className=\"flex gap-3 sm:gap-4\">\n            <a\n              href=\"#\"\n              className=\"text-muted-foreground hover:text-foreground transition-colors\"\n              data-testid=\"link-instagram\"\n            >\n              <Instagram className=\"h-5 w-5\" />\n            </a>\n            <a\n              href=\"#\"\n              className=\"text-muted-foreground hover:text-foreground transition-colors\"\n              data-testid=\"link-facebook\"\n            >\n              <Facebook className=\"h-5 w-5\" />\n            </a>\n            <a\n              href=\"#\"\n              className=\"text-muted-foreground hover:text-foreground transition-colors\"\n              data-testid=\"link-twitter\"\n            >\n              <Twitter className=\"h-5 w-5\" />\n            </a>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":5250},"client/src/components/Header.tsx":{"content":"import { ShoppingBag, Search, Heart, Menu, User } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Link } from \"wouter\";\nimport { useState } from \"react\";\nimport MobileNav from \"./MobileNav\";\n\ninterface HeaderProps {\n  cartItemCount?: number;\n  onCartClick?: () => void;\n  onSearchChange?: (value: string) => void;\n}\n\nexport default function Header({ cartItemCount = 0, onCartClick, onSearchChange }: HeaderProps) {\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [isMobileNavOpen, setIsMobileNavOpen] = useState(false);\n\n  const handleSearchChange = (value: string) => {\n    setSearchValue(value);\n    onSearchChange?.(value);\n  };\n\n  return (\n    <header className=\"sticky top-0 z-50 bg-background border-b border-border\">\n      <div className=\"container mx-auto px-3 md:px-4\">\n        <div className=\"flex items-center justify-between h-14 md:h-16 gap-2 md:gap-4\">\n          {/* Mobile Menu */}\n          <Button \n            size=\"icon\" \n            variant=\"ghost\" \n            className=\"lg:hidden flex-shrink-0\"\n            onClick={() => setIsMobileNavOpen(true)}\n            data-testid=\"button-mobile-menu\"\n          >\n            <Menu className=\"h-5 w-5\" />\n          </Button>\n\n          {/* Logo */}\n          <div className=\"flex-shrink-0 flex-1 lg:flex-initial\">\n            <Link href=\"/\">\n              <h1 className=\"text-xl md:text-2xl font-serif font-light tracking-tight cursor-pointer hover:opacity-80 transition-opacity\" data-testid=\"text-logo\">\n                LUXE\n              </h1>\n            </Link>\n          </div>\n\n          {/* Desktop Navigation */}\n          <nav className=\"hidden lg:flex items-center gap-8 flex-1 justify-center\">\n            <Link \n              href=\"/new-arrivals\" \n              className=\"text-sm font-medium hover-elevate px-3 py-2 rounded-md transition-colors\"\n              data-testid=\"link-new-arrivals\"\n            >\n              New Arrivals\n            </Link>\n            <Link \n              href=\"/women\" \n              className=\"text-sm font-medium hover-elevate px-3 py-2 rounded-md transition-colors\"\n              data-testid=\"link-women\"\n            >\n              Women\n            </Link>\n            <Link \n              href=\"/men\" \n              className=\"text-sm font-medium hover-elevate px-3 py-2 rounded-md transition-colors\"\n              data-testid=\"link-men\"\n            >\n              Men\n            </Link>\n            <Link \n              href=\"/accessories\" \n              className=\"text-sm font-medium hover-elevate px-3 py-2 rounded-md transition-colors\"\n              data-testid=\"link-accessories\"\n            >\n              Accessories\n            </Link>\n            <Link \n              href=\"/sale\" \n              className=\"text-sm font-medium hover-elevate px-3 py-2 rounded-md transition-colors\"\n              data-testid=\"link-sale\"\n            >\n              Sale\n            </Link>\n          </nav>\n\n          {/* Search Bar (Desktop) */}\n          <div className=\"hidden md:flex items-center flex-1 max-w-md\">\n            {isSearchOpen ? (\n              <Input\n                type=\"search\"\n                placeholder=\"Search products...\"\n                value={searchValue}\n                onChange={(e) => handleSearchChange(e.target.value)}\n                onBlur={() => {\n                  if (!searchValue) setIsSearchOpen(false);\n                }}\n                className=\"w-full\"\n                autoFocus\n                data-testid=\"input-search\"\n              />\n            ) : (\n              <Button\n                size=\"icon\"\n                variant=\"ghost\"\n                onClick={() => setIsSearchOpen(true)}\n                data-testid=\"button-search\"\n              >\n                <Search className=\"h-5 w-5\" />\n              </Button>\n            )}\n          </div>\n\n          {/* Action Icons */}\n          <div className=\"flex items-center gap-1 md:gap-2 flex-shrink-0\">\n            <Button \n              size=\"icon\" \n              variant=\"ghost\" \n              className=\"md:hidden\"\n              data-testid=\"button-mobile-search\"\n            >\n              <Search className=\"h-5 w-5\" />\n            </Button>\n            \n            <Button \n              size=\"icon\" \n              variant=\"ghost\"\n              className=\"hidden sm:flex\"\n              data-testid=\"button-wishlist\"\n            >\n              <Heart className=\"h-5 w-5\" />\n            </Button>\n            \n            <Button \n              size=\"icon\" \n              variant=\"ghost\"\n              className=\"hidden sm:flex\"\n              data-testid=\"button-account\"\n            >\n              <User className=\"h-5 w-5\" />\n            </Button>\n            \n            <Button\n              size=\"icon\"\n              variant=\"ghost\"\n              onClick={onCartClick}\n              className=\"relative\"\n              data-testid=\"button-cart\"\n            >\n              <ShoppingBag className=\"h-5 w-5\" />\n              {cartItemCount > 0 && (\n                <span \n                  className=\"absolute -top-1 -right-1 bg-accent text-accent-foreground text-xs rounded-full h-5 w-5 flex items-center justify-center font-medium\"\n                  data-testid=\"text-cart-count\"\n                >\n                  {cartItemCount}\n                </span>\n              )}\n            </Button>\n          </div>\n        </div>\n      </div>\n      \n      <MobileNav isOpen={isMobileNavOpen} onClose={() => setIsMobileNavOpen(false)} />\n    </header>\n  );\n}\n","size_bytes":5635},"client/src/components/Hero.tsx":{"content":"import { Button } from \"@/components/ui/button\";\n\ninterface HeroProps {\n  title?: string;\n  subtitle?: string;\n  ctaText?: string;\n  imageSrc?: string;\n  onCtaClick?: () => void;\n}\n\nexport default function Hero({\n  title = \"Spring Collection 2024\",\n  subtitle = \"Discover timeless elegance with our new arrivals\",\n  ctaText = \"Shop Now\",\n  imageSrc,\n  onCtaClick\n}: HeroProps) {\n  return (\n    <section className=\"relative h-[60vh] sm:h-[70vh] md:h-[80vh] overflow-hidden bg-muted\">\n      {/* Hero Image */}\n      {imageSrc && (\n        <div className=\"absolute inset-0\">\n          <img\n            src={imageSrc}\n            alt=\"Hero\"\n            className=\"w-full h-full object-cover object-center\"\n            data-testid=\"img-hero\"\n          />\n          {/* Dark overlay for text readability */}\n          <div className=\"absolute inset-0 bg-gradient-to-r from-black/70 to-black/40\" />\n        </div>\n      )}\n\n      {/* Content */}\n      <div className=\"relative container mx-auto px-4 sm:px-6 h-full flex items-center\">\n        <div className=\"max-w-2xl text-white\">\n          <h2 \n            className=\"text-3xl sm:text-4xl md:text-5xl lg:text-7xl font-serif font-light mb-4 md:mb-6 leading-tight\"\n            data-testid=\"text-hero-title\"\n          >\n            {title}\n          </h2>\n          <p \n            className=\"text-base sm:text-lg md:text-xl mb-6 md:mb-8 text-white/90 max-w-lg leading-relaxed\"\n            data-testid=\"text-hero-subtitle\"\n          >\n            {subtitle}\n          </p>\n          <Button\n            size=\"lg\"\n            variant=\"outline\"\n            onClick={onCtaClick}\n            className=\"bg-white/10 backdrop-blur-sm border-white/30 text-white hover:bg-white/20 w-full sm:w-auto\"\n            data-testid=\"button-hero-cta\"\n          >\n            {ctaText}\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n","size_bytes":1879},"client/src/components/HeroCarousel.tsx":{"content":"import useEmblaCarousel from 'embla-carousel-react';\nimport Autoplay from 'embla-carousel-autoplay';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\n\ninterface HeroSlide {\n  id: string;\n  title: string;\n  subtitle: string;\n  ctaText: string;\n  imageSrc: string;\n  onCtaClick?: () => void;\n}\n\ninterface HeroCarouselProps {\n  slides: HeroSlide[];\n}\n\nexport default function HeroCarousel({ slides }: HeroCarouselProps) {\n  const [emblaRef, emblaApi] = useEmblaCarousel(\n    { loop: true, duration: 30 },\n    [Autoplay({ delay: 5000, stopOnInteraction: false })]\n  );\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const scrollPrev = useCallback(() => {\n    if (emblaApi) emblaApi.scrollPrev();\n  }, [emblaApi]);\n\n  const scrollNext = useCallback(() => {\n    if (emblaApi) emblaApi.scrollNext();\n  }, [emblaApi]);\n\n  const scrollTo = useCallback((index: number) => {\n    if (emblaApi) emblaApi.scrollTo(index);\n  }, [emblaApi]);\n\n  const onSelect = useCallback(() => {\n    if (!emblaApi) return;\n    setSelectedIndex(emblaApi.selectedScrollSnap());\n  }, [emblaApi]);\n\n  useEffect(() => {\n    if (!emblaApi) return;\n    onSelect();\n    emblaApi.on('select', onSelect);\n    emblaApi.on('reInit', onSelect);\n  }, [emblaApi, onSelect]);\n\n  return (\n    <div className=\"relative\" data-testid=\"carousel-hero\">\n      <div className=\"overflow-hidden\" ref={emblaRef}>\n        <div className=\"flex\">\n          {slides.map((slide) => (\n            <div key={slide.id} className=\"flex-[0_0_100%] min-w-0\">\n              <section className=\"relative h-[60vh] sm:h-[70vh] md:h-[80vh] overflow-hidden bg-muted\">\n                <div className=\"absolute inset-0\">\n                  <img\n                    src={slide.imageSrc}\n                    alt={slide.title}\n                    className=\"w-full h-full object-cover object-center animate-ken-burns\"\n                    data-testid={`img-hero-${slide.id}`}\n                  />\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-black/70 to-black/40\" />\n                </div>\n\n                <div className=\"relative container mx-auto px-4 sm:px-6 h-full flex items-center\">\n                  <div className=\"max-w-2xl text-white animate-fade-in-up\">\n                    <h2 \n                      className=\"text-3xl sm:text-4xl md:text-5xl lg:text-7xl font-serif font-light mb-4 md:mb-6 leading-tight\"\n                      data-testid={`text-hero-title-${slide.id}`}\n                    >\n                      {slide.title}\n                    </h2>\n                    <p \n                      className=\"text-base sm:text-lg md:text-xl mb-6 md:mb-8 text-white/90 max-w-lg leading-relaxed\"\n                      data-testid={`text-hero-subtitle-${slide.id}`}\n                    >\n                      {slide.subtitle}\n                    </p>\n                    <Button\n                      size=\"lg\"\n                      variant=\"outline\"\n                      onClick={slide.onCtaClick}\n                      className=\"bg-white/10 backdrop-blur-sm border-white/30 text-white hover:bg-white/20 w-full sm:w-auto transition-all hover:scale-105\"\n                      data-testid={`button-hero-cta-${slide.id}`}\n                    >\n                      {slide.ctaText}\n                    </Button>\n                  </div>\n                </div>\n              </section>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Navigation Arrows */}\n      <Button\n        size=\"icon\"\n        variant=\"ghost\"\n        onClick={scrollPrev}\n        className=\"absolute left-4 top-1/2 -translate-y-1/2 bg-white/10 backdrop-blur-sm border border-white/30 text-white hover:bg-white/20 hidden md:flex\"\n        data-testid=\"button-carousel-prev\"\n      >\n        <ChevronLeft className=\"h-6 w-6\" />\n      </Button>\n      <Button\n        size=\"icon\"\n        variant=\"ghost\"\n        onClick={scrollNext}\n        className=\"absolute right-4 top-1/2 -translate-y-1/2 bg-white/10 backdrop-blur-sm border border-white/30 text-white hover:bg-white/20 hidden md:flex\"\n        data-testid=\"button-carousel-next\"\n      >\n        <ChevronRight className=\"h-6 w-6\" />\n      </Button>\n\n      {/* Dot Indicators */}\n      <div className=\"absolute bottom-8 left-1/2 -translate-x-1/2 flex gap-2\">\n        {slides.map((_, index) => (\n          <button\n            key={index}\n            onClick={() => scrollTo(index)}\n            className={`h-2 rounded-full transition-all ${\n              index === selectedIndex \n                ? 'w-8 bg-white' \n                : 'w-2 bg-white/50 hover:bg-white/70'\n            }`}\n            data-testid={`button-carousel-dot-${index}`}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","size_bytes":4828},"client/src/components/LoadingScreen.tsx":{"content":"import { useEffect, useState } from 'react';\n\nexport default function LoadingScreen() {\n  const [isVisible, setIsVisible] = useState(true);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsVisible(false);\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  if (!isVisible) return null;\n\n  return (\n    <div \n      className=\"fixed inset-0 z-50 bg-background flex items-center justify-center animate-fade-out\"\n      data-testid=\"screen-loading\"\n    >\n      <div className=\"text-center\">\n        <h1 className=\"text-4xl md:text-6xl font-serif font-light mb-4 animate-fade-in-up\">\n          LUXE\n        </h1>\n        <div className=\"flex gap-2 justify-center\">\n          <div className=\"w-2 h-2 rounded-full bg-accent animate-pulse-subtle\" style={{ animationDelay: '0ms' }} />\n          <div className=\"w-2 h-2 rounded-full bg-accent animate-pulse-subtle\" style={{ animationDelay: '200ms' }} />\n          <div className=\"w-2 h-2 rounded-full bg-accent animate-pulse-subtle\" style={{ animationDelay: '400ms' }} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":1091},"client/src/components/MobileNav.tsx":{"content":"import { X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Link } from \"wouter\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetDescription,\n} from \"@/components/ui/sheet\";\n\ninterface MobileNavProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function MobileNav({ isOpen, onClose }: MobileNavProps) {\n  const navLinks = [\n    { label: 'New Arrivals', href: '/new-arrivals' },\n    { label: 'Women', href: '/women' },\n    { label: 'Men', href: '/men' },\n    { label: 'Accessories', href: '/accessories' },\n    { label: 'Sale', href: '/sale' },\n  ];\n\n  return (\n    <Sheet open={isOpen} onOpenChange={onClose}>\n      <SheetContent side=\"left\" className=\"w-full sm:max-w-md\" data-testid=\"nav-mobile\">\n        <SheetHeader>\n          <SheetTitle className=\"text-2xl font-serif font-light\">Menu</SheetTitle>\n          <SheetDescription>\n            Navigate to different sections of our store\n          </SheetDescription>\n        </SheetHeader>\n\n        <nav className=\"mt-8\">\n          <ul className=\"space-y-1\">\n            {navLinks.map((link) => (\n              <li key={link.href}>\n                <Link\n                  href={link.href}\n                  onClick={onClose}\n                  className=\"block px-4 py-3 text-lg hover-elevate rounded-md transition-colors\"\n                  data-testid={`link-mobile-${link.label.toLowerCase().replace(' ', '-')}`}\n                >\n                  {link.label}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n\n        <div className=\"absolute bottom-8 left-6 right-6\">\n          <div className=\"border-t border-border pt-6\">\n            <p className=\"text-sm text-muted-foreground\">\n              © 2024 LUXE\n            </p>\n          </div>\n        </div>\n      </SheetContent>\n    </Sheet>\n  );\n}\n","size_bytes":1870},"client/src/components/ParallaxSection.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\nimport { Button } from '@/components/ui/button';\n\ninterface ParallaxSectionProps {\n  imageSrc: string;\n  title: string;\n  subtitle?: string;\n  ctaText?: string;\n  onCtaClick?: () => void;\n  height?: 'sm' | 'md' | 'lg';\n}\n\nexport default function ParallaxSection({\n  imageSrc,\n  title,\n  subtitle,\n  ctaText,\n  onCtaClick,\n  height = 'md'\n}: ParallaxSectionProps) {\n  const [offsetY, setOffsetY] = useState(0);\n  const sectionRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (!sectionRef.current) return;\n      \n      const rect = sectionRef.current.getBoundingClientRect();\n      const scrollPercent = (window.innerHeight - rect.top) / (window.innerHeight + rect.height);\n      setOffsetY(scrollPercent * 100);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const heightClasses = {\n    sm: 'h-64 md:h-80',\n    md: 'h-80 md:h-96',\n    lg: 'h-96 md:h-[32rem]'\n  };\n\n  return (\n    <div \n      ref={sectionRef}\n      className={`relative ${heightClasses[height]} overflow-hidden`}\n      data-testid=\"section-parallax\"\n    >\n      <div \n        className=\"absolute inset-0 w-full h-[120%]\"\n        style={{ \n          transform: `translateY(${offsetY * -0.5}px)`,\n          transition: 'transform 0.1s ease-out'\n        }}\n      >\n        <img\n          src={imageSrc}\n          alt={title}\n          className=\"w-full h-full object-cover\"\n          data-testid=\"img-parallax\"\n        />\n        <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-black/30 to-transparent\" />\n      </div>\n\n      <div className=\"relative h-full flex items-center justify-center text-center text-white px-4\">\n        <div className=\"max-w-3xl animate-fade-in-up\">\n          <h2 \n            className=\"text-3xl sm:text-4xl md:text-5xl lg:text-6xl font-serif font-light mb-4\"\n            data-testid=\"text-parallax-title\"\n          >\n            {title}\n          </h2>\n          {subtitle && (\n            <p \n              className=\"text-base sm:text-lg md:text-xl mb-6 text-white/90\"\n              data-testid=\"text-parallax-subtitle\"\n            >\n              {subtitle}\n            </p>\n          )}\n          {ctaText && (\n            <Button\n              size=\"lg\"\n              variant=\"outline\"\n              onClick={onCtaClick}\n              className=\"bg-white/10 backdrop-blur-sm border-white/30 text-white hover:bg-white/20 transition-all hover:scale-105\"\n              data-testid=\"button-parallax-cta\"\n            >\n              {ctaText}\n            </Button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":2733},"client/src/components/ProductCard.tsx":{"content":"import { Heart, ShoppingBag } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useState } from \"react\";\n\ninterface ProductCardProps {\n  id: string;\n  name: string;\n  price: number;\n  image: string;\n  hoverImage?: string;\n  category?: string;\n  isNew?: boolean;\n  isSale?: boolean;\n  salePrice?: number;\n  onAddToCart?: (id: string) => void;\n  onWishlist?: (id: string) => void;\n}\n\nexport default function ProductCard({\n  id,\n  name,\n  price,\n  image,\n  hoverImage,\n  category,\n  isNew,\n  isSale,\n  salePrice,\n  onAddToCart,\n  onWishlist\n}: ProductCardProps) {\n  const [isHovered, setIsHovered] = useState(false);\n  const [isWishlisted, setIsWishlisted] = useState(false);\n\n  const handleWishlist = () => {\n    setIsWishlisted(!isWishlisted);\n    onWishlist?.(id);\n  };\n\n  const displayPrice = isSale && salePrice ? salePrice : price;\n  const hasDiscount = isSale && salePrice && salePrice < price;\n\n  return (\n    <div\n      className=\"group relative\"\n      onMouseEnter={() => setIsHovered(true)}\n      onMouseLeave={() => setIsHovered(false)}\n      data-testid={`card-product-${id}`}\n    >\n      {/* Image Container */}\n      <div className=\"relative aspect-[3/4] overflow-hidden bg-muted mb-4 rounded-md\">\n        <img\n          src={isHovered && hoverImage ? hoverImage : image}\n          alt={name}\n          className=\"w-full h-full object-cover transition-transform duration-500 group-hover:scale-105\"\n          data-testid={`img-product-${id}`}\n        />\n\n        {/* Badges */}\n        <div className=\"absolute top-3 left-3 flex flex-col gap-2\">\n          {isNew && (\n            <Badge className=\"bg-primary text-primary-foreground\" data-testid=\"badge-new\">\n              New\n            </Badge>\n          )}\n          {isSale && (\n            <Badge className=\"bg-accent text-accent-foreground\" data-testid=\"badge-sale\">\n              Sale\n            </Badge>\n          )}\n        </div>\n\n        {/* Actions on Hover (Desktop) / Always Visible (Mobile) */}\n        <div className=\"absolute inset-x-2 sm:inset-x-3 bottom-2 sm:bottom-3 flex gap-2 opacity-100 md:opacity-0 md:group-hover:opacity-100 transition-opacity duration-300\">\n          <Button\n            size=\"sm\"\n            className=\"flex-1 text-xs sm:text-sm\"\n            onClick={() => onAddToCart?.(id)}\n            data-testid={`button-add-to-cart-${id}`}\n          >\n            <ShoppingBag className=\"h-3 w-3 sm:h-4 sm:w-4 sm:mr-2\" />\n            <span className=\"hidden sm:inline\">Add to Cart</span>\n          </Button>\n          <Button\n            size=\"icon\"\n            variant={isWishlisted ? \"default\" : \"secondary\"}\n            onClick={handleWishlist}\n            className=\"h-8 w-8 sm:h-9 sm:w-9\"\n            data-testid={`button-wishlist-${id}`}\n          >\n            <Heart className={`h-3 w-3 sm:h-4 sm:w-4 ${isWishlisted ? 'fill-current' : ''}`} />\n          </Button>\n        </div>\n      </div>\n\n      {/* Product Info */}\n      <div className=\"space-y-1 px-1\">\n        {category && (\n          <p className=\"text-xs text-muted-foreground uppercase tracking-wider truncate\" data-testid={`text-category-${id}`}>\n            {category}\n          </p>\n        )}\n        <h3 className=\"font-medium text-sm sm:text-base truncate\" data-testid={`text-name-${id}`}>\n          {name}\n        </h3>\n        <div className=\"flex items-center gap-2 flex-wrap\">\n          <span className=\"font-medium text-sm sm:text-base\" data-testid={`text-price-${id}`}>\n            ${displayPrice}\n          </span>\n          {hasDiscount && (\n            <span className=\"text-xs sm:text-sm text-muted-foreground line-through\" data-testid={`text-original-price-${id}`}>\n              ${price}\n            </span>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3825},"client/src/components/ProductCarousel.tsx":{"content":"import useEmblaCarousel from 'embla-carousel-react';\nimport { useCallback, useEffect, useState } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { ChevronLeft, ChevronRight } from 'lucide-react';\nimport ProductCard from './ProductCard';\n\ninterface Product {\n  id: string;\n  name: string;\n  price: number;\n  image: string;\n  hoverImage?: string;\n  category?: string;\n  isNew?: boolean;\n  isSale?: boolean;\n  salePrice?: number;\n}\n\ninterface ProductCarouselProps {\n  title: string;\n  products: Product[];\n  onAddToCart?: (id: string) => void;\n  onWishlist?: (id: string) => void;\n}\n\nexport default function ProductCarousel({ \n  title, \n  products, \n  onAddToCart, \n  onWishlist \n}: ProductCarouselProps) {\n  const [emblaRef, emblaApi] = useEmblaCarousel({\n    align: 'start',\n    slidesToScroll: 1,\n    breakpoints: {\n      '(min-width: 640px)': { slidesToScroll: 2 },\n      '(min-width: 1024px)': { slidesToScroll: 3 },\n    },\n  });\n\n  const [canScrollPrev, setCanScrollPrev] = useState(false);\n  const [canScrollNext, setCanScrollNext] = useState(false);\n\n  const scrollPrev = useCallback(() => {\n    if (emblaApi) emblaApi.scrollPrev();\n  }, [emblaApi]);\n\n  const scrollNext = useCallback(() => {\n    if (emblaApi) emblaApi.scrollNext();\n  }, [emblaApi]);\n\n  const onSelect = useCallback(() => {\n    if (!emblaApi) return;\n    setCanScrollPrev(emblaApi.canScrollPrev());\n    setCanScrollNext(emblaApi.canScrollNext());\n  }, [emblaApi]);\n\n  useEffect(() => {\n    if (!emblaApi) return;\n    onSelect();\n    emblaApi.on('select', onSelect);\n    emblaApi.on('reInit', onSelect);\n  }, [emblaApi, onSelect]);\n\n  return (\n    <div className=\"animate-fade-in\">\n      <div className=\"flex items-center justify-between mb-8\">\n        <h2 className=\"text-2xl sm:text-3xl md:text-4xl font-serif font-light\" data-testid=\"text-carousel-title\">\n          {title}\n        </h2>\n        <div className=\"flex gap-2\">\n          <Button\n            size=\"icon\"\n            variant=\"outline\"\n            onClick={scrollPrev}\n            disabled={!canScrollPrev}\n            className=\"hidden md:flex\"\n            data-testid=\"button-product-carousel-prev\"\n          >\n            <ChevronLeft className=\"h-4 w-4\" />\n          </Button>\n          <Button\n            size=\"icon\"\n            variant=\"outline\"\n            onClick={scrollNext}\n            disabled={!canScrollNext}\n            className=\"hidden md:flex\"\n            data-testid=\"button-product-carousel-next\"\n          >\n            <ChevronRight className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"overflow-hidden\" ref={emblaRef}>\n        <div className=\"flex gap-4 md:gap-6\">\n          {products.map((product) => (\n            <div \n              key={product.id} \n              className=\"flex-[0_0_50%] sm:flex-[0_0_45%] md:flex-[0_0_32%] lg:flex-[0_0_24%] min-w-0\"\n            >\n              <ProductCard\n                {...product}\n                onAddToCart={onAddToCart}\n                onWishlist={onWishlist}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":3127},"client/src/components/ProductGrid.tsx":{"content":"import ProductCard from \"./ProductCard\";\n\ninterface Product {\n  id: string;\n  name: string;\n  price: number;\n  image: string;\n  hoverImage?: string;\n  category?: string;\n  isNew?: boolean;\n  isSale?: boolean;\n  salePrice?: number;\n}\n\ninterface ProductGridProps {\n  products: Product[];\n  onAddToCart?: (id: string) => void;\n  onWishlist?: (id: string) => void;\n}\n\nexport default function ProductGrid({ products, onAddToCart, onWishlist }: ProductGridProps) {\n  return (\n    <div \n      className=\"grid grid-cols-2 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3 sm:gap-4 md:gap-6 lg:gap-8\"\n      data-testid=\"grid-products\"\n    >\n      {products.map((product) => (\n        <ProductCard\n          key={product.id}\n          {...product}\n          onAddToCart={onAddToCart}\n          onWishlist={onWishlist}\n        />\n      ))}\n    </div>\n  );\n}\n","size_bytes":848},"client/src/components/ThemeToggle.tsx":{"content":"import { Moon, Sun } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useEffect, useState } from \"react\";\n\nexport default function ThemeToggle() {\n  const [theme, setTheme] = useState<'light' | 'dark'>('light');\n\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme') as 'light' | 'dark' || 'light';\n    setTheme(savedTheme);\n    document.documentElement.classList.toggle('dark', savedTheme === 'dark');\n  }, []);\n\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n    localStorage.setItem('theme', newTheme);\n    document.documentElement.classList.toggle('dark', newTheme === 'dark');\n  };\n\n  return (\n    <Button\n      size=\"icon\"\n      variant=\"ghost\"\n      onClick={toggleTheme}\n      data-testid=\"button-theme-toggle\"\n    >\n      {theme === 'light' ? (\n        <Moon className=\"h-5 w-5\" />\n      ) : (\n        <Sun className=\"h-5 w-5\" />\n      )}\n    </Button>\n  );\n}\n","size_bytes":984},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useScrollAnimation.tsx":{"content":"import { useEffect, useRef, useState } from 'react';\n\ninterface UseScrollAnimationOptions {\n  threshold?: number;\n  triggerOnce?: boolean;\n}\n\nexport function useScrollAnimation(options: UseScrollAnimationOptions = {}) {\n  const { threshold = 0.1, triggerOnce = true } = options;\n  const ref = useRef<HTMLDivElement>(null);\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsVisible(true);\n          if (triggerOnce && ref.current) {\n            observer.unobserve(ref.current);\n          }\n        } else if (!triggerOnce) {\n          setIsVisible(false);\n        }\n      },\n      { threshold }\n    );\n\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => {\n      if (ref.current) {\n        observer.unobserve(ref.current);\n      }\n    };\n  }, [threshold, triggerOnce]);\n\n  return { ref, isVisible };\n}\n","size_bytes":976},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/AccessoriesPage.tsx":{"content":"import { useState, useCallback, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport useEmblaCarousel from 'embla-carousel-react';\nimport Autoplay from 'embla-carousel-autoplay';\nimport Header from \"@/components/Header\";\nimport ProductGrid from \"@/components/ProductGrid\";\nimport Footer from \"@/components/Footer\";\nimport CartDrawer from \"@/components/CartDrawer\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Sparkles, ChevronLeft, ChevronRight, Award, Star } from \"lucide-react\";\nimport ProductCard from \"@/components/ProductCard\";\n\nimport sneakers from '@assets/generated_images/White_minimalist_fashion_sneakers_ba10d597.png';\nimport handbag from '@assets/generated_images/Brown_leather_luxury_handbag_1cdfb11b.png';\n\nconst mockProducts = [\n  { id: '3', name: 'Classic White Sneakers', price: 129, image: sneakers, category: 'Footwear' },\n  { id: '7', name: 'Leather Handbag', price: 279, image: handbag, category: 'Bags' },\n  { id: '10', name: 'Designer Sneakers', price: 149, image: sneakers, category: 'Footwear' },\n  { id: '11', name: 'Evening Clutch', price: 189, image: handbag, category: 'Bags' },\n];\n\nconst showcaseProducts = [\n  { \n    id: 'showcase-1', \n    name: 'Signature Leather Tote', \n    price: 349, \n    image: handbag, \n    category: 'Bags',\n    description: 'Handcrafted Italian leather with gold-tone hardware'\n  },\n  { \n    id: 'showcase-2', \n    name: 'Premium Sport Sneakers', \n    price: 179, \n    image: sneakers, \n    category: 'Footwear',\n    description: 'Engineered comfort meets contemporary design'\n  },\n  { \n    id: 'showcase-3', \n    name: 'Designer Crossbody', \n    price: 229, \n    image: handbag, \n    category: 'Bags',\n    description: 'Versatile elegance for day to evening'\n  },\n];\n\nconst productAngles = [\n  { id: 1, image: handbag, label: 'Front View' },\n  { id: 2, image: handbag, label: 'Side Profile' },\n  { id: 3, image: handbag, label: 'Interior' },\n  { id: 4, image: handbag, label: 'Detail Shot' },\n];\n\nconst brands = [\n  { id: 'brand-1', name: 'MAISON LUXE', specialty: 'Premium Leather Goods', icon: Award },\n  { id: 'brand-2', name: 'ATELIER GOLD', specialty: 'Fine Jewelry', icon: Star },\n  { id: 'brand-3', name: 'NOIR COLLECTION', specialty: 'Designer Accessories', icon: Sparkles },\n  { id: 'brand-4', name: 'ESSENCE', specialty: 'Timeless Elegance', icon: Award },\n];\n\ninterface CartItem {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n  size?: string;\n}\n\nexport default function AccessoriesPage() {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n\n  const [showcaseRef, showcaseApi] = useEmblaCarousel(\n    { loop: true, duration: 30 },\n    [Autoplay({ delay: 4000, stopOnInteraction: false })]\n  );\n  const [showcaseIndex, setShowcaseIndex] = useState(0);\n\n  const [productDetailRef, productDetailApi] = useEmblaCarousel({ loop: true });\n  const [detailIndex, setDetailIndex] = useState(0);\n\n  const [brandsRef, brandsApi] = useEmblaCarousel(\n    { loop: true, align: 'start' },\n    [Autoplay({ delay: 3500, stopOnInteraction: false })]\n  );\n\n  const onShowcaseSelect = useCallback(() => {\n    if (!showcaseApi) return;\n    setShowcaseIndex(showcaseApi.selectedScrollSnap());\n  }, [showcaseApi]);\n\n  const onDetailSelect = useCallback(() => {\n    if (!productDetailApi) return;\n    setDetailIndex(productDetailApi.selectedScrollSnap());\n  }, [productDetailApi]);\n\n  useEffect(() => {\n    if (!showcaseApi) return;\n    onShowcaseSelect();\n    showcaseApi.on('select', onShowcaseSelect);\n  }, [showcaseApi, onShowcaseSelect]);\n\n  useEffect(() => {\n    if (!productDetailApi) return;\n    onDetailSelect();\n    productDetailApi.on('select', onDetailSelect);\n  }, [productDetailApi, onDetailSelect]);\n\n  const scrollShowcasePrev = useCallback(() => {\n    if (showcaseApi) showcaseApi.scrollPrev();\n  }, [showcaseApi]);\n\n  const scrollShowcaseNext = useCallback(() => {\n    if (showcaseApi) showcaseApi.scrollNext();\n  }, [showcaseApi]);\n\n  const scrollDetailPrev = useCallback(() => {\n    if (productDetailApi) productDetailApi.scrollPrev();\n  }, [productDetailApi]);\n\n  const scrollDetailNext = useCallback(() => {\n    if (productDetailApi) productDetailApi.scrollNext();\n  }, [productDetailApi]);\n\n  const handleAddToCart = (productId: string) => {\n    const allProducts = [...mockProducts, ...showcaseProducts];\n    const product = allProducts.find(p => p.id === productId);\n    if (!product) return;\n\n    const existingItem = cartItems.find(item => item.id === productId);\n    \n    if (existingItem) {\n      setCartItems(cartItems.map(item =>\n        item.id === productId\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      setCartItems([...cartItems, {\n        id: product.id,\n        name: product.name,\n        price: product.price,\n        quantity: 1,\n        image: product.image,\n      }]);\n    }\n  };\n\n  const handleUpdateQuantity = (id: string, quantity: number) => {\n    if (quantity === 0) {\n      handleRemoveItem(id);\n    } else {\n      setCartItems(cartItems.map(item =>\n        item.id === id ? { ...item, quantity } : item\n      ));\n    }\n  };\n\n  const handleRemoveItem = (id: string) => {\n    setCartItems(cartItems.filter(item => item.id !== id));\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <div className=\"flex items-center justify-end p-3 md:p-4 border-b\">\n        <ThemeToggle />\n      </div>\n      \n      <Header \n        cartItemCount={cartItems.reduce((sum, item) => sum + item.quantity, 0)}\n        onCartClick={() => setIsCartOpen(true)}\n      />\n\n      <main className=\"flex-1\">\n        {/* Hero Section */}\n        <section className=\"relative overflow-hidden\">\n          <div className=\"absolute inset-0 bg-[radial-gradient(circle_at_top_right,_var(--tw-gradient-stops))] from-amber-500/20 via-background to-background\" />\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-20 md:py-32 relative\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              className=\"max-w-4xl mx-auto text-center\"\n            >\n              <Badge className=\"mb-6 gap-1 bg-amber-500/10 text-amber-700 dark:text-amber-400 border-amber-500/20\" data-testid=\"badge-curated\">\n                <Sparkles className=\"w-3 h-3\" />\n                Curated Collection\n              </Badge>\n              <h1 className=\"text-5xl sm:text-6xl md:text-7xl lg:text-8xl font-serif font-light mb-6\" data-testid=\"text-page-title\">\n                Accessories\n              </h1>\n              <p className=\"text-lg sm:text-xl text-muted-foreground max-w-2xl mx-auto\" data-testid=\"text-page-subtitle\">\n                The perfect finishing touches. Handpicked accessories to complete your signature look.\n              </p>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Curated Showcase Carousel with Autoplay */}\n        <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16\">\n          <motion.div\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"mb-8\"\n          >\n            <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-serif font-light mb-2\" data-testid=\"text-showcase-title\">\n              Signature Selections\n            </h2>\n            <p className=\"text-muted-foreground text-lg\" data-testid=\"text-showcase-subtitle\">\n              Our most coveted pieces, curated for the discerning collector\n            </p>\n          </motion.div>\n\n          <div className=\"relative\" data-testid=\"carousel-showcase\">\n            <div className=\"overflow-hidden\" ref={showcaseRef}>\n              <div className=\"flex\">\n                {showcaseProducts.map((product, index) => (\n                  <div key={product.id} className=\"flex-[0_0_100%] min-w-0 px-2\">\n                    <motion.div\n                      initial={{ opacity: 0, y: 20 }}\n                      whileInView={{ opacity: 1, y: 0 }}\n                      transition={{ duration: 0.6, delay: index * 0.1 }}\n                      viewport={{ once: true }}\n                      className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 items-center bg-gradient-to-br from-amber-500/5 to-transparent rounded-2xl p-6 md:p-12 border border-amber-500/10\"\n                      data-testid={`card-showcase-${product.id}`}\n                    >\n                      <div className=\"order-2 lg:order-1 space-y-6\">\n                        <Badge variant=\"outline\" className=\"border-amber-500/30 text-amber-700 dark:text-amber-400\" data-testid={`badge-showcase-${product.id}`}>\n                          Featured\n                        </Badge>\n                        <h3 className=\"text-3xl sm:text-4xl md:text-5xl font-serif font-light\" data-testid={`text-showcase-name-${product.id}`}>\n                          {product.name}\n                        </h3>\n                        <p className=\"text-lg text-muted-foreground\" data-testid={`text-showcase-desc-${product.id}`}>\n                          {product.description}\n                        </p>\n                        <div className=\"flex items-baseline gap-3\">\n                          <span className=\"text-4xl font-semibold text-amber-700 dark:text-amber-400\" data-testid={`text-showcase-price-${product.id}`}>\n                            ${product.price}\n                          </span>\n                        </div>\n                        <Button \n                          size=\"lg\" \n                          onClick={() => handleAddToCart(product.id)}\n                          className=\"bg-amber-600 hover:bg-amber-700 text-white w-full sm:w-auto\"\n                          data-testid={`button-add-to-cart-${product.id}`}\n                        >\n                          Add to Cart\n                        </Button>\n                      </div>\n                      <motion.div \n                        className=\"order-1 lg:order-2 aspect-square rounded-xl overflow-hidden\"\n                        whileHover={{ scale: 1.02 }}\n                        transition={{ duration: 0.3 }}\n                      >\n                        <img \n                          src={product.image} \n                          alt={product.name} \n                          className=\"w-full h-full object-cover\"\n                          data-testid={`img-showcase-${product.id}`}\n                        />\n                      </motion.div>\n                    </motion.div>\n                  </div>\n                ))}\n              </div>\n            </div>\n\n            <Button\n              size=\"icon\"\n              variant=\"outline\"\n              onClick={scrollShowcasePrev}\n              className=\"absolute left-4 top-1/2 -translate-y-1/2 hidden md:flex bg-background/80 backdrop-blur-sm border-amber-500/20\"\n              data-testid=\"button-showcase-prev\"\n            >\n              <ChevronLeft className=\"h-4 w-4\" />\n            </Button>\n            <Button\n              size=\"icon\"\n              variant=\"outline\"\n              onClick={scrollShowcaseNext}\n              className=\"absolute right-4 top-1/2 -translate-y-1/2 hidden md:flex bg-background/80 backdrop-blur-sm border-amber-500/20\"\n              data-testid=\"button-showcase-next\"\n            >\n              <ChevronRight className=\"h-4 w-4\" />\n            </Button>\n\n            <div className=\"flex justify-center gap-2 mt-6\">\n              {showcaseProducts.map((_, index) => (\n                <button\n                  key={index}\n                  onClick={() => showcaseApi?.scrollTo(index)}\n                  className={`h-2 rounded-full transition-all ${\n                    index === showcaseIndex \n                      ? 'w-8 bg-amber-600' \n                      : 'w-2 bg-amber-600/30'\n                  }`}\n                  data-testid={`button-showcase-dot-${index}`}\n                />\n              ))}\n            </div>\n          </div>\n        </section>\n\n        {/* Interactive Categories Grid with Animated Reveal */}\n        <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16\">\n          <motion.div\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"mb-8\"\n          >\n            <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-serif font-light mb-2\" data-testid=\"text-categories-title\">\n              Shop by Category\n            </h2>\n            <p className=\"text-muted-foreground text-lg\" data-testid=\"text-categories-subtitle\">\n              Discover our complete accessory collection\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            {[\n              { name: \"Bags\", count: 28, color: \"amber\" },\n              { name: \"Footwear\", count: 42, color: \"amber\" },\n              { name: \"Jewelry\", count: 35, color: \"amber\" },\n              { name: \"Others\", count: 18, color: \"amber\" }\n            ].map((category, index) => (\n              <motion.button\n                key={category.name}\n                initial={{ opacity: 0, y: 30, scale: 0.95 }}\n                whileInView={{ opacity: 1, y: 0, scale: 1 }}\n                whileHover={{ y: -4, scale: 1.02 }}\n                transition={{ \n                  duration: 0.5, \n                  delay: index * 0.1,\n                  type: \"spring\",\n                  stiffness: 300\n                }}\n                viewport={{ once: true }}\n                className=\"group p-6 border rounded-lg hover-elevate transition-all text-left relative overflow-hidden\"\n                data-testid={`button-category-${category.name.toLowerCase()}`}\n              >\n                <div className=\"absolute inset-0 bg-gradient-to-br from-amber-500/0 to-amber-500/0 group-hover:from-amber-500/5 group-hover:to-amber-500/10 transition-all duration-300\" />\n                <div className=\"relative\">\n                  <h3 className=\"text-lg font-semibold mb-1\" data-testid={`text-category-name-${category.name.toLowerCase()}`}>\n                    {category.name}\n                  </h3>\n                  <p className=\"text-sm text-muted-foreground\" data-testid={`text-category-count-${category.name.toLowerCase()}`}>\n                    {category.count} items\n                  </p>\n                  <motion.div \n                    className=\"absolute -bottom-1 -right-1 w-12 h-12 bg-amber-500/10 rounded-full blur-xl\"\n                    animate={{ scale: [1, 1.2, 1] }}\n                    transition={{ duration: 2, repeat: Infinity }}\n                  />\n                </div>\n              </motion.button>\n            ))}\n          </div>\n        </section>\n\n        {/* Featured Brands Slider */}\n        <section className=\"bg-gradient-to-br from-amber-500/5 to-transparent py-16 md:py-20\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0 }}\n              whileInView={{ opacity: 1 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"text-center mb-12\"\n            >\n              <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-serif font-light mb-4\" data-testid=\"text-brands-title\">\n                Designer Collaborations\n              </h2>\n              <p className=\"text-muted-foreground text-lg max-w-2xl mx-auto\" data-testid=\"text-brands-subtitle\">\n                Partnering with the world's finest artisans and heritage brands\n              </p>\n            </motion.div>\n\n            <div className=\"relative\" data-testid=\"carousel-brands\">\n              <div className=\"overflow-hidden\" ref={brandsRef}>\n                <div className=\"flex gap-6\">\n                  {brands.map((brand, index) => {\n                    const Icon = brand.icon;\n                    return (\n                      <div key={brand.id} className=\"flex-[0_0_100%] sm:flex-[0_0_50%] lg:flex-[0_0_33.33%] min-w-0 px-2\">\n                        <motion.div\n                          initial={{ opacity: 0, scale: 0.9 }}\n                          whileInView={{ opacity: 1, scale: 1 }}\n                          whileHover={{ y: -8 }}\n                          transition={{ duration: 0.4, delay: index * 0.1 }}\n                          viewport={{ once: true }}\n                          className=\"bg-background border border-amber-500/20 rounded-xl p-8 text-center hover-elevate\"\n                          data-testid={`card-brand-${brand.id}`}\n                        >\n                          <div className=\"inline-flex items-center justify-center w-16 h-16 rounded-full bg-amber-500/10 mb-6\">\n                            <Icon className=\"w-8 h-8 text-amber-600\" data-testid={`icon-brand-${brand.id}`} />\n                          </div>\n                          <h3 className=\"text-xl font-semibold mb-2 tracking-wider\" data-testid={`text-brand-name-${brand.id}`}>\n                            {brand.name}\n                          </h3>\n                          <p className=\"text-sm text-muted-foreground\" data-testid={`text-brand-specialty-${brand.id}`}>\n                            {brand.specialty}\n                          </p>\n                        </motion.div>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Product Detail Carousel - Different Angles */}\n        <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-20\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n            <div className=\"relative\" data-testid=\"carousel-product-detail\">\n              <div className=\"overflow-hidden rounded-2xl\" ref={productDetailRef}>\n                <div className=\"flex\">\n                  {productAngles.map((angle) => (\n                    <div key={angle.id} className=\"flex-[0_0_100%] min-w-0\">\n                      <motion.div \n                        className=\"aspect-square\"\n                        whileHover={{ scale: 1.02 }}\n                        transition={{ duration: 0.3 }}\n                      >\n                        <img \n                          src={angle.image} \n                          alt={angle.label}\n                          className=\"w-full h-full object-cover rounded-2xl\"\n                          data-testid={`img-detail-angle-${angle.id}`}\n                        />\n                      </motion.div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={scrollDetailPrev}\n                className=\"absolute left-4 top-1/2 -translate-y-1/2 bg-background/80 backdrop-blur-sm\"\n                data-testid=\"button-detail-prev\"\n              >\n                <ChevronLeft className=\"h-4 w-4\" />\n              </Button>\n              <Button\n                size=\"icon\"\n                variant=\"outline\"\n                onClick={scrollDetailNext}\n                className=\"absolute right-4 top-1/2 -translate-y-1/2 bg-background/80 backdrop-blur-sm\"\n                data-testid=\"button-detail-next\"\n              >\n                <ChevronRight className=\"h-4 w-4\" />\n              </Button>\n\n              <div className=\"flex justify-center gap-2 mt-6\">\n                {productAngles.map((angle, index) => (\n                  <button\n                    key={angle.id}\n                    onClick={() => productDetailApi?.scrollTo(index)}\n                    className=\"group\"\n                    data-testid={`button-detail-thumbnail-${angle.id}`}\n                  >\n                    <div className={`w-16 h-16 rounded-lg overflow-hidden border-2 transition-all ${\n                      index === detailIndex \n                        ? 'border-amber-600 ring-2 ring-amber-600/20' \n                        : 'border-transparent opacity-60 hover:opacity-100'\n                    }`}>\n                      <img \n                        src={angle.image} \n                        alt={angle.label}\n                        className=\"w-full h-full object-cover\"\n                      />\n                    </div>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            <motion.div\n              initial={{ opacity: 0, x: 20 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"space-y-6\"\n            >\n              <Badge variant=\"outline\" className=\"border-amber-500/30 text-amber-700 dark:text-amber-400\" data-testid=\"badge-featured-detail\">\n                360° View\n              </Badge>\n              <h2 className=\"text-4xl sm:text-5xl font-serif font-light\" data-testid=\"text-detail-title\">\n                Italian Leather Handbag\n              </h2>\n              <p className=\"text-lg text-muted-foreground\" data-testid=\"text-detail-description\">\n                Crafted from premium Italian leather, this timeless piece combines functionality with elegant design. Each bag is meticulously handcrafted by master artisans.\n              </p>\n              <ul className=\"space-y-3 text-muted-foreground\">\n                <li className=\"flex items-start gap-2\" data-testid=\"text-detail-feature-1\">\n                  <span className=\"text-amber-600\">•</span>\n                  <span>Genuine Italian full-grain leather</span>\n                </li>\n                <li className=\"flex items-start gap-2\" data-testid=\"text-detail-feature-2\">\n                  <span className=\"text-amber-600\">•</span>\n                  <span>Multiple compartments with premium lining</span>\n                </li>\n                <li className=\"flex items-start gap-2\" data-testid=\"text-detail-feature-3\">\n                  <span className=\"text-amber-600\">•</span>\n                  <span>Adjustable shoulder strap</span>\n                </li>\n                <li className=\"flex items-start gap-2\" data-testid=\"text-detail-feature-4\">\n                  <span className=\"text-amber-600\">•</span>\n                  <span>Handcrafted gold-tone hardware</span>\n                </li>\n              </ul>\n              <div className=\"flex items-baseline gap-3 pt-4\">\n                <span className=\"text-4xl font-semibold text-amber-700 dark:text-amber-400\" data-testid=\"text-detail-price\">\n                  $279\n                </span>\n              </div>\n              <Button \n                size=\"lg\"\n                onClick={() => handleAddToCart('7')}\n                className=\"bg-amber-600 hover:bg-amber-700 text-white w-full sm:w-auto\"\n                data-testid=\"button-add-to-cart-detail\"\n              >\n                Add to Cart\n              </Button>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* All Accessories */}\n        <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-20\">\n          <motion.div\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"mb-12\"\n          >\n            <h2 className=\"text-4xl sm:text-5xl font-serif font-light mb-4\" data-testid=\"text-all-accessories-title\">\n              Complete Collection\n            </h2>\n            <p className=\"text-muted-foreground text-lg\" data-testid=\"text-all-accessories-subtitle\">\n              Elevate your style with our complete collection\n            </p>\n          </motion.div>\n\n          <ProductGrid\n            products={mockProducts}\n            onAddToCart={handleAddToCart}\n            onWishlist={(id) => console.log('Added to wishlist:', id)}\n          />\n        </section>\n      </main>\n\n      <Footer />\n\n      <CartDrawer\n        isOpen={isCartOpen}\n        onClose={() => setIsCartOpen(false)}\n        items={cartItems}\n        onUpdateQuantity={handleUpdateQuantity}\n        onRemoveItem={handleRemoveItem}\n        onCheckout={() => console.log('Checkout clicked')}\n      />\n    </div>\n  );\n}\n","size_bytes":24588},"client/src/pages/HomePage.tsx":{"content":"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport Header from \"@/components/Header\";\nimport HeroCarousel from \"@/components/HeroCarousel\";\nimport ProductCarousel from \"@/components/ProductCarousel\";\nimport CategoryCarousel from \"@/components/CategoryCarousel\";\nimport CategoryBanner from \"@/components/CategoryBanner\";\nimport ParallaxSection from \"@/components/ParallaxSection\";\nimport LoadingScreen from \"@/components/LoadingScreen\";\nimport Footer from \"@/components/Footer\";\nimport CartDrawer from \"@/components/CartDrawer\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\nimport AnimatedSection from \"@/components/AnimatedSection\";\nimport { Button } from \"@/components/ui/button\";\nimport { ArrowRight, Sparkles, TrendingUp } from \"lucide-react\";\n\n// Import product images\nimport coat from '@assets/generated_images/Black_minimalist_fashion_coat_cd5d7051.png';\nimport sweater from '@assets/generated_images/Beige_cashmere_luxury_sweater_f7741aad.png';\nimport sneakers from '@assets/generated_images/White_minimalist_fashion_sneakers_ba10d597.png';\nimport blazer from '@assets/generated_images/Navy_blue_tailored_blazer_cc037dc0.png';\nimport trousers from '@assets/generated_images/Olive_green_wide-leg_trousers_1935f49c.png';\nimport tshirt from '@assets/generated_images/White_cotton_essential_t-shirt_a79af24d.png';\nimport handbag from '@assets/generated_images/Brown_leather_luxury_handbag_1cdfb11b.png';\nimport heroImage from '@assets/generated_images/Fashion_hero_editorial_image_5b15abc4.png';\n\n//todo: remove mock functionality\nconst mockProducts = [\n  { id: '1', name: 'Minimalist Black Coat', price: 299, image: coat, category: 'Outerwear', isNew: true },\n  { id: '2', name: 'Cashmere Sweater', price: 189, image: sweater, category: 'Knitwear' },\n  { id: '3', name: 'Classic White Sneakers', price: 129, image: sneakers, category: 'Footerwear', isSale: true, salePrice: 99 },\n  { id: '4', name: 'Navy Tailored Blazer', price: 349, image: blazer, category: 'Outerwear' },\n  { id: '5', name: 'Wide Leg Trousers', price: 159, image: trousers, category: 'Bottoms', isNew: true },\n  { id: '6', name: 'Essential White Tee', price: 49, image: tshirt, category: 'Basics' },\n  { id: '7', name: 'Leather Handbag', price: 279, image: handbag, category: 'Accessories' },\n  { id: '8', name: 'Cashmere Sweater Beige', price: 189, image: sweater, category: 'Knitwear', isSale: true, salePrice: 149 },\n];\n\ninterface CartItem {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n  size?: string;\n}\n\nexport default function HomePage() {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n\n  //todo: remove mock functionality\n  const handleAddToCart = (productId: string) => {\n    const product = mockProducts.find(p => p.id === productId);\n    if (!product) return;\n\n    const existingItem = cartItems.find(item => item.id === productId);\n    \n    if (existingItem) {\n      setCartItems(cartItems.map(item =>\n        item.id === productId\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      setCartItems([...cartItems, {\n        id: product.id,\n        name: product.name,\n        price: product.isSale && product.salePrice ? product.salePrice : product.price,\n        quantity: 1,\n        image: product.image,\n        size: 'M'\n      }]);\n    }\n    \n    console.log('Added to cart:', productId);\n  };\n\n  //todo: remove mock functionality\n  const handleUpdateQuantity = (id: string, quantity: number) => {\n    if (quantity === 0) {\n      handleRemoveItem(id);\n    } else {\n      setCartItems(cartItems.map(item =>\n        item.id === id ? { ...item, quantity } : item\n      ));\n    }\n  };\n\n  //todo: remove mock functionality\n  const handleRemoveItem = (id: string) => {\n    setCartItems(cartItems.filter(item => item.id !== id));\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <LoadingScreen />\n      \n      <div className=\"flex items-center justify-end p-3 md:p-4 border-b\">\n        <ThemeToggle />\n      </div>\n      \n      <Header \n        cartItemCount={cartItems.reduce((sum, item) => sum + item.quantity, 0)}\n        onCartClick={() => setIsCartOpen(true)}\n      />\n\n      <main className=\"flex-1\">\n        {/* Hero Carousel with Enhanced Styling */}\n        <section className=\"relative\">\n          <HeroCarousel\n            slides={[\n              {\n                id: '1',\n                title: 'Spring Collection 2024',\n                subtitle: 'Discover timeless elegance with our new arrivals',\n                ctaText: 'Shop Now',\n                imageSrc: heroImage,\n                onCtaClick: () => console.log('Shop now clicked')\n              },\n              {\n                id: '2',\n                title: 'Winter Essentials',\n                subtitle: 'Stay warm with our curated collection of cozy pieces',\n                ctaText: 'Explore Collection',\n                imageSrc: blazer,\n                onCtaClick: () => console.log('Winter clicked')\n              },\n              {\n                id: '3',\n                title: 'Luxury Accessories',\n                subtitle: 'Complete your look with handcrafted pieces',\n                ctaText: 'Shop Accessories',\n                imageSrc: handbag,\n                onCtaClick: () => console.log('Accessories clicked')\n              }\n            ]}\n          />\n        </section>\n\n        {/* Editorial Feature Section */}\n        <AnimatedSection animation=\"fade-in-up\" className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-24 lg:py-32\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-16 items-center\">\n            <motion.div\n              initial={{ opacity: 0, x: -30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n              className=\"order-2 lg:order-1\"\n            >\n              <div className=\"inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary/10 text-primary text-sm font-medium mb-6\">\n                <Sparkles className=\"w-4 h-4\" />\n                <span>New Season</span>\n              </div>\n              <h2 className=\"text-4xl sm:text-5xl lg:text-6xl font-serif font-light mb-6 leading-tight\">\n                Where Elegance\n                <br />\n                Meets Modern\n              </h2>\n              <p className=\"text-lg text-muted-foreground mb-8 leading-relaxed max-w-prose\">\n                Curated collections that transcend trends. Each piece is carefully selected to embody \n                timeless sophistication and contemporary style.\n              </p>\n              <Button size=\"lg\" className=\"group\">\n                Explore Collection\n                <ArrowRight className=\"ml-2 h-4 w-4 transition-transform group-hover:translate-x-1\" />\n              </Button>\n            </motion.div>\n            <motion.div\n              initial={{ opacity: 0, x: 30 }}\n              whileInView={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n              className=\"order-1 lg:order-2\"\n            >\n              <div className=\"relative aspect-[3/4] rounded-2xl overflow-hidden shadow-2xl\">\n                <img \n                  src={coat} \n                  alt=\"Featured Collection\" \n                  className=\"w-full h-full object-cover\"\n                />\n                <div className=\"absolute inset-0 bg-gradient-to-t from-black/40 to-transparent\" />\n              </div>\n            </motion.div>\n          </div>\n        </AnimatedSection>\n\n        {/* New Arrivals Carousel */}\n        <AnimatedSection animation=\"fade-in-up\" className=\"bg-muted/30 py-16 md:py-20 lg:py-24\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex items-center justify-between mb-10 md:mb-12\">\n              <div>\n                <div className=\"inline-flex items-center gap-2 px-3 py-1.5 rounded-full bg-primary/10 text-primary text-xs font-medium mb-3\">\n                  <TrendingUp className=\"w-3.5 h-3.5\" />\n                  <span>Trending</span>\n                </div>\n                <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-serif font-light\">New Arrivals</h2>\n              </div>\n              <Button variant=\"ghost\" className=\"hidden sm:flex\">\n                View All\n                <ArrowRight className=\"ml-2 h-4 w-4\" />\n              </Button>\n            </div>\n            <ProductCarousel\n              title=\"\"\n              products={mockProducts}\n              onAddToCart={handleAddToCart}\n              onWishlist={(id) => console.log('Added to wishlist:', id)}\n            />\n          </div>\n        </AnimatedSection>\n\n        {/* Category Showcase */}\n        <AnimatedSection animation=\"fade-in\" className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-20 lg:py-24\">\n          <div className=\"text-center mb-12 md:mb-16\">\n            <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-serif font-light mb-4\">\n              Shop by Category\n            </h2>\n            <p className=\"text-muted-foreground text-lg max-w-2xl mx-auto\">\n              Discover our carefully curated collections, designed for every occasion\n            </p>\n          </div>\n          <CategoryCarousel\n            categories={[\n              { id: 'outerwear', name: 'Outerwear', imageSrc: coat, count: 24, onClick: () => console.log('Outerwear') },\n              { id: 'knitwear', name: 'Knitwear', imageSrc: sweater, count: 18, onClick: () => console.log('Knitwear') },\n              { id: 'footwear', name: 'Footwear', imageSrc: sneakers, count: 32, onClick: () => console.log('Footwear') },\n              { id: 'accessories', name: 'Accessories', imageSrc: handbag, count: 15, onClick: () => console.log('Accessories') },\n              { id: 'bottoms', name: 'Bottoms', imageSrc: trousers, count: 28, onClick: () => console.log('Bottoms') }\n            ]}\n          />\n        </AnimatedSection>\n\n        {/* Parallax Section - Craftsmanship */}\n        <ParallaxSection\n          imageSrc={coat}\n          title=\"Crafted for Excellence\"\n          subtitle=\"Every piece tells a story of timeless craftsmanship and attention to detail\"\n          ctaText=\"Discover Our Story\"\n          onCtaClick={() => console.log('Parallax clicked')}\n          height=\"lg\"\n        />\n\n        {/* Featured Collection Grid */}\n        <AnimatedSection animation=\"fade-in-up\" delay={100} className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-20 lg:py-24\">\n          <div className=\"text-center mb-12 md:mb-16\">\n            <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-serif font-light mb-4\">\n              Featured Collection\n            </h2>\n            <p className=\"text-muted-foreground text-lg max-w-2xl mx-auto\">\n              Handpicked favorites that define this season's aesthetic\n            </p>\n          </div>\n          <ProductCarousel\n            title=\"\"\n            products={mockProducts}\n            onAddToCart={handleAddToCart}\n            onWishlist={(id) => console.log('Added to wishlist:', id)}\n          />\n        </AnimatedSection>\n\n        {/* Premium Banner Section */}\n        <AnimatedSection animation=\"scale-in\" className=\"bg-muted/30 py-16 md:py-20\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <CategoryBanner\n              title=\"Limited Time Offer\"\n              description=\"Up to 30% off on selected items. Elevate your wardrobe with timeless pieces.\"\n              imageSrc={handbag}\n              onCtaClick={() => console.log('Promo clicked')}\n            />\n          </div>\n        </AnimatedSection>\n\n        {/* Brand Values Section */}\n        <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-20 lg:py-24\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 md:gap-12\">\n            {[\n              {\n                title: \"Premium Quality\",\n                description: \"Every piece is crafted with exceptional attention to detail and the finest materials\"\n              },\n              {\n                title: \"Timeless Design\",\n                description: \"Our collections transcend seasonal trends, offering enduring style and versatility\"\n              },\n              {\n                title: \"Sustainable Luxury\",\n                description: \"Committed to ethical practices and sustainable fashion that respects our planet\"\n              }\n            ].map((value, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 20 }}\n                whileInView={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6, delay: index * 0.1 }}\n                viewport={{ once: true }}\n                className=\"text-center\"\n              >\n                <h3 className=\"text-xl font-semibold mb-3\">{value.title}</h3>\n                <p className=\"text-muted-foreground leading-relaxed\">{value.description}</p>\n              </motion.div>\n            ))}\n          </div>\n        </section>\n      </main>\n\n      <Footer />\n\n      <CartDrawer\n        isOpen={isCartOpen}\n        onClose={() => setIsCartOpen(false)}\n        items={cartItems}\n        onUpdateQuantity={handleUpdateQuantity}\n        onRemoveItem={handleRemoveItem}\n        onCheckout={() => console.log('Checkout clicked')}\n      />\n    </div>\n  );\n}\n","size_bytes":13516},"client/src/pages/MenPage.tsx":{"content":"import { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport Header from \"@/components/Header\";\nimport Footer from \"@/components/Footer\";\nimport CartDrawer from \"@/components/CartDrawer\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\nimport HeroCarousel from \"@/components/HeroCarousel\";\nimport CategoryCarousel from \"@/components/CategoryCarousel\";\nimport ProductCarousel from \"@/components/ProductCarousel\";\nimport { Card } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { ArrowRight, Shield, Truck, Award, Star } from \"lucide-react\";\nimport useEmblaCarousel from 'embla-carousel-react';\nimport Autoplay from 'embla-carousel-autoplay';\n\nimport coat from '@assets/generated_images/Black_minimalist_fashion_coat_cd5d7051.png';\nimport sneakers from '@assets/generated_images/White_minimalist_fashion_sneakers_ba10d597.png';\nimport blazer from '@assets/generated_images/Navy_blue_tailored_blazer_cc037dc0.png';\nimport tshirt from '@assets/generated_images/White_cotton_essential_t-shirt_a79af24d.png';\nimport sweater from '@assets/generated_images/Beige_cashmere_luxury_sweater_f7741aad.png';\nimport trousers from '@assets/generated_images/Olive_green_wide-leg_trousers_1935f49c.png';\n\nconst heroSlides = [\n  {\n    id: 'power',\n    title: 'Power & Presence',\n    subtitle: 'Commanding style for the modern professional. Expertly tailored pieces that make a statement.',\n    ctaText: 'Shop Power Suits',\n    imageSrc: blazer,\n  },\n  {\n    id: 'urban',\n    title: 'Urban Edge',\n    subtitle: 'Street-inspired sophistication. Bold designs that blend comfort with contemporary style.',\n    ctaText: 'Explore Urban Collection',\n    imageSrc: coat,\n  },\n  {\n    id: 'refined',\n    title: 'Refined Essentials',\n    subtitle: 'Timeless pieces crafted with precision. Elevate your everyday with premium basics.',\n    ctaText: 'Shop Essentials',\n    imageSrc: tshirt,\n  },\n];\n\nconst categories = [\n  { id: 'outerwear', name: 'Outerwear', imageSrc: coat, count: 24 },\n  { id: 'blazers', name: 'Blazers & Suits', imageSrc: blazer, count: 18 },\n  { id: 'footwear', name: 'Footwear', imageSrc: sneakers, count: 32 },\n  { id: 'knitwear', name: 'Knitwear', imageSrc: sweater, count: 16 },\n  { id: 'trousers', name: 'Trousers', imageSrc: trousers, count: 28 },\n  { id: 'basics', name: 'Essential Basics', imageSrc: tshirt, count: 42 },\n];\n\nconst featuredProducts = [\n  { id: '1', name: 'Minimalist Black Coat', price: 299, image: coat, category: 'Outerwear', isNew: true },\n  { id: '2', name: 'Navy Tailored Blazer', price: 349, image: blazer, category: 'Outerwear' },\n  { id: '3', name: 'Classic White Sneakers', price: 129, image: sneakers, category: 'Footwear', isNew: true },\n  { id: '4', name: 'Essential White Tee', price: 49, image: tshirt, category: 'Basics' },\n  { id: '5', name: 'Cashmere Sweater', price: 179, image: sweater, category: 'Knitwear' },\n  { id: '6', name: 'Olive Wide-Leg Trousers', price: 159, image: trousers, category: 'Trousers', isNew: true },\n];\n\nconst newArrivals = [\n  { id: '3', name: 'Classic White Sneakers', price: 129, image: sneakers, category: 'Footwear', isNew: true },\n  { id: '1', name: 'Minimalist Black Coat', price: 299, image: coat, category: 'Outerwear', isNew: true },\n  { id: '6', name: 'Olive Wide-Leg Trousers', price: 159, image: trousers, category: 'Trousers', isNew: true },\n  { id: '5', name: 'Cashmere Sweater', price: 179, image: sweater, category: 'Knitwear', isNew: true },\n];\n\nconst brandStory = [\n  {\n    id: 'craftsmanship',\n    title: 'Uncompromising Craftsmanship',\n    description: 'Every piece is meticulously crafted with attention to detail, using premium materials sourced from the finest mills worldwide.',\n    icon: Award,\n  },\n  {\n    id: 'quality',\n    title: 'Premium Quality',\n    description: 'We use only the highest quality fabrics and materials, ensuring each garment stands the test of time with proper care.',\n    icon: Shield,\n  },\n  {\n    id: 'delivery',\n    title: 'Express Delivery',\n    description: 'Fast, reliable shipping to your doorstep. Track your order every step of the way with our premium delivery service.',\n    icon: Truck,\n  },\n  {\n    id: 'satisfaction',\n    title: 'Guaranteed Satisfaction',\n    description: 'Not completely satisfied? Our 30-day return policy ensures you find the perfect fit for your style and lifestyle.',\n    icon: Star,\n  },\n];\n\ninterface CartItem {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n  size?: string;\n}\n\nexport default function MenPage() {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n\n  const [emblaRef] = useEmblaCarousel(\n    { loop: true, duration: 30 },\n    [Autoplay({ delay: 4000, stopOnInteraction: false })]\n  );\n\n  const handleAddToCart = (productId: string) => {\n    const allProducts = [...featuredProducts, ...newArrivals];\n    const product = allProducts.find(p => p.id === productId);\n    if (!product) return;\n\n    const existingItem = cartItems.find(item => item.id === productId);\n    \n    if (existingItem) {\n      setCartItems(cartItems.map(item =>\n        item.id === productId\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      setCartItems([...cartItems, {\n        id: product.id,\n        name: product.name,\n        price: product.price,\n        quantity: 1,\n        image: product.image,\n        size: 'M'\n      }]);\n    }\n  };\n\n  const handleUpdateQuantity = (id: string, quantity: number) => {\n    if (quantity === 0) {\n      handleRemoveItem(id);\n    } else {\n      setCartItems(cartItems.map(item =>\n        item.id === id ? { ...item, quantity } : item\n      ));\n    }\n  };\n\n  const handleRemoveItem = (id: string) => {\n    setCartItems(cartItems.filter(item => item.id !== id));\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <div className=\"flex items-center justify-end p-3 md:p-4 border-b\">\n        <ThemeToggle />\n      </div>\n      \n      <Header \n        cartItemCount={cartItems.reduce((sum, item) => sum + item.quantity, 0)}\n        onCartClick={() => setIsCartOpen(true)}\n      />\n\n      <main className=\"flex-1\">\n        {/* Bold Hero Carousel */}\n        <HeroCarousel slides={heroSlides} />\n\n        {/* Category Showcase Slider */}\n        <section className=\"bg-black text-white py-16 md:py-24\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"mb-12\"\n            >\n              <h2 \n                className=\"text-4xl sm:text-5xl md:text-6xl font-serif font-light mb-4\"\n                data-testid=\"text-category-section-title\"\n              >\n                Explore Your Style\n              </h2>\n              <p className=\"text-lg text-white/70 max-w-2xl\" data-testid=\"text-category-section-subtitle\">\n                Discover curated collections designed for the modern man who demands excellence in every detail.\n              </p>\n            </motion.div>\n\n            <CategoryCarousel categories={categories} />\n          </div>\n        </section>\n\n        {/* Dynamic Product Feature Section with Interactive Cards */}\n        <section className=\"py-16 md:py-24 bg-muted/20\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"mb-12 text-center\"\n            >\n              <Badge \n                variant=\"outline\" \n                className=\"mb-4 text-xs uppercase tracking-wider border-foreground/20\"\n                data-testid=\"badge-featured-label\"\n              >\n                Curated Selection\n              </Badge>\n              <h2 \n                className=\"text-4xl sm:text-5xl md:text-6xl font-serif font-light mb-4\"\n                data-testid=\"text-featured-title\"\n              >\n                Featured Pieces\n              </h2>\n              <p className=\"text-lg text-muted-foreground max-w-2xl mx-auto\" data-testid=\"text-featured-subtitle\">\n                Handpicked essentials that define contemporary masculine style\n              </p>\n            </motion.div>\n\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8 mb-16\">\n              {featuredProducts.slice(0, 3).map((product, index) => (\n                <motion.div\n                  key={product.id}\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  whileHover={{ y: -8 }}\n                  data-testid={`card-featured-product-${product.id}`}\n                >\n                  <Card className=\"overflow-hidden border-border/50 hover-elevate transition-all duration-300\">\n                    <div className=\"relative aspect-[3/4] overflow-hidden bg-muted\">\n                      <img \n                        src={product.image} \n                        alt={product.name}\n                        className=\"w-full h-full object-cover transition-transform duration-700 hover:scale-110\"\n                        data-testid={`img-featured-product-${product.id}`}\n                      />\n                      {product.isNew && (\n                        <Badge \n                          className=\"absolute top-4 right-4 bg-black text-white border-0\"\n                          data-testid={`badge-new-${product.id}`}\n                        >\n                          NEW\n                        </Badge>\n                      )}\n                      <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent opacity-0 hover:opacity-100 transition-opacity duration-300 flex items-end p-6\">\n                        <Button\n                          onClick={() => handleAddToCart(product.id)}\n                          className=\"w-full bg-white text-black hover:bg-white/90\"\n                          data-testid={`button-add-to-cart-${product.id}`}\n                        >\n                          Add to Cart\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"p-6\">\n                      <p className=\"text-xs uppercase tracking-wider text-muted-foreground mb-2\" data-testid={`text-category-${product.id}`}>\n                        {product.category}\n                      </p>\n                      <h3 className=\"text-xl font-serif font-light mb-2\" data-testid={`text-product-name-${product.id}`}>\n                        {product.name}\n                      </h3>\n                      <p className=\"text-lg font-medium\" data-testid={`text-product-price-${product.id}`}>\n                        ${product.price}\n                      </p>\n                    </div>\n                  </Card>\n                </motion.div>\n              ))}\n            </div>\n\n            <ProductCarousel\n              title=\"Complete the Look\"\n              products={featuredProducts}\n              onAddToCart={handleAddToCart}\n            />\n          </div>\n        </section>\n\n        {/* New Arrivals Carousel */}\n        <section className=\"py-16 md:py-24 bg-background\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"mb-12\"\n            >\n              <div className=\"flex items-end justify-between gap-4 flex-wrap\">\n                <div>\n                  <Badge \n                    variant=\"outline\" \n                    className=\"mb-4 text-xs uppercase tracking-wider\"\n                    data-testid=\"badge-new-arrivals-label\"\n                  >\n                    Just Landed\n                  </Badge>\n                  <h2 className=\"text-4xl sm:text-5xl md:text-6xl font-serif font-light\" data-testid=\"text-new-arrivals-title\">\n                    New Arrivals\n                  </h2>\n                </div>\n                <Button \n                  variant=\"outline\" \n                  className=\"group\"\n                  data-testid=\"button-view-all-arrivals\"\n                >\n                  View All\n                  <ArrowRight className=\"ml-2 h-4 w-4 transition-transform group-hover:translate-x-1\" />\n                </Button>\n              </div>\n            </motion.div>\n\n            <ProductCarousel\n              title=\"\"\n              products={newArrivals}\n              onAddToCart={handleAddToCart}\n            />\n          </div>\n        </section>\n\n        {/* Brand Story & Values Carousel */}\n        <section className=\"bg-black text-white py-16 md:py-24\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"mb-12 text-center\"\n            >\n              <h2 \n                className=\"text-4xl sm:text-5xl md:text-6xl font-serif font-light mb-4\"\n                data-testid=\"text-brand-story-title\"\n              >\n                The Standard of Excellence\n              </h2>\n              <p className=\"text-lg text-white/70 max-w-2xl mx-auto\" data-testid=\"text-brand-story-subtitle\">\n                Our commitment to quality, craftsmanship, and your satisfaction\n              </p>\n            </motion.div>\n\n            <div className=\"overflow-hidden\" ref={emblaRef} data-testid=\"carousel-brand-story\">\n              <div className=\"flex\">\n                {brandStory.map((story, index) => (\n                  <div \n                    key={story.id} \n                    className=\"flex-[0_0_100%] sm:flex-[0_0_50%] lg:flex-[0_0_33.333%] min-w-0 px-3\"\n                  >\n                    <motion.div\n                      initial={{ opacity: 0, scale: 0.95 }}\n                      whileInView={{ opacity: 1, scale: 1 }}\n                      transition={{ duration: 0.5, delay: index * 0.1 }}\n                      viewport={{ once: true }}\n                      whileHover={{ scale: 1.02 }}\n                    >\n                      <Card \n                        className=\"bg-white/5 border-white/10 hover-elevate transition-all duration-300 h-full\"\n                        data-testid={`card-brand-story-${story.id}`}\n                      >\n                        <div className=\"p-8\">\n                          <div className=\"mb-6\">\n                            <div className=\"w-14 h-14 rounded-full bg-white/10 flex items-center justify-center mb-4\">\n                              <story.icon className=\"w-7 h-7 text-white\" data-testid={`icon-brand-story-${story.id}`} />\n                            </div>\n                          </div>\n                          <h3 \n                            className=\"text-2xl font-serif font-light mb-4 text-white\"\n                            data-testid={`text-brand-story-title-${story.id}`}\n                          >\n                            {story.title}\n                          </h3>\n                          <p \n                            className=\"text-white/70 leading-relaxed\"\n                            data-testid={`text-brand-story-description-${story.id}`}\n                          >\n                            {story.description}\n                          </p>\n                        </div>\n                      </Card>\n                    </motion.div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Style Guide Section */}\n        <section className=\"py-16 md:py-24 bg-muted/20\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n              <motion.div\n                initial={{ opacity: 0, x: -30 }}\n                whileInView={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.8 }}\n                viewport={{ once: true }}\n              >\n                <Badge \n                  variant=\"outline\" \n                  className=\"mb-4 text-xs uppercase tracking-wider\"\n                  data-testid=\"badge-style-guide-label\"\n                >\n                  Style Guide\n                </Badge>\n                <h2 \n                  className=\"text-4xl sm:text-5xl md:text-6xl font-serif font-light mb-6\"\n                  data-testid=\"text-style-guide-title\"\n                >\n                  Master Your Style\n                </h2>\n                <p className=\"text-lg text-muted-foreground mb-8 leading-relaxed\" data-testid=\"text-style-guide-description\">\n                  Elevate your wardrobe with our expertly curated style guide. Learn how to build a versatile \n                  collection that transitions seamlessly from boardroom to weekend, from dawn to dusk.\n                </p>\n                <ul className=\"space-y-4 mb-8\">\n                  {[\n                    'Build a capsule wardrobe',\n                    'Mix formal and casual pieces',\n                    'Master seasonal layering',\n                    'Choose the right fit'\n                  ].map((item, index) => (\n                    <motion.li\n                      key={index}\n                      initial={{ opacity: 0, x: -20 }}\n                      whileInView={{ opacity: 1, x: 0 }}\n                      transition={{ duration: 0.5, delay: index * 0.1 }}\n                      viewport={{ once: true }}\n                      className=\"flex items-center gap-3\"\n                      data-testid={`list-item-style-tip-${index}`}\n                    >\n                      <div className=\"w-1.5 h-1.5 bg-foreground rounded-full\" />\n                      <span className=\"text-base\">{item}</span>\n                    </motion.li>\n                  ))}\n                </ul>\n                <Button \n                  size=\"lg\" \n                  className=\"group\"\n                  data-testid=\"button-read-style-guide\"\n                >\n                  Read Full Guide\n                  <ArrowRight className=\"ml-2 h-4 w-4 transition-transform group-hover:translate-x-1\" />\n                </Button>\n              </motion.div>\n\n              <motion.div\n                initial={{ opacity: 0, x: 30 }}\n                whileInView={{ opacity: 1, x: 0 }}\n                transition={{ duration: 0.8 }}\n                viewport={{ once: true }}\n                className=\"grid grid-cols-2 gap-4\"\n              >\n                {[coat, blazer, sweater, trousers].map((img, index) => (\n                  <motion.div\n                    key={index}\n                    initial={{ opacity: 0, scale: 0.9 }}\n                    whileInView={{ opacity: 1, scale: 1 }}\n                    transition={{ duration: 0.5, delay: index * 0.1 }}\n                    viewport={{ once: true }}\n                    whileHover={{ scale: 1.05 }}\n                    className={`relative overflow-hidden rounded-md ${\n                      index === 0 ? 'row-span-2' : ''\n                    }`}\n                    data-testid={`img-style-guide-${index}`}\n                  >\n                    <img\n                      src={img}\n                      alt={`Style guide ${index + 1}`}\n                      className=\"w-full h-full object-cover\"\n                    />\n                  </motion.div>\n                ))}\n              </motion.div>\n            </div>\n          </div>\n        </section>\n\n        {/* Final CTA Section */}\n        <section className=\"relative bg-black text-white py-24 md:py-32 overflow-hidden\">\n          <div className=\"absolute inset-0\">\n            <img \n              src={blazer} \n              alt=\"Men's fashion\"\n              className=\"w-full h-full object-cover opacity-20\"\n            />\n            <div className=\"absolute inset-0 bg-gradient-to-r from-black via-black/90 to-black/70\" />\n          </div>\n          \n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 relative\">\n            <motion.div\n              initial={{ opacity: 0, y: 30 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.8 }}\n              viewport={{ once: true }}\n              className=\"max-w-3xl mx-auto text-center\"\n            >\n              <h2 \n                className=\"text-5xl sm:text-6xl md:text-7xl font-serif font-light mb-6\"\n                data-testid=\"text-cta-title\"\n              >\n                Define Your Standard\n              </h2>\n              <p className=\"text-xl text-white/80 mb-10 leading-relaxed\" data-testid=\"text-cta-subtitle\">\n                Join thousands of men who refuse to compromise on quality and style. \n                Your wardrobe upgrade starts here.\n              </p>\n              <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n                <Button \n                  size=\"lg\" \n                  className=\"bg-white text-black hover:bg-white/90 text-base\"\n                  data-testid=\"button-cta-shop\"\n                >\n                  Shop Men's Collection\n                </Button>\n                <Button \n                  size=\"lg\" \n                  variant=\"outline\"\n                  className=\"border-white/30 text-white hover:bg-white/10 backdrop-blur-sm text-base\"\n                  data-testid=\"button-cta-learn\"\n                >\n                  Learn Our Story\n                </Button>\n              </div>\n            </motion.div>\n          </div>\n        </section>\n      </main>\n\n      <Footer />\n\n      <CartDrawer\n        isOpen={isCartOpen}\n        onClose={() => setIsCartOpen(false)}\n        items={cartItems}\n        onUpdateQuantity={handleUpdateQuantity}\n        onRemoveItem={handleRemoveItem}\n        onCheckout={() => console.log('Checkout clicked')}\n      />\n    </div>\n  );\n}\n","size_bytes":22491},"client/src/pages/NewArrivalsPage.tsx":{"content":"import { useState, useCallback, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport useEmblaCarousel from 'embla-carousel-react';\nimport Autoplay from 'embla-carousel-autoplay';\nimport Header from \"@/components/Header\";\nimport ProductGrid from \"@/components/ProductGrid\";\nimport Footer from \"@/components/Footer\";\nimport CartDrawer from \"@/components/CartDrawer\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\nimport AnimatedSection from \"@/components/AnimatedSection\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card } from \"@/components/ui/card\";\nimport { Sparkles, TrendingUp, Clock, ChevronLeft, ChevronRight, Heart, ShoppingBag } from \"lucide-react\";\n\nimport coat from '@assets/generated_images/Black_minimalist_fashion_coat_cd5d7051.png';\nimport sweater from '@assets/generated_images/Beige_cashmere_luxury_sweater_f7741aad.png';\nimport sneakers from '@assets/generated_images/White_minimalist_fashion_sneakers_ba10d597.png';\nimport blazer from '@assets/generated_images/Navy_blue_tailored_blazer_cc037dc0.png';\nimport trousers from '@assets/generated_images/Olive_green_wide-leg_trousers_1935f49c.png';\nimport tshirt from '@assets/generated_images/White_cotton_essential_t-shirt_a79af24d.png';\nimport handbag from '@assets/generated_images/Brown_leather_luxury_handbag_1cdfb11b.png';\nimport heroImage from '@assets/generated_images/Fashion_hero_editorial_image_5b15abc4.png';\n\nconst mockProducts = [\n  { id: '1', name: 'Minimalist Black Coat', price: 299, image: coat, category: 'Outerwear', isNew: true },\n  { id: '2', name: 'Cashmere Sweater', price: 189, image: sweater, category: 'Knitwear', isNew: true },\n  { id: '5', name: 'Wide Leg Trousers', price: 159, image: trousers, category: 'Bottoms', isNew: true },\n  { id: '4', name: 'Navy Tailored Blazer', price: 349, image: blazer, category: 'Outerwear', isNew: true },\n  { id: '3', name: 'Classic White Sneakers', price: 129, image: sneakers, category: 'Footwear', isNew: true },\n  { id: '6', name: 'Essential White Tee', price: 49, image: tshirt, category: 'Basics', isNew: true },\n  { id: '7', name: 'Leather Handbag', price: 279, image: handbag, category: 'Accessories', isNew: true },\n];\n\nconst trendingProducts = [\n  { id: '1', name: 'Minimalist Black Coat', price: 299, image: coat, category: 'Outerwear', isNew: true },\n  { id: '2', name: 'Cashmere Sweater', price: 189, image: sweater, category: 'Knitwear', isNew: true },\n  { id: '4', name: 'Navy Tailored Blazer', price: 349, image: blazer, category: 'Outerwear', isNew: true },\n  { id: '7', name: 'Leather Handbag', price: 279, image: handbag, category: 'Accessories', isNew: true },\n  { id: '3', name: 'Classic White Sneakers', price: 129, image: sneakers, category: 'Footwear', isNew: true },\n];\n\nconst featuredSlides = [\n  {\n    id: 'slide-1',\n    title: 'Minimalist Elegance',\n    description: 'Timeless pieces that define modern sophistication',\n    image: coat,\n    productId: '1'\n  },\n  {\n    id: 'slide-2',\n    title: 'Luxury Essentials',\n    description: 'Premium quality for the discerning wardrobe',\n    image: sweater,\n    productId: '2'\n  },\n  {\n    id: 'slide-3',\n    title: 'Statement Pieces',\n    description: 'Bold designs that make lasting impressions',\n    image: blazer,\n    productId: '4'\n  }\n];\n\ninterface CartItem {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n  size?: string;\n}\n\nexport default function NewArrivalsPage() {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n\n  const [heroRef, heroApi] = useEmblaCarousel(\n    { loop: true, duration: 30 },\n    [Autoplay({ delay: 5000, stopOnInteraction: false })]\n  );\n  const [heroSelectedIndex, setHeroSelectedIndex] = useState(0);\n\n  const [trendingRef, trendingApi] = useEmblaCarousel(\n    { \n      align: 'start',\n      loop: true,\n      slidesToScroll: 1,\n      breakpoints: {\n        '(min-width: 640px)': { slidesToScroll: 2 },\n        '(min-width: 1024px)': { slidesToScroll: 3 },\n      }\n    },\n    [Autoplay({ delay: 3000, stopOnInteraction: true })]\n  );\n  const [canScrollTrendingPrev, setCanScrollTrendingPrev] = useState(false);\n  const [canScrollTrendingNext, setCanScrollTrendingNext] = useState(false);\n\n  const handleAddToCart = (productId: string) => {\n    const product = mockProducts.find(p => p.id === productId);\n    if (!product) return;\n\n    const existingItem = cartItems.find(item => item.id === productId);\n    \n    if (existingItem) {\n      setCartItems(cartItems.map(item =>\n        item.id === productId\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      setCartItems([...cartItems, {\n        id: product.id,\n        name: product.name,\n        price: product.price,\n        quantity: 1,\n        image: product.image,\n        size: 'M'\n      }]);\n    }\n  };\n\n  const handleUpdateQuantity = (id: string, quantity: number) => {\n    if (quantity === 0) {\n      handleRemoveItem(id);\n    } else {\n      setCartItems(cartItems.map(item =>\n        item.id === id ? { ...item, quantity } : item\n      ));\n    }\n  };\n\n  const handleRemoveItem = (id: string) => {\n    setCartItems(cartItems.filter(item => item.id !== id));\n  };\n\n  const scrollHeroPrev = useCallback(() => {\n    if (heroApi) heroApi.scrollPrev();\n  }, [heroApi]);\n\n  const scrollHeroNext = useCallback(() => {\n    if (heroApi) heroApi.scrollNext();\n  }, [heroApi]);\n\n  const scrollHeroTo = useCallback((index: number) => {\n    if (heroApi) heroApi.scrollTo(index);\n  }, [heroApi]);\n\n  const onHeroSelect = useCallback(() => {\n    if (!heroApi) return;\n    setHeroSelectedIndex(heroApi.selectedScrollSnap());\n  }, [heroApi]);\n\n  useEffect(() => {\n    if (!heroApi) return;\n    onHeroSelect();\n    heroApi.on('select', onHeroSelect);\n    heroApi.on('reInit', onHeroSelect);\n  }, [heroApi, onHeroSelect]);\n\n  const scrollTrendingPrev = useCallback(() => {\n    if (trendingApi) trendingApi.scrollPrev();\n  }, [trendingApi]);\n\n  const scrollTrendingNext = useCallback(() => {\n    if (trendingApi) trendingApi.scrollNext();\n  }, [trendingApi]);\n\n  const onTrendingSelect = useCallback(() => {\n    if (!trendingApi) return;\n    setCanScrollTrendingPrev(trendingApi.canScrollPrev());\n    setCanScrollTrendingNext(trendingApi.canScrollNext());\n  }, [trendingApi]);\n\n  useEffect(() => {\n    if (!trendingApi) return;\n    onTrendingSelect();\n    trendingApi.on('select', onTrendingSelect);\n    trendingApi.on('reInit', onTrendingSelect);\n  }, [trendingApi, onTrendingSelect]);\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <div className=\"flex items-center justify-end p-3 md:p-4 border-b\">\n        <ThemeToggle />\n      </div>\n      \n      <Header \n        cartItemCount={cartItems.reduce((sum, item) => sum + item.quantity, 0)}\n        onCartClick={() => setIsCartOpen(true)}\n      />\n\n      <main className=\"flex-1\">\n        <section className=\"relative\" data-testid=\"section-hero-slider\">\n          <div className=\"overflow-hidden\" ref={heroRef}>\n            <div className=\"flex\">\n              {featuredSlides.map((slide) => (\n                <div key={slide.id} className=\"flex-[0_0_100%] min-w-0\">\n                  <div className=\"relative h-[60vh] sm:h-[70vh] md:h-[80vh] overflow-hidden bg-muted\">\n                    <div className=\"absolute inset-0\">\n                      <motion.img\n                        src={slide.image}\n                        alt={slide.title}\n                        className=\"w-full h-full object-cover object-center\"\n                        initial={{ scale: 1 }}\n                        animate={{ scale: 1.05 }}\n                        transition={{ duration: 5, ease: \"linear\" }}\n                        data-testid={`img-hero-slide-${slide.id}`}\n                      />\n                      <div className=\"absolute inset-0 bg-gradient-to-r from-black/70 to-black/40\" />\n                    </div>\n\n                    <div className=\"relative container mx-auto px-4 sm:px-6 h-full flex items-center\">\n                      <motion.div\n                        initial={{ opacity: 0, y: 30 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        transition={{ duration: 0.8, delay: 0.2 }}\n                        className=\"max-w-2xl text-white\"\n                      >\n                        <Badge className=\"mb-4 bg-white/20 backdrop-blur-sm border-white/30 text-white\" data-testid={`badge-hero-new-${slide.id}`}>\n                          <Sparkles className=\"w-3 h-3 mr-1\" />\n                          New Arrival\n                        </Badge>\n                        <h2 \n                          className=\"text-4xl sm:text-5xl md:text-6xl lg:text-7xl font-serif font-light mb-4 md:mb-6 leading-tight\"\n                          data-testid={`text-hero-title-${slide.id}`}\n                        >\n                          {slide.title}\n                        </h2>\n                        <p \n                          className=\"text-base sm:text-lg md:text-xl mb-6 md:mb-8 text-white/90 max-w-lg leading-relaxed\"\n                          data-testid={`text-hero-description-${slide.id}`}\n                        >\n                          {slide.description}\n                        </p>\n                        <Button\n                          size=\"lg\"\n                          variant=\"outline\"\n                          onClick={() => handleAddToCart(slide.productId)}\n                          className=\"bg-white/10 backdrop-blur-sm border-white/30 text-white hover:bg-white/20 w-full sm:w-auto transition-all hover:scale-105\"\n                          data-testid={`button-hero-shop-${slide.id}`}\n                        >\n                          Shop Now\n                        </Button>\n                      </motion.div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <Button\n            size=\"icon\"\n            variant=\"ghost\"\n            onClick={scrollHeroPrev}\n            className=\"absolute left-4 top-1/2 -translate-y-1/2 bg-white/10 backdrop-blur-sm border border-white/30 text-white hover:bg-white/20 hidden md:flex\"\n            data-testid=\"button-hero-prev\"\n          >\n            <ChevronLeft className=\"h-6 w-6\" />\n          </Button>\n          <Button\n            size=\"icon\"\n            variant=\"ghost\"\n            onClick={scrollHeroNext}\n            className=\"absolute right-4 top-1/2 -translate-y-1/2 bg-white/10 backdrop-blur-sm border border-white/30 text-white hover:bg-white/20 hidden md:flex\"\n            data-testid=\"button-hero-next\"\n          >\n            <ChevronRight className=\"h-6 w-6\" />\n          </Button>\n\n          <div className=\"absolute bottom-8 left-1/2 -translate-x-1/2 flex gap-2\">\n            {featuredSlides.map((_, index) => (\n              <button\n                key={index}\n                onClick={() => scrollHeroTo(index)}\n                className={`h-2 rounded-full transition-all ${\n                  index === heroSelectedIndex \n                    ? 'w-8 bg-white' \n                    : 'w-2 bg-white/50 hover:bg-white/70'\n                }`}\n                data-testid={`button-hero-dot-${index}`}\n              />\n            ))}\n          </div>\n        </section>\n\n        <AnimatedSection animation=\"fade-in-up\" delay={100}>\n          <section className=\"relative bg-gradient-to-br from-primary/5 via-background to-primary/10 border-b\">\n            <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16\">\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.6 }}\n                className=\"max-w-4xl mx-auto text-center\"\n              >\n                <div className=\"inline-flex items-center gap-2 px-4 py-2 rounded-full bg-primary/10 text-primary text-sm font-medium mb-6\" data-testid=\"badge-just-landed\">\n                  <Sparkles className=\"w-4 h-4\" />\n                  <span>Just Landed</span>\n                </div>\n                <h1 className=\"text-4xl sm:text-5xl md:text-6xl font-serif font-light mb-6\" data-testid=\"text-page-title\">\n                  New Arrivals\n                </h1>\n                <p className=\"text-lg sm:text-xl text-muted-foreground max-w-2xl mx-auto mb-8\" data-testid=\"text-page-subtitle\">\n                  Discover the latest additions to our collection. Fresh styles crafted for the modern wardrobe.\n                </p>\n                <div className=\"flex flex-wrap items-center justify-center gap-4 text-sm text-muted-foreground\">\n                  <div className=\"flex items-center gap-2\" data-testid=\"info-updated-daily\">\n                    <Clock className=\"w-4 h-4\" />\n                    <span>Updated Daily</span>\n                  </div>\n                  <div className=\"hidden sm:block w-1 h-1 rounded-full bg-muted-foreground/30\" />\n                  <div className=\"flex items-center gap-2\" data-testid=\"info-new-items\">\n                    <TrendingUp className=\"w-4 h-4\" />\n                    <span>{mockProducts.length} New Items</span>\n                  </div>\n                </div>\n              </motion.div>\n            </div>\n          </section>\n        </AnimatedSection>\n\n        <AnimatedSection animation=\"fade-in-up\" delay={200}>\n          <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16\" data-testid=\"section-trending\">\n            <div className=\"flex items-center justify-between mb-8\">\n              <div>\n                <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-serif font-light mb-2\" data-testid=\"text-trending-title\">\n                  Trending Now\n                </h2>\n                <p className=\"text-muted-foreground\" data-testid=\"text-trending-subtitle\">\n                  Most popular picks this week\n                </p>\n              </div>\n              <div className=\"flex gap-2\">\n                <Button\n                  size=\"icon\"\n                  variant=\"outline\"\n                  onClick={scrollTrendingPrev}\n                  disabled={!canScrollTrendingPrev}\n                  className=\"hidden md:flex\"\n                  data-testid=\"button-trending-prev\"\n                >\n                  <ChevronLeft className=\"h-4 w-4\" />\n                </Button>\n                <Button\n                  size=\"icon\"\n                  variant=\"outline\"\n                  onClick={scrollTrendingNext}\n                  disabled={!canScrollTrendingNext}\n                  className=\"hidden md:flex\"\n                  data-testid=\"button-trending-next\"\n                >\n                  <ChevronRight className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n\n            <div className=\"overflow-hidden\" ref={trendingRef}>\n              <div className=\"flex gap-4 md:gap-6\">\n                {trendingProducts.map((product) => (\n                  <div \n                    key={product.id} \n                    className=\"flex-[0_0_70%] sm:flex-[0_0_45%] md:flex-[0_0_32%] lg:flex-[0_0_24%] min-w-0\"\n                  >\n                    <motion.div\n                      whileHover={{ y: -8 }}\n                      transition={{ duration: 0.3 }}\n                      className=\"group relative h-full\"\n                      data-testid={`card-trending-${product.id}`}\n                    >\n                      <Card className=\"overflow-hidden h-full hover-elevate active-elevate-2 transition-shadow\">\n                        <div className=\"relative aspect-[3/4] overflow-hidden bg-muted\">\n                          <motion.img\n                            src={product.image}\n                            alt={product.name}\n                            className=\"w-full h-full object-cover\"\n                            whileHover={{ scale: 1.1 }}\n                            transition={{ duration: 0.5 }}\n                            data-testid={`img-trending-${product.id}`}\n                          />\n                          <div className=\"absolute top-3 left-3\">\n                            <Badge className=\"bg-primary text-primary-foreground\" data-testid={`badge-trending-new-${product.id}`}>\n                              <TrendingUp className=\"w-3 h-3 mr-1\" />\n                              Trending\n                            </Badge>\n                          </div>\n                          <div className=\"absolute inset-x-2 sm:inset-x-3 bottom-2 sm:bottom-3 flex gap-2 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n                            <Button\n                              size=\"sm\"\n                              className=\"flex-1 text-xs sm:text-sm\"\n                              onClick={() => handleAddToCart(product.id)}\n                              data-testid={`button-trending-add-cart-${product.id}`}\n                            >\n                              <ShoppingBag className=\"h-3 w-3 sm:h-4 sm:w-4 sm:mr-2\" />\n                              <span className=\"hidden sm:inline\">Add to Cart</span>\n                            </Button>\n                            <Button\n                              size=\"icon\"\n                              variant=\"secondary\"\n                              className=\"h-8 w-8 sm:h-9 sm:w-9\"\n                              data-testid={`button-trending-wishlist-${product.id}`}\n                            >\n                              <Heart className=\"h-3 w-3 sm:h-4 sm:w-4\" />\n                            </Button>\n                          </div>\n                        </div>\n                        <div className=\"p-4 space-y-1\">\n                          <p className=\"text-xs text-muted-foreground uppercase tracking-wider truncate\" data-testid={`text-trending-category-${product.id}`}>\n                            {product.category}\n                          </p>\n                          <h3 className=\"font-medium text-sm sm:text-base truncate\" data-testid={`text-trending-name-${product.id}`}>\n                            {product.name}\n                          </h3>\n                          <p className=\"font-medium text-sm sm:text-base\" data-testid={`text-trending-price-${product.id}`}>\n                            ${product.price}\n                          </p>\n                        </div>\n                      </Card>\n                    </motion.div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </section>\n        </AnimatedSection>\n\n        <AnimatedSection animation=\"fade-in-up\" delay={300}>\n          <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16\" data-testid=\"section-featured\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-16 items-center bg-muted/30 rounded-2xl overflow-hidden\"\n            >\n              <div className=\"aspect-[4/5] relative overflow-hidden\">\n                <motion.img \n                  src={coat} \n                  alt=\"Featured New Arrival\" \n                  className=\"w-full h-full object-cover\"\n                  whileHover={{ scale: 1.05 }}\n                  transition={{ duration: 0.6 }}\n                  data-testid=\"img-featured-product\"\n                />\n                <Badge className=\"absolute top-4 left-4 gap-1\" data-testid=\"badge-featured-just-in\">\n                  <Sparkles className=\"w-3 h-3\" />\n                  Just In\n                </Badge>\n              </div>\n              <div className=\"p-8 lg:p-12\">\n                <Badge variant=\"outline\" className=\"mb-4\" data-testid=\"badge-featured-label\">Featured</Badge>\n                <h2 className=\"text-3xl sm:text-4xl font-serif font-light mb-4\" data-testid=\"text-featured-title\">\n                  Minimalist Black Coat\n                </h2>\n                <p className=\"text-lg text-muted-foreground mb-6\" data-testid=\"text-featured-description\">\n                  The perfect blend of sophistication and comfort. This season's must-have outerwear piece.\n                </p>\n                <div className=\"flex items-baseline gap-3 mb-8\">\n                  <span className=\"text-3xl font-semibold\" data-testid=\"text-featured-price\">$299</span>\n                  <span className=\"text-sm text-muted-foreground\" data-testid=\"text-featured-shipping\">Free Shipping</span>\n                </div>\n                <Button size=\"lg\" onClick={() => handleAddToCart('1')} className=\"w-full sm:w-auto\" data-testid=\"button-featured-add-cart\">\n                  Add to Cart\n                </Button>\n              </div>\n            </motion.div>\n          </section>\n        </AnimatedSection>\n\n        <AnimatedSection animation=\"fade-in-up\" delay={400}>\n          <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16\" data-testid=\"section-all-arrivals\">\n            <motion.div\n              initial={{ opacity: 0 }}\n              whileInView={{ opacity: 1 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"mb-8\"\n            >\n              <h2 className=\"text-3xl sm:text-4xl font-serif font-light mb-4\" data-testid=\"text-latest-title\">\n                Latest Releases\n              </h2>\n              <p className=\"text-muted-foreground\" data-testid=\"text-latest-subtitle\">\n                Fresh from the studio, curated for your wardrobe\n              </p>\n            </motion.div>\n\n            <ProductGrid\n              products={mockProducts}\n              onAddToCart={handleAddToCart}\n              onWishlist={(id) => console.log('Added to wishlist:', id)}\n            />\n          </section>\n        </AnimatedSection>\n      </main>\n\n      <Footer />\n\n      <CartDrawer\n        isOpen={isCartOpen}\n        onClose={() => setIsCartOpen(false)}\n        items={cartItems}\n        onUpdateQuantity={handleUpdateQuantity}\n        onRemoveItem={handleRemoveItem}\n        onCheckout={() => console.log('Checkout clicked')}\n      />\n    </div>\n  );\n}\n","size_bytes":22301},"client/src/pages/SalePage.tsx":{"content":"import { useState, useEffect, useCallback } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport useEmblaCarousel from 'embla-carousel-react';\nimport Autoplay from 'embla-carousel-autoplay';\nimport Header from \"@/components/Header\";\nimport ProductGrid from \"@/components/ProductGrid\";\nimport Footer from \"@/components/Footer\";\nimport CartDrawer from \"@/components/CartDrawer\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Clock, Percent, Tag, TrendingUp, Flame, Zap, ChevronLeft, ChevronRight, ShoppingCart } from \"lucide-react\";\n\nimport sneakers from '@assets/generated_images/White_minimalist_fashion_sneakers_ba10d597.png';\nimport sweater from '@assets/generated_images/Beige_cashmere_luxury_sweater_f7741aad.png';\nimport coat from '@assets/generated_images/Black_minimalist_fashion_coat_cd5d7051.png';\nimport handbag from '@assets/generated_images/Brown_leather_luxury_handbag_1cdfb11b.png';\nimport blazer from '@assets/generated_images/Navy_blue_tailored_blazer_cc037dc0.png';\nimport trousers from '@assets/generated_images/Olive_green_wide-leg_trousers_1935f49c.png';\n\nconst flashSaleProducts = [\n  { id: 'f1', name: 'Classic White Sneakers', price: 129, salePrice: 89, image: sneakers, category: 'Footwear', discount: 31, endsIn: 7200 },\n  { id: 'f2', name: 'Luxury Black Coat', price: 399, salePrice: 279, image: coat, category: 'Outerwear', discount: 30, endsIn: 7200 },\n  { id: 'f3', name: 'Navy Blue Blazer', price: 299, salePrice: 199, image: blazer, category: 'Blazers', discount: 33, endsIn: 7200 },\n  { id: 'f4', name: 'Leather Handbag', price: 249, salePrice: 169, image: handbag, category: 'Accessories', discount: 32, endsIn: 7200 },\n];\n\nconst dealsProducts = [\n  { id: 'd1', name: 'Cashmere Sweater', price: 189, salePrice: 149, image: sweater, category: 'Knitwear', discount: 21 },\n  { id: 'd2', name: 'Wide-Leg Trousers', price: 159, salePrice: 119, image: trousers, category: 'Bottoms', discount: 25 },\n  { id: 'd3', name: 'Classic Sneakers', price: 149, salePrice: 99, image: sneakers, category: 'Footwear', discount: 34 },\n  { id: 'd4', name: 'Black Coat', price: 399, salePrice: 299, image: coat, category: 'Outerwear', discount: 25 },\n];\n\nconst trendingDeals = [\n  { id: 't1', name: 'White Sneakers', price: 129, salePrice: 99, image: sneakers, category: 'Footwear', discount: 23, views: 1547, sales: 89 },\n  { id: 't2', name: 'Navy Blazer', price: 299, salePrice: 229, image: blazer, category: 'Blazers', discount: 23, views: 1203, sales: 67 },\n  { id: 't3', name: 'Cashmere Sweater', price: 189, salePrice: 139, image: sweater, category: 'Knitwear', discount: 26, views: 987, sales: 54 },\n  { id: 't4', name: 'Leather Handbag', price: 249, salePrice: 189, image: handbag, category: 'Accessories', discount: 24, views: 876, sales: 43 },\n];\n\nconst flipDeals = [\n  { id: 'flip1', name: 'Premium Coat', price: 399, salePrice: 279, image: coat, category: 'Outerwear', discount: 30, savings: 120 },\n  { id: 'flip2', name: 'Tailored Blazer', price: 299, salePrice: 209, image: blazer, category: 'Blazers', discount: 30, savings: 90 },\n  { id: 'flip3', name: 'Designer Handbag', price: 249, salePrice: 174, image: handbag, category: 'Accessories', discount: 30, savings: 75 },\n  { id: 'flip4', name: 'Wide-Leg Trousers', price: 159, salePrice: 111, image: trousers, category: 'Bottoms', discount: 30, savings: 48 },\n];\n\nconst mockProducts = [\n  { id: '3', name: 'Classic White Sneakers', price: 129, image: sneakers, category: 'Footwear', isSale: true, salePrice: 99 },\n  { id: '8', name: 'Cashmere Sweater Navy', price: 189, image: sweater, category: 'Knitwear', isSale: true, salePrice: 149 },\n  { id: '9', name: 'Summer Sneakers', price: 149, image: sneakers, category: 'Footwear', isSale: true, salePrice: 119 },\n  { id: '12', name: 'Wool Sweater', price: 179, image: sweater, category: 'Knitwear', isSale: true, salePrice: 139 },\n];\n\ninterface CartItem {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n  size?: string;\n}\n\nfunction CountdownTimer({ seconds }: { seconds: number }) {\n  const [timeLeft, setTimeLeft] = useState(seconds);\n\n  useEffect(() => {\n    if (timeLeft <= 0) return;\n\n    const timer = setInterval(() => {\n      setTimeLeft((prev) => Math.max(0, prev - 1));\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  const hours = Math.floor(timeLeft / 3600);\n  const minutes = Math.floor((timeLeft % 3600) / 60);\n  const secs = timeLeft % 60;\n\n  return (\n    <div className=\"flex items-center gap-1 sm:gap-2\" data-testid=\"countdown-timer\">\n      <div className=\"flex flex-col items-center bg-gradient-to-br from-red-500 to-orange-500 text-white px-2 py-1 rounded-md min-w-[2.5rem]\">\n        <span className=\"text-lg sm:text-xl font-bold leading-none\" data-testid=\"countdown-hours\">{String(hours).padStart(2, '0')}</span>\n        <span className=\"text-[0.6rem] uppercase\">hrs</span>\n      </div>\n      <span className=\"text-lg font-bold\">:</span>\n      <div className=\"flex flex-col items-center bg-gradient-to-br from-red-500 to-orange-500 text-white px-2 py-1 rounded-md min-w-[2.5rem]\">\n        <span className=\"text-lg sm:text-xl font-bold leading-none\" data-testid=\"countdown-minutes\">{String(minutes).padStart(2, '0')}</span>\n        <span className=\"text-[0.6rem] uppercase\">min</span>\n      </div>\n      <span className=\"text-lg font-bold\">:</span>\n      <div className=\"flex flex-col items-center bg-gradient-to-br from-red-500 to-orange-500 text-white px-2 py-1 rounded-md min-w-[2.5rem]\">\n        <span className=\"text-lg sm:text-xl font-bold leading-none\" data-testid=\"countdown-seconds\">{String(secs).padStart(2, '0')}</span>\n        <span className=\"text-[0.6rem] uppercase\">sec</span>\n      </div>\n    </div>\n  );\n}\n\nfunction FlashSaleCarousel({ products, onAddToCart }: { products: typeof flashSaleProducts; onAddToCart: (id: string) => void }) {\n  const [emblaRef, emblaApi] = useEmblaCarousel(\n    { loop: true, align: 'start' },\n    [Autoplay({ delay: 4000, stopOnInteraction: false })]\n  );\n\n  const scrollPrev = useCallback(() => emblaApi?.scrollPrev(), [emblaApi]);\n  const scrollNext = useCallback(() => emblaApi?.scrollNext(), [emblaApi]);\n\n  return (\n    <div className=\"relative\" data-testid=\"carousel-flash-sale\">\n      <div className=\"overflow-hidden\" ref={emblaRef}>\n        <div className=\"flex gap-4\">\n          {products.map((product, index) => (\n            <div key={product.id} className=\"flex-[0_0_85%] sm:flex-[0_0_70%] md:flex-[0_0_45%] lg:flex-[0_0_30%] min-w-0\">\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: index * 0.1 }}\n              >\n                <Card className=\"overflow-hidden hover-elevate\" data-testid={`card-flash-sale-${product.id}`}>\n                  <div className=\"relative aspect-[4/5] overflow-hidden\">\n                    <img\n                      src={product.image}\n                      alt={product.name}\n                      className=\"w-full h-full object-cover transition-transform duration-500 hover:scale-110\"\n                      data-testid={`img-flash-sale-${product.id}`}\n                    />\n                    <div className=\"absolute top-3 left-3\">\n                      <Badge className=\"bg-gradient-to-r from-red-500 to-orange-500 text-white border-0\">\n                        <Flame className=\"w-3 h-3 mr-1\" />\n                        {product.discount}% OFF\n                      </Badge>\n                    </div>\n                    <div className=\"absolute top-3 right-3\">\n                      <Badge className=\"bg-black/60 text-white border-0 backdrop-blur-sm\">\n                        <Zap className=\"w-3 h-3 mr-1\" />\n                        Flash\n                      </Badge>\n                    </div>\n                  </div>\n                  <div className=\"p-4 space-y-3\">\n                    <div>\n                      <p className=\"text-xs text-muted-foreground mb-1\">{product.category}</p>\n                      <h3 className=\"font-medium line-clamp-1\" data-testid={`text-flash-sale-name-${product.id}`}>{product.name}</h3>\n                    </div>\n                    <div className=\"flex items-baseline gap-2\">\n                      <span className=\"text-lg font-bold text-red-600\" data-testid={`text-flash-sale-price-${product.id}`}>${product.salePrice}</span>\n                      <span className=\"text-sm text-muted-foreground line-through\">${product.price}</span>\n                    </div>\n                    <div className=\"space-y-2\">\n                      <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                        <Clock className=\"w-3 h-3\" />\n                        <span>Ends in:</span>\n                      </div>\n                      <CountdownTimer seconds={product.endsIn} />\n                    </div>\n                    <Button \n                      className=\"w-full bg-gradient-to-r from-red-500 to-orange-500 hover:from-red-600 hover:to-orange-600 text-white border-0\"\n                      onClick={() => onAddToCart(product.id)}\n                      data-testid={`button-add-to-cart-${product.id}`}\n                    >\n                      <ShoppingCart className=\"w-4 h-4 mr-2\" />\n                      Add to Cart\n                    </Button>\n                  </div>\n                </Card>\n              </motion.div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <Button\n        size=\"icon\"\n        variant=\"outline\"\n        onClick={scrollPrev}\n        className=\"absolute left-2 top-1/2 -translate-y-1/2 z-10 bg-background/80 backdrop-blur-sm hidden md:flex\"\n        data-testid=\"button-flash-sale-prev\"\n      >\n        <ChevronLeft className=\"h-4 w-4\" />\n      </Button>\n      <Button\n        size=\"icon\"\n        variant=\"outline\"\n        onClick={scrollNext}\n        className=\"absolute right-2 top-1/2 -translate-y-1/2 z-10 bg-background/80 backdrop-blur-sm hidden md:flex\"\n        data-testid=\"button-flash-sale-next\"\n      >\n        <ChevronRight className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  );\n}\n\nfunction DealsShowcaseSlider({ products, onAddToCart }: { products: typeof dealsProducts; onAddToCart: (id: string) => void }) {\n  const [emblaRef, emblaApi] = useEmblaCarousel(\n    { loop: true, align: 'start' },\n    [Autoplay({ delay: 3500, stopOnInteraction: false })]\n  );\n\n  const scrollPrev = useCallback(() => emblaApi?.scrollPrev(), [emblaApi]);\n  const scrollNext = useCallback(() => emblaApi?.scrollNext(), [emblaApi]);\n\n  return (\n    <div className=\"relative\" data-testid=\"carousel-deals-showcase\">\n      <div className=\"overflow-hidden\" ref={emblaRef}>\n        <div className=\"flex gap-4\">\n          {products.map((product, index) => (\n            <div key={product.id} className=\"flex-[0_0_90%] sm:flex-[0_0_60%] md:flex-[0_0_40%] lg:flex-[0_0_30%] min-w-0\">\n              <motion.div\n                initial={{ opacity: 0, scale: 0.9 }}\n                animate={{ opacity: 1, scale: 1 }}\n                transition={{ delay: index * 0.1 }}\n                whileHover={{ y: -8 }}\n              >\n                <Card className=\"relative overflow-hidden border-2 border-orange-500/20 hover-elevate\" data-testid={`card-deals-showcase-${product.id}`}>\n                  <div className=\"absolute -right-8 -top-8 w-24 h-24 bg-gradient-to-br from-red-500 to-orange-500 rounded-full flex items-center justify-center\">\n                    <span className=\"text-white font-bold text-lg mt-8 ml-4\">{product.discount}%</span>\n                  </div>\n                  <div className=\"relative aspect-square overflow-hidden\">\n                    <img\n                      src={product.image}\n                      alt={product.name}\n                      className=\"w-full h-full object-cover\"\n                      data-testid={`img-deals-showcase-${product.id}`}\n                    />\n                  </div>\n                  <div className=\"p-4 space-y-2\">\n                    <Badge variant=\"outline\" className=\"text-xs\">{product.category}</Badge>\n                    <h3 className=\"font-medium line-clamp-1\" data-testid={`text-deals-showcase-name-${product.id}`}>{product.name}</h3>\n                    <div className=\"flex items-baseline gap-2\">\n                      <span className=\"text-xl font-bold\" data-testid={`text-deals-showcase-price-${product.id}`}>${product.salePrice}</span>\n                      <span className=\"text-sm text-muted-foreground line-through\">${product.price}</span>\n                    </div>\n                    <Button \n                      className=\"w-full\" \n                      variant=\"outline\"\n                      onClick={() => onAddToCart(product.id)}\n                      data-testid={`button-deals-add-to-cart-${product.id}`}\n                    >\n                      Shop Now\n                    </Button>\n                  </div>\n                </Card>\n              </motion.div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <Button\n        size=\"icon\"\n        variant=\"outline\"\n        onClick={scrollPrev}\n        className=\"absolute left-2 top-1/2 -translate-y-1/2 z-10 bg-background/80 backdrop-blur-sm hidden md:flex\"\n        data-testid=\"button-deals-showcase-prev\"\n      >\n        <ChevronLeft className=\"h-4 w-4\" />\n      </Button>\n      <Button\n        size=\"icon\"\n        variant=\"outline\"\n        onClick={scrollNext}\n        className=\"absolute right-2 top-1/2 -translate-y-1/2 z-10 bg-background/80 backdrop-blur-sm hidden md:flex\"\n        data-testid=\"button-deals-showcase-next\"\n      >\n        <ChevronRight className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  );\n}\n\nfunction FlipDealCard({ product, onAddToCart }: { product: typeof flipDeals[0]; onAddToCart: (id: string) => void }) {\n  const [isFlipped, setIsFlipped] = useState(false);\n\n  return (\n    <motion.div\n      className=\"perspective-1000 h-[400px]\"\n      onHoverStart={() => setIsFlipped(true)}\n      onHoverEnd={() => setIsFlipped(false)}\n      data-testid={`card-flip-deal-${product.id}`}\n    >\n      <motion.div\n        className=\"relative w-full h-full\"\n        animate={{ rotateY: isFlipped ? 180 : 0 }}\n        transition={{ duration: 0.6, type: \"spring\" }}\n        style={{ transformStyle: \"preserve-3d\" }}\n      >\n        {/* Front */}\n        <Card className=\"absolute inset-0 overflow-hidden backface-hidden\" style={{ backfaceVisibility: \"hidden\" }}>\n          <div className=\"relative h-full\">\n            <img\n              src={product.image}\n              alt={product.name}\n              className=\"w-full h-full object-cover\"\n              data-testid={`img-flip-deal-front-${product.id}`}\n            />\n            <div className=\"absolute inset-0 bg-gradient-to-t from-black/80 via-black/40 to-transparent\" />\n            <div className=\"absolute top-4 right-4\">\n              <Badge className=\"bg-gradient-to-r from-red-500 to-orange-500 text-white text-lg px-3 py-1\">\n                {product.discount}% OFF\n              </Badge>\n            </div>\n            <div className=\"absolute bottom-0 left-0 right-0 p-6 text-white\">\n              <p className=\"text-sm opacity-90 mb-2\">{product.category}</p>\n              <h3 className=\"text-2xl font-serif font-light mb-3\" data-testid={`text-flip-deal-name-${product.id}`}>{product.name}</h3>\n              <div className=\"flex items-baseline gap-3\">\n                <span className=\"text-3xl font-bold\">${product.salePrice}</span>\n                <span className=\"text-lg line-through opacity-70\">${product.price}</span>\n              </div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Back */}\n        <Card \n          className=\"absolute inset-0 overflow-hidden backface-hidden bg-gradient-to-br from-red-500 to-orange-500 text-white p-6 flex flex-col justify-center items-center\" \n          style={{ backfaceVisibility: \"hidden\", transform: \"rotateY(180deg)\" }}\n          data-testid={`card-flip-deal-back-${product.id}`}\n        >\n          <motion.div\n            initial={{ opacity: 0, scale: 0.8 }}\n            animate={{ opacity: isFlipped ? 1 : 0, scale: isFlipped ? 1 : 0.8 }}\n            transition={{ delay: 0.2 }}\n            className=\"text-center\"\n          >\n            <Zap className=\"w-16 h-16 mx-auto mb-4\" />\n            <h3 className=\"text-3xl font-bold mb-4\">YOU SAVE</h3>\n            <p className=\"text-6xl font-bold mb-6\" data-testid={`text-flip-deal-savings-${product.id}`}>${product.savings}</p>\n            <div className=\"space-y-2 mb-6\">\n              <p className=\"text-lg\">Original: ${product.price}</p>\n              <p className=\"text-lg\">Sale: ${product.salePrice}</p>\n            </div>\n            <Button \n              size=\"lg\"\n              className=\"bg-white text-red-600 hover:bg-white/90 w-full\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onAddToCart(product.id);\n              }}\n              data-testid={`button-flip-deal-add-to-cart-${product.id}`}\n            >\n              Add to Cart\n            </Button>\n          </motion.div>\n        </Card>\n      </motion.div>\n    </motion.div>\n  );\n}\n\nfunction TrendingDealsCarousel({ products, onAddToCart }: { products: typeof trendingDeals; onAddToCart: (id: string) => void }) {\n  const [emblaRef, emblaApi] = useEmblaCarousel(\n    { loop: true, align: 'start' },\n    [Autoplay({ delay: 4500, stopOnInteraction: false })]\n  );\n\n  const scrollPrev = useCallback(() => emblaApi?.scrollPrev(), [emblaApi]);\n  const scrollNext = useCallback(() => emblaApi?.scrollNext(), [emblaApi]);\n\n  return (\n    <div className=\"relative\" data-testid=\"carousel-trending-deals\">\n      <div className=\"overflow-hidden\" ref={emblaRef}>\n        <div className=\"flex gap-4\">\n          {products.map((product, index) => (\n            <div key={product.id} className=\"flex-[0_0_85%] sm:flex-[0_0_55%] md:flex-[0_0_45%] lg:flex-[0_0_30%] min-w-0\">\n              <motion.div\n                initial={{ opacity: 0, x: 50 }}\n                animate={{ opacity: 1, x: 0 }}\n                transition={{ delay: index * 0.15 }}\n              >\n                <Card className=\"overflow-hidden hover-elevate\" data-testid={`card-trending-deal-${product.id}`}>\n                  <div className=\"relative\">\n                    <div className=\"absolute top-3 left-3 z-10\">\n                      <Badge className=\"bg-gradient-to-r from-purple-500 to-pink-500 text-white border-0 gap-1\">\n                        <TrendingUp className=\"w-3 h-3\" />\n                        Trending\n                      </Badge>\n                    </div>\n                    <div className=\"absolute top-3 right-3 z-10\">\n                      <Badge variant=\"secondary\" className=\"bg-black/60 text-white border-0 backdrop-blur-sm\">\n                        {product.discount}% OFF\n                      </Badge>\n                    </div>\n                    <div className=\"relative aspect-[4/5] overflow-hidden\">\n                      <img\n                        src={product.image}\n                        alt={product.name}\n                        className=\"w-full h-full object-cover transition-transform duration-500 hover:scale-105\"\n                        data-testid={`img-trending-deal-${product.id}`}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"p-4 space-y-3\">\n                    <div>\n                      <p className=\"text-xs text-muted-foreground mb-1\">{product.category}</p>\n                      <h3 className=\"font-medium line-clamp-1\" data-testid={`text-trending-deal-name-${product.id}`}>{product.name}</h3>\n                    </div>\n                    <div className=\"flex items-baseline gap-2\">\n                      <span className=\"text-lg font-bold\" data-testid={`text-trending-deal-price-${product.id}`}>${product.salePrice}</span>\n                      <span className=\"text-sm text-muted-foreground line-through\">${product.price}</span>\n                    </div>\n                    <div className=\"flex items-center gap-4 text-xs text-muted-foreground\">\n                      <div className=\"flex items-center gap-1\">\n                        <motion.div\n                          animate={{ scale: [1, 1.2, 1] }}\n                          transition={{ duration: 2, repeat: Infinity }}\n                        >\n                          👁️\n                        </motion.div>\n                        <span data-testid={`text-trending-views-${product.id}`}>{product.views}</span>\n                      </div>\n                      <div className=\"flex items-center gap-1\">\n                        <motion.div\n                          animate={{ rotate: [0, 10, -10, 0] }}\n                          transition={{ duration: 2, repeat: Infinity }}\n                        >\n                          🔥\n                        </motion.div>\n                        <span data-testid={`text-trending-sales-${product.id}`}>{product.sales} sold</span>\n                      </div>\n                    </div>\n                    <Button \n                      className=\"w-full\"\n                      onClick={() => onAddToCart(product.id)}\n                      data-testid={`button-trending-add-to-cart-${product.id}`}\n                    >\n                      Add to Cart\n                    </Button>\n                  </div>\n                </Card>\n              </motion.div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <Button\n        size=\"icon\"\n        variant=\"outline\"\n        onClick={scrollPrev}\n        className=\"absolute left-2 top-1/2 -translate-y-1/2 z-10 bg-background/80 backdrop-blur-sm hidden md:flex\"\n        data-testid=\"button-trending-deals-prev\"\n      >\n        <ChevronLeft className=\"h-4 w-4\" />\n      </Button>\n      <Button\n        size=\"icon\"\n        variant=\"outline\"\n        onClick={scrollNext}\n        className=\"absolute right-2 top-1/2 -translate-y-1/2 z-10 bg-background/80 backdrop-blur-sm hidden md:flex\"\n        data-testid=\"button-trending-deals-next\"\n      >\n        <ChevronRight className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  );\n}\n\nexport default function SalePage() {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n\n  const handleAddToCart = (productId: string) => {\n    const allProducts = [...flashSaleProducts, ...dealsProducts, ...trendingDeals, ...flipDeals, ...mockProducts] as any[];\n    const product = allProducts.find(p => p.id === productId);\n    if (!product) return;\n\n    const existingItem = cartItems.find(item => item.id === productId);\n    const price = product.salePrice || product.price;\n    \n    if (existingItem) {\n      setCartItems(cartItems.map(item =>\n        item.id === productId\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      setCartItems([...cartItems, {\n        id: product.id,\n        name: product.name,\n        price: price,\n        quantity: 1,\n        image: product.image,\n        size: 'M'\n      }]);\n    }\n  };\n\n  const handleUpdateQuantity = (id: string, quantity: number) => {\n    if (quantity === 0) {\n      handleRemoveItem(id);\n    } else {\n      setCartItems(cartItems.map(item =>\n        item.id === id ? { ...item, quantity } : item\n      ));\n    }\n  };\n\n  const handleRemoveItem = (id: string) => {\n    setCartItems(cartItems.filter(item => item.id !== id));\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <div className=\"flex items-center justify-end p-3 md:p-4 border-b\">\n        <ThemeToggle />\n      </div>\n      \n      <Header \n        cartItemCount={cartItems.reduce((sum, item) => sum + item.quantity, 0)}\n        onCartClick={() => setIsCartOpen(true)}\n      />\n\n      <main className=\"flex-1\">\n        {/* Hero Section */}\n        <section className=\"relative overflow-hidden bg-gradient-to-br from-red-500/10 via-background to-orange-500/10\">\n          <motion.div\n            className=\"absolute inset-0 opacity-20\"\n            animate={{\n              backgroundPosition: [\"0% 0%\", \"100% 100%\"],\n            }}\n            transition={{\n              duration: 20,\n              repeat: Infinity,\n              repeatType: \"reverse\",\n            }}\n            style={{\n              backgroundImage: \"radial-gradient(circle, red 1px, transparent 1px)\",\n              backgroundSize: \"50px 50px\",\n            }}\n          />\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-16 md:py-24 relative\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              className=\"max-w-4xl mx-auto text-center\"\n            >\n              <motion.div\n                animate={{ scale: [1, 1.05, 1] }}\n                transition={{ duration: 2, repeat: Infinity }}\n              >\n                <Badge variant=\"destructive\" className=\"mb-6 gap-1 text-base px-4 py-2 bg-gradient-to-r from-red-500 to-orange-500\">\n                  <Flame className=\"w-4 h-4\" />\n                  HOT SALE - Limited Time Only\n                </Badge>\n              </motion.div>\n              <h1 className=\"text-5xl sm:text-6xl md:text-7xl lg:text-8xl font-serif font-light mb-6 bg-gradient-to-r from-red-600 to-orange-600 bg-clip-text text-transparent\">\n                Flash Sale\n              </h1>\n              <p className=\"text-lg sm:text-xl text-muted-foreground max-w-2xl mx-auto mb-8\">\n                Don't miss out on incredible savings. Premium fashion at unbeatable prices.\n              </p>\n              <div className=\"flex flex-wrap items-center justify-center gap-4 text-sm\">\n                <motion.div\n                  animate={{ y: [0, -5, 0] }}\n                  transition={{ duration: 2, repeat: Infinity }}\n                  className=\"flex items-center gap-2 px-4 py-2 rounded-full bg-gradient-to-r from-red-500/20 to-orange-500/20 border border-red-500/30\"\n                >\n                  <Percent className=\"w-4 h-4 text-red-600\" />\n                  <span className=\"font-medium\">Up to 40% Off</span>\n                </motion.div>\n                <motion.div\n                  animate={{ y: [0, -5, 0] }}\n                  transition={{ duration: 2, repeat: Infinity, delay: 0.2 }}\n                  className=\"flex items-center gap-2 px-4 py-2 rounded-full bg-gradient-to-r from-orange-500/20 to-red-500/20 border border-orange-500/30\"\n                >\n                  <Clock className=\"w-4 h-4 text-orange-600\" />\n                  <span className=\"font-medium\">Hurry - Ends Soon!</span>\n                </motion.div>\n              </div>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Flash Sale Carousel */}\n        <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16\">\n          <motion.div\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"mb-8\"\n          >\n            <div className=\"flex items-center gap-3 mb-2\">\n              <Flame className=\"w-8 h-8 text-red-600\" />\n              <h2 className=\"text-3xl sm:text-4xl font-serif font-light\">Flash Sale</h2>\n            </div>\n            <p className=\"text-muted-foreground\">Limited quantities - Shop before time runs out!</p>\n          </motion.div>\n          <FlashSaleCarousel products={flashSaleProducts} onAddToCart={handleAddToCart} />\n        </section>\n\n        {/* Deals Showcase Slider */}\n        <section className=\"bg-gradient-to-br from-orange-500/5 via-background to-red-500/5 py-12 md:py-16\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0 }}\n              whileInView={{ opacity: 1 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"mb-8\"\n            >\n              <div className=\"flex items-center gap-3 mb-2\">\n                <Tag className=\"w-8 h-8 text-orange-600\" />\n                <h2 className=\"text-3xl sm:text-4xl font-serif font-light\">Today's Best Deals</h2>\n              </div>\n              <p className=\"text-muted-foreground\">Curated selections at incredible prices</p>\n            </motion.div>\n            <DealsShowcaseSlider products={dealsProducts} onAddToCart={handleAddToCart} />\n          </div>\n        </section>\n\n        {/* Flip Deal Cards */}\n        <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16\">\n          <motion.div\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"mb-8\"\n          >\n            <div className=\"flex items-center gap-3 mb-2\">\n              <Zap className=\"w-8 h-8 text-purple-600\" />\n              <h2 className=\"text-3xl sm:text-4xl font-serif font-light\">Savings Reveal</h2>\n            </div>\n            <p className=\"text-muted-foreground\">Hover to see how much you save</p>\n          </motion.div>\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {flipDeals.map((product) => (\n              <FlipDealCard key={product.id} product={product} onAddToCart={handleAddToCart} />\n            ))}\n          </div>\n        </section>\n\n        {/* Trending Deals Carousel */}\n        <section className=\"bg-muted/30 py-12 md:py-16\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0 }}\n              whileInView={{ opacity: 1 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"mb-8\"\n            >\n              <div className=\"flex items-center gap-3 mb-2\">\n                <TrendingUp className=\"w-8 h-8 text-pink-600\" />\n                <h2 className=\"text-3xl sm:text-4xl font-serif font-light\">Trending Deals</h2>\n              </div>\n              <p className=\"text-muted-foreground\">Most popular items flying off the shelves</p>\n            </motion.div>\n            <TrendingDealsCarousel products={trendingDeals} onAddToCart={handleAddToCart} />\n          </div>\n        </section>\n\n        {/* All Sale Items */}\n        <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16\">\n          <motion.div\n            initial={{ opacity: 0 }}\n            whileInView={{ opacity: 1 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"mb-12\"\n          >\n            <h2 className=\"text-3xl sm:text-4xl font-serif font-light mb-4\">\n              All Sale Items\n            </h2>\n            <p className=\"text-muted-foreground text-lg\">\n              Premium quality at discounted prices\n            </p>\n          </motion.div>\n\n          <ProductGrid\n            products={mockProducts}\n            onAddToCart={handleAddToCart}\n            onWishlist={(id) => console.log('Added to wishlist:', id)}\n          />\n        </section>\n      </main>\n\n      <Footer />\n\n      <CartDrawer\n        isOpen={isCartOpen}\n        onClose={() => setIsCartOpen(false)}\n        items={cartItems}\n        onUpdateQuantity={handleUpdateQuantity}\n        onRemoveItem={handleRemoveItem}\n        onCheckout={() => console.log('Checkout clicked')}\n      />\n    </div>\n  );\n}\n","size_bytes":31729},"client/src/pages/ShopPage.tsx":{"content":"import { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport Header from \"@/components/Header\";\nimport ProductGrid from \"@/components/ProductGrid\";\nimport FilterSidebar from \"@/components/FilterSidebar\";\nimport Footer from \"@/components/Footer\";\nimport CartDrawer from \"@/components/CartDrawer\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\nimport { Button } from \"@/components/ui/button\";\nimport { \n  SlidersHorizontal, \n  LayoutGrid, \n  LayoutList, \n  ChevronDown,\n  X \n} from \"lucide-react\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetHeader,\n  SheetTitle,\n  SheetDescription,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { Badge } from \"@/components/ui/badge\";\n\n// Import product images\nimport coat from '@assets/generated_images/Black_minimalist_fashion_coat_cd5d7051.png';\nimport sweater from '@assets/generated_images/Beige_cashmere_luxury_sweater_f7741aad.png';\nimport sneakers from '@assets/generated_images/White_minimalist_fashion_sneakers_ba10d597.png';\nimport blazer from '@assets/generated_images/Navy_blue_tailored_blazer_cc037dc0.png';\nimport trousers from '@assets/generated_images/Olive_green_wide-leg_trousers_1935f49c.png';\nimport tshirt from '@assets/generated_images/White_cotton_essential_t-shirt_a79af24d.png';\nimport handbag from '@assets/generated_images/Brown_leather_luxury_handbag_1cdfb11b.png';\n\n//todo: remove mock functionality\nconst mockProducts = [\n  { id: '1', name: 'Minimalist Black Coat', price: 299, image: coat, category: 'Outerwear', isNew: true },\n  { id: '2', name: 'Cashmere Sweater', price: 189, image: sweater, category: 'Knitwear' },\n  { id: '3', name: 'Classic White Sneakers', price: 129, image: sneakers, category: 'Footwear', isSale: true, salePrice: 99 },\n  { id: '4', name: 'Navy Tailored Blazer', price: 349, image: blazer, category: 'Outerwear' },\n  { id: '5', name: 'Wide Leg Trousers', price: 159, image: trousers, category: 'Bottoms', isNew: true },\n  { id: '6', name: 'Essential White Tee', price: 49, image: tshirt, category: 'Basics' },\n  { id: '7', name: 'Leather Handbag', price: 279, image: handbag, category: 'Accessories' },\n  { id: '8', name: 'Cashmere Sweater Navy', price: 189, image: sweater, category: 'Knitwear', isSale: true, salePrice: 149 },\n];\n\ninterface CartItem {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n  size?: string;\n}\n\ntype ViewMode = 'grid' | 'list';\ntype SortOption = 'featured' | 'price-low' | 'price-high' | 'newest';\n\nexport default function ShopPage() {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n  const [isFilterOpen, setIsFilterOpen] = useState(false);\n  const [viewMode, setViewMode] = useState<ViewMode>('grid');\n  const [sortBy, setSortBy] = useState<SortOption>('featured');\n  const [activeFilters, setActiveFilters] = useState<string[]>([]);\n\n  //todo: remove mock functionality\n  const handleAddToCart = (productId: string) => {\n    const product = mockProducts.find(p => p.id === productId);\n    if (!product) return;\n\n    const existingItem = cartItems.find(item => item.id === productId);\n    \n    if (existingItem) {\n      setCartItems(cartItems.map(item =>\n        item.id === productId\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      setCartItems([...cartItems, {\n        id: product.id,\n        name: product.name,\n        price: product.isSale && product.salePrice ? product.salePrice : product.price,\n        quantity: 1,\n        image: product.image,\n        size: 'M'\n      }]);\n    }\n    \n    console.log('Added to cart:', productId);\n  };\n\n  //todo: remove mock functionality\n  const handleUpdateQuantity = (id: string, quantity: number) => {\n    if (quantity === 0) {\n      handleRemoveItem(id);\n    } else {\n      setCartItems(cartItems.map(item =>\n        item.id === id ? { ...item, quantity } : item\n      ));\n    }\n  };\n\n  //todo: remove mock functionality\n  const handleRemoveItem = (id: string) => {\n    setCartItems(cartItems.filter(item => item.id !== id));\n  };\n\n  const sortOptions: Record<SortOption, string> = {\n    'featured': 'Featured',\n    'price-low': 'Price: Low to High',\n    'price-high': 'Price: High to Low',\n    'newest': 'Newest First'\n  };\n\n  const removeFilter = (filter: string) => {\n    setActiveFilters(activeFilters.filter(f => f !== filter));\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <div className=\"flex items-center justify-end p-3 md:p-4 border-b\">\n        <ThemeToggle />\n      </div>\n      \n      <Header \n        cartItemCount={cartItems.reduce((sum, item) => sum + item.quantity, 0)}\n        onCartClick={() => setIsCartOpen(true)}\n      />\n\n      <main className=\"flex-1\">\n        {/* Hero Banner */}\n        <section className=\"bg-muted/30 border-b\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              className=\"max-w-3xl\"\n            >\n              <h1 className=\"text-4xl sm:text-5xl md:text-6xl font-serif font-light mb-4\">\n                All Products\n              </h1>\n              <p className=\"text-lg text-muted-foreground\">\n                Discover our complete collection of carefully curated fashion pieces\n              </p>\n            </motion.div>\n          </div>\n        </section>\n\n        <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-6 md:py-8\">\n          {/* Toolbar */}\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-6 md:mb-8\">\n            {/* Left: Results count and active filters */}\n            <div className=\"flex items-center gap-3 flex-wrap\">\n              <p className=\"text-sm text-muted-foreground\" data-testid=\"text-product-count\">\n                {mockProducts.length} products\n              </p>\n              {activeFilters.length > 0 && (\n                <div className=\"flex items-center gap-2 flex-wrap\">\n                  {activeFilters.map((filter, index) => (\n                    <Badge key={index} variant=\"secondary\" className=\"gap-1\">\n                      {filter}\n                      <button\n                        onClick={() => removeFilter(filter)}\n                        className=\"ml-1 hover:bg-background/80 rounded-full p-0.5\"\n                      >\n                        <X className=\"h-3 w-3\" />\n                      </button>\n                    </Badge>\n                  ))}\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={() => setActiveFilters([])}\n                    className=\"h-auto py-1 px-2 text-xs\"\n                  >\n                    Clear all\n                  </Button>\n                </div>\n              )}\n            </div>\n\n            {/* Right: Controls */}\n            <div className=\"flex items-center gap-3\">\n              {/* Sort Dropdown */}\n              <DropdownMenu>\n                <DropdownMenuTrigger asChild>\n                  <Button variant=\"outline\" className=\"gap-2\">\n                    <span className=\"text-sm\">{sortOptions[sortBy]}</span>\n                    <ChevronDown className=\"h-4 w-4\" />\n                  </Button>\n                </DropdownMenuTrigger>\n                <DropdownMenuContent align=\"end\" className=\"w-48\">\n                  {(Object.entries(sortOptions) as [SortOption, string][]).map(([value, label]) => (\n                    <DropdownMenuItem\n                      key={value}\n                      onClick={() => setSortBy(value)}\n                      className={sortBy === value ? 'bg-accent' : ''}\n                    >\n                      {label}\n                    </DropdownMenuItem>\n                  ))}\n                </DropdownMenuContent>\n              </DropdownMenu>\n\n              {/* View Mode Toggle */}\n              <div className=\"hidden sm:flex items-center gap-1 border rounded-md p-1\">\n                <Button\n                  variant={viewMode === 'grid' ? 'secondary' : 'ghost'}\n                  size=\"sm\"\n                  onClick={() => setViewMode('grid')}\n                  className=\"h-8 w-8 p-0\"\n                >\n                  <LayoutGrid className=\"h-4 w-4\" />\n                </Button>\n                <Button\n                  variant={viewMode === 'list' ? 'secondary' : 'ghost'}\n                  size=\"sm\"\n                  onClick={() => setViewMode('list')}\n                  className=\"h-8 w-8 p-0\"\n                >\n                  <LayoutList className=\"h-4 w-4\" />\n                </Button>\n              </div>\n\n              {/* Mobile Filter Toggle */}\n              <Sheet open={isFilterOpen} onOpenChange={setIsFilterOpen}>\n                <SheetTrigger asChild>\n                  <Button variant=\"outline\" className=\"lg:hidden gap-2\" data-testid=\"button-mobile-filters\">\n                    <SlidersHorizontal className=\"h-4 w-4\" />\n                    <span>Filters</span>\n                  </Button>\n                </SheetTrigger>\n                <SheetContent side=\"left\" className=\"w-full sm:max-w-md\">\n                  <SheetHeader>\n                    <SheetTitle>Filters</SheetTitle>\n                    <SheetDescription>\n                      Refine your product search with these filter options\n                    </SheetDescription>\n                  </SheetHeader>\n                  <div className=\"mt-6\">\n                    <FilterSidebar onFilterChange={(filters) => console.log('Filters:', filters)} />\n                  </div>\n                </SheetContent>\n              </Sheet>\n            </div>\n          </div>\n\n          {/* Main Content */}\n          <div className=\"flex gap-8 lg:gap-12\">\n            {/* Desktop Filter Sidebar */}\n            <motion.aside\n              initial={{ opacity: 0, x: -20 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ duration: 0.5 }}\n              className=\"hidden lg:block w-64 xl:w-72 flex-shrink-0\"\n            >\n              <div className=\"sticky top-24 space-y-6\">\n                <div>\n                  <h3 className=\"text-sm font-semibold mb-3\">Refine Your Search</h3>\n                  <p className=\"text-xs text-muted-foreground mb-4\">\n                    Use filters to find exactly what you're looking for\n                  </p>\n                </div>\n                <FilterSidebar onFilterChange={(filters) => console.log('Filters:', filters)} />\n              </div>\n            </motion.aside>\n\n            {/* Product Display Area */}\n            <div className=\"flex-1 min-w-0\">\n              <AnimatePresence mode=\"wait\">\n                <motion.div\n                  key={viewMode}\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -20 }}\n                  transition={{ duration: 0.3 }}\n                >\n                  {viewMode === 'grid' ? (\n                    <ProductGrid\n                      products={mockProducts}\n                      onAddToCart={handleAddToCart}\n                      onWishlist={(id) => console.log('Added to wishlist:', id)}\n                    />\n                  ) : (\n                    <div className=\"space-y-4\">\n                      {mockProducts.map((product) => (\n                        <motion.div\n                          key={product.id}\n                          initial={{ opacity: 0 }}\n                          animate={{ opacity: 1 }}\n                          className=\"flex gap-6 p-4 border rounded-lg hover:shadow-md transition-shadow bg-card\"\n                        >\n                          <div className=\"w-32 h-40 flex-shrink-0 rounded-md overflow-hidden bg-muted\">\n                            <img\n                              src={product.image}\n                              alt={product.name}\n                              className=\"w-full h-full object-cover\"\n                            />\n                          </div>\n                          <div className=\"flex-1 flex flex-col justify-between\">\n                            <div>\n                              <div className=\"flex items-start justify-between gap-4 mb-2\">\n                                <h3 className=\"text-lg font-medium\">{product.name}</h3>\n                                <div className=\"flex gap-1\">\n                                  {product.isNew && (\n                                    <Badge variant=\"secondary\" className=\"text-xs\">New</Badge>\n                                  )}\n                                  {product.isSale && (\n                                    <Badge variant=\"destructive\" className=\"text-xs\">Sale</Badge>\n                                  )}\n                                </div>\n                              </div>\n                              <p className=\"text-sm text-muted-foreground mb-3\">{product.category}</p>\n                              <div className=\"flex items-baseline gap-2\">\n                                {product.isSale && product.salePrice ? (\n                                  <>\n                                    <span className=\"text-xl font-semibold\">${product.salePrice}</span>\n                                    <span className=\"text-sm text-muted-foreground line-through\">${product.price}</span>\n                                  </>\n                                ) : (\n                                  <span className=\"text-xl font-semibold\">${product.price}</span>\n                                )}\n                              </div>\n                            </div>\n                            <Button onClick={() => handleAddToCart(product.id)} className=\"w-full sm:w-auto\">\n                              Add to Cart\n                            </Button>\n                          </div>\n                        </motion.div>\n                      ))}\n                    </div>\n                  )}\n                </motion.div>\n              </AnimatePresence>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <Footer />\n\n      <CartDrawer\n        isOpen={isCartOpen}\n        onClose={() => setIsCartOpen(false)}\n        items={cartItems}\n        onUpdateQuantity={handleUpdateQuantity}\n        onRemoveItem={handleRemoveItem}\n        onCheckout={() => console.log('Checkout clicked')}\n      />\n    </div>\n  );\n}\n","size_bytes":14674},"client/src/pages/WomenPage.tsx":{"content":"import { useState, useCallback, useEffect } from \"react\";\nimport { motion } from \"framer-motion\";\nimport useEmblaCarousel from 'embla-carousel-react';\nimport Autoplay from 'embla-carousel-autoplay';\nimport Header from \"@/components/Header\";\nimport ProductGrid from \"@/components/ProductGrid\";\nimport Footer from \"@/components/Footer\";\nimport CartDrawer from \"@/components/CartDrawer\";\nimport ThemeToggle from \"@/components/ThemeToggle\";\nimport { Button } from \"@/components/ui/button\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Card } from \"@/components/ui/card\";\nimport { ChevronLeft, ChevronRight, Sparkles, Heart, Star } from \"lucide-react\";\n\nimport sweater from '@assets/generated_images/Beige_cashmere_luxury_sweater_f7741aad.png';\nimport coat from '@assets/generated_images/Black_minimalist_fashion_coat_cd5d7051.png';\nimport trousers from '@assets/generated_images/Olive_green_wide-leg_trousers_1935f49c.png';\nimport tshirt from '@assets/generated_images/White_cotton_essential_t-shirt_a79af24d.png';\nimport handbag from '@assets/generated_images/Brown_leather_luxury_handbag_1cdfb11b.png';\nimport blazer from '@assets/generated_images/Navy_blue_tailored_blazer_cc037dc0.png';\nimport sneakers from '@assets/generated_images/White_minimalist_fashion_sneakers_ba10d597.png';\nimport heroImage from '@assets/generated_images/Fashion_hero_editorial_image_5b15abc4.png';\n\nconst mockProducts = {\n  all: [\n    { id: '2', name: 'Cashmere Sweater', price: 189, image: sweater, category: 'Knitwear' },\n    { id: '5', name: 'Wide Leg Trousers', price: 159, image: trousers, category: 'Bottoms' },\n    { id: '6', name: 'Essential White Tee', price: 49, image: tshirt, category: 'Basics' },\n    { id: '7', name: 'Leather Handbag', price: 279, image: handbag, category: 'Accessories' },\n    { id: '8', name: 'Cashmere Sweater Navy', price: 189, image: sweater, category: 'Knitwear' },\n  ],\n  clothing: [\n    { id: '2', name: 'Cashmere Sweater', price: 189, image: sweater, category: 'Knitwear' },\n    { id: '5', name: 'Wide Leg Trousers', price: 159, image: trousers, category: 'Bottoms' },\n    { id: '6', name: 'Essential White Tee', price: 49, image: tshirt, category: 'Basics' },\n  ],\n  accessories: [\n    { id: '7', name: 'Leather Handbag', price: 279, image: handbag, category: 'Accessories' },\n  ],\n};\n\nconst collections = [\n  {\n    id: 'essentials',\n    title: 'Essential Basics',\n    description: 'Timeless wardrobe staples for every day',\n    image: tshirt,\n    gradient: 'from-pink-500/20 to-purple-500/20'\n  },\n  {\n    id: 'luxury',\n    title: 'Luxury Knitwear',\n    description: 'Soft cashmere pieces for elegant comfort',\n    image: sweater,\n    gradient: 'from-purple-500/20 to-pink-500/20'\n  },\n  {\n    id: 'tailored',\n    title: 'Tailored Collection',\n    description: 'Sophisticated pieces for the modern woman',\n    image: blazer,\n    gradient: 'from-pink-600/20 to-purple-600/20'\n  },\n  {\n    id: 'outerwear',\n    title: 'Statement Outerwear',\n    description: 'Make an impression with timeless coats',\n    image: coat,\n    gradient: 'from-purple-600/20 to-pink-600/20'\n  }\n];\n\nconst lookbookSlides = [\n  {\n    id: 'look1',\n    title: 'Minimalist Elegance',\n    subtitle: 'Clean lines, maximum impact',\n    image: heroImage\n  },\n  {\n    id: 'look2',\n    title: 'Casual Sophistication',\n    subtitle: 'Effortless style for every day',\n    image: coat\n  },\n  {\n    id: 'look3',\n    title: 'Power Dressing',\n    subtitle: 'Confidence in every stitch',\n    image: blazer\n  }\n];\n\nconst categories = [\n  {\n    id: 'dresses',\n    name: 'Dresses',\n    icon: Sparkles,\n    image: heroImage,\n    color: 'from-pink-500 to-purple-500'\n  },\n  {\n    id: 'tops',\n    name: 'Tops & Blouses',\n    icon: Heart,\n    image: tshirt,\n    color: 'from-purple-500 to-pink-600'\n  },\n  {\n    id: 'outerwear',\n    name: 'Outerwear',\n    icon: Star,\n    image: coat,\n    color: 'from-pink-600 to-purple-600'\n  },\n  {\n    id: 'accessories',\n    name: 'Accessories',\n    icon: Sparkles,\n    image: handbag,\n    color: 'from-purple-600 to-pink-500'\n  }\n];\n\nconst testimonials = [\n  {\n    id: 1,\n    quote: \"The quality and attention to detail is unmatched. Every piece feels luxurious and timeless.\",\n    author: \"Emma Richardson\",\n    role: \"Fashion Enthusiast\"\n  },\n  {\n    id: 2,\n    quote: \"I love how these pieces make me feel - confident, elegant, and ready to take on the world.\",\n    author: \"Sophia Chen\",\n    role: \"Style Blogger\"\n  },\n  {\n    id: 3,\n    quote: \"Finally, a collection that understands modern women need both style and functionality.\",\n    author: \"Olivia Martinez\",\n    role: \"Creative Director\"\n  },\n  {\n    id: 4,\n    quote: \"The craftsmanship is exceptional. These aren't just clothes - they're investments in yourself.\",\n    author: \"Isabella Thompson\",\n    role: \"Fashion Designer\"\n  }\n];\n\ninterface CartItem {\n  id: string;\n  name: string;\n  price: number;\n  quantity: number;\n  image: string;\n  size?: string;\n}\n\nexport default function WomenPage() {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n\n  const [collectionsRef, collectionsApi] = useEmblaCarousel(\n    { loop: true, duration: 30 },\n    [Autoplay({ delay: 4000, stopOnInteraction: false })]\n  );\n  const [collectionsIndex, setCollectionsIndex] = useState(0);\n\n  const [lookbookRef, lookbookApi] = useEmblaCarousel(\n    { loop: true, duration: 30 }\n  );\n  const [lookbookIndex, setLookbookIndex] = useState(0);\n\n  const [testimonialsRef, testimonialsApi] = useEmblaCarousel(\n    { loop: true, align: 'start' },\n    [Autoplay({ delay: 5000, stopOnInteraction: false })]\n  );\n\n  const handleAddToCart = (productId: string) => {\n    const allProducts = [...mockProducts.all];\n    const product = allProducts.find(p => p.id === productId);\n    if (!product) return;\n\n    const existingItem = cartItems.find(item => item.id === productId);\n    \n    if (existingItem) {\n      setCartItems(cartItems.map(item =>\n        item.id === productId\n          ? { ...item, quantity: item.quantity + 1 }\n          : item\n      ));\n    } else {\n      setCartItems([...cartItems, {\n        id: product.id,\n        name: product.name,\n        price: product.price,\n        quantity: 1,\n        image: product.image,\n        size: 'M'\n      }]);\n    }\n  };\n\n  const handleUpdateQuantity = (id: string, quantity: number) => {\n    if (quantity === 0) {\n      handleRemoveItem(id);\n    } else {\n      setCartItems(cartItems.map(item =>\n        item.id === id ? { ...item, quantity } : item\n      ));\n    }\n  };\n\n  const handleRemoveItem = (id: string) => {\n    setCartItems(cartItems.filter(item => item.id !== id));\n  };\n\n  const scrollLookbookPrev = useCallback(() => {\n    if (lookbookApi) lookbookApi.scrollPrev();\n  }, [lookbookApi]);\n\n  const scrollLookbookNext = useCallback(() => {\n    if (lookbookApi) lookbookApi.scrollNext();\n  }, [lookbookApi]);\n\n  const onCollectionsSelect = useCallback(() => {\n    if (!collectionsApi) return;\n    setCollectionsIndex(collectionsApi.selectedScrollSnap());\n  }, [collectionsApi]);\n\n  const onLookbookSelect = useCallback(() => {\n    if (!lookbookApi) return;\n    setLookbookIndex(lookbookApi.selectedScrollSnap());\n  }, [lookbookApi]);\n\n  useEffect(() => {\n    if (!collectionsApi) return;\n    onCollectionsSelect();\n    collectionsApi.on('select', onCollectionsSelect);\n    collectionsApi.on('reInit', onCollectionsSelect);\n  }, [collectionsApi, onCollectionsSelect]);\n\n  useEffect(() => {\n    if (!lookbookApi) return;\n    onLookbookSelect();\n    lookbookApi.on('select', onLookbookSelect);\n    lookbookApi.on('reInit', onLookbookSelect);\n  }, [lookbookApi, onLookbookSelect]);\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <div className=\"flex items-center justify-end p-3 md:p-4 border-b\">\n        <ThemeToggle />\n      </div>\n      \n      <Header \n        cartItemCount={cartItems.reduce((sum, item) => sum + item.quantity, 0)}\n        onCartClick={() => setIsCartOpen(true)}\n      />\n\n      <main className=\"flex-1\">\n        {/* Hero Section */}\n        <section className=\"relative overflow-hidden\">\n          <div className=\"absolute inset-0 bg-gradient-to-br from-pink-500/10 via-purple-500/5 to-background\" />\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-20 md:py-32 relative\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              className=\"max-w-4xl mx-auto text-center\"\n            >\n              <h1 className=\"text-5xl sm:text-6xl md:text-7xl lg:text-8xl font-serif font-light mb-6 bg-gradient-to-r from-pink-600 via-purple-600 to-primary bg-clip-text text-transparent\">\n                Women\n              </h1>\n              <p className=\"text-lg sm:text-xl text-muted-foreground max-w-2xl mx-auto\">\n                Elegant pieces designed for the modern woman. Timeless styles that empower and inspire.\n              </p>\n            </motion.div>\n          </div>\n        </section>\n\n        {/* Collections Carousel with Autoplay */}\n        <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n          >\n            <div className=\"flex items-center justify-between mb-8\">\n              <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-serif font-light bg-gradient-to-r from-pink-600 to-purple-600 bg-clip-text text-transparent\">\n                Featured Collections\n              </h2>\n            </div>\n\n            <div className=\"relative\" data-testid=\"carousel-collections\">\n              <div className=\"overflow-hidden rounded-2xl\" ref={collectionsRef}>\n                <div className=\"flex\">\n                  {collections.map((collection, index) => (\n                    <div key={collection.id} className=\"flex-[0_0_100%] min-w-0 px-2\">\n                      <motion.div\n                        initial={{ opacity: 0, scale: 0.95 }}\n                        whileInView={{ opacity: 1, scale: 1 }}\n                        transition={{ duration: 0.5, delay: index * 0.1 }}\n                        viewport={{ once: true }}\n                        className=\"relative h-[400px] md:h-[500px] rounded-2xl overflow-hidden group\"\n                        data-testid={`card-collection-${collection.id}`}\n                      >\n                        <div className={`absolute inset-0 bg-gradient-to-br ${collection.gradient}`} />\n                        <img \n                          src={collection.image}\n                          alt={collection.title}\n                          className=\"w-full h-full object-cover mix-blend-overlay opacity-60 group-hover:opacity-80 transition-opacity duration-500\"\n                          data-testid={`img-collection-${collection.id}`}\n                        />\n                        <div className=\"absolute inset-0 bg-gradient-to-t from-black/60 via-transparent to-transparent\" />\n                        <div className=\"absolute inset-0 flex items-end p-8 md:p-12\">\n                          <div className=\"text-white max-w-2xl\">\n                            <h3 className=\"text-3xl md:text-5xl font-serif font-light mb-3\" data-testid={`text-collection-title-${collection.id}`}>\n                              {collection.title}\n                            </h3>\n                            <p className=\"text-lg text-white/90 mb-6\" data-testid={`text-collection-desc-${collection.id}`}>\n                              {collection.description}\n                            </p>\n                            <Button \n                              variant=\"outline\" \n                              size=\"lg\"\n                              className=\"bg-white/10 backdrop-blur-sm border-white/30 text-white hover:bg-white/20\"\n                              data-testid={`button-collection-cta-${collection.id}`}\n                            >\n                              Explore Collection\n                            </Button>\n                          </div>\n                        </div>\n                      </motion.div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"flex justify-center gap-2 mt-6\">\n                {collections.map((_, index) => (\n                  <button\n                    key={index}\n                    className={`h-2 rounded-full transition-all ${\n                      index === collectionsIndex \n                        ? 'w-8 bg-gradient-to-r from-pink-600 to-purple-600' \n                        : 'w-2 bg-muted-foreground/30'\n                    }`}\n                    data-testid={`button-collections-dot-${index}`}\n                  />\n                ))}\n              </div>\n            </div>\n          </motion.div>\n        </section>\n\n        {/* Lookbook Slider */}\n        <section className=\"py-12 md:py-16 bg-muted/30\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"mb-8 text-center\"\n            >\n              <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-serif font-light mb-4\">\n                Lookbook\n              </h2>\n              <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n                Discover your signature style with our curated looks\n              </p>\n            </motion.div>\n\n            <div className=\"relative\" data-testid=\"carousel-lookbook\">\n              <div className=\"overflow-hidden rounded-3xl\" ref={lookbookRef}>\n                <div className=\"flex\">\n                  {lookbookSlides.map((slide) => (\n                    <div key={slide.id} className=\"flex-[0_0_100%] min-w-0\">\n                      <div className=\"relative h-[500px] md:h-[600px] lg:h-[700px]\">\n                        <img \n                          src={slide.image}\n                          alt={slide.title}\n                          className=\"w-full h-full object-cover\"\n                          data-testid={`img-lookbook-${slide.id}`}\n                        />\n                        <div className=\"absolute inset-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent\" />\n                        <motion.div\n                          initial={{ opacity: 0, y: 30 }}\n                          whileInView={{ opacity: 1, y: 0 }}\n                          transition={{ duration: 0.8 }}\n                          className=\"absolute inset-0 flex items-end justify-center p-8 md:p-12 lg:p-16\"\n                        >\n                          <div className=\"text-center text-white max-w-3xl\">\n                            <h3 className=\"text-4xl md:text-6xl lg:text-7xl font-serif font-light mb-4\" data-testid={`text-lookbook-title-${slide.id}`}>\n                              {slide.title}\n                            </h3>\n                            <p className=\"text-lg md:text-xl text-white/90\" data-testid={`text-lookbook-subtitle-${slide.id}`}>\n                              {slide.subtitle}\n                            </p>\n                          </div>\n                        </motion.div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <Button\n                size=\"icon\"\n                variant=\"ghost\"\n                onClick={scrollLookbookPrev}\n                className=\"absolute left-4 top-1/2 -translate-y-1/2 bg-white/10 backdrop-blur-sm border border-white/30 text-white hover:bg-white/20 hidden md:flex\"\n                data-testid=\"button-lookbook-prev\"\n              >\n                <ChevronLeft className=\"h-6 w-6\" />\n              </Button>\n              <Button\n                size=\"icon\"\n                variant=\"ghost\"\n                onClick={scrollLookbookNext}\n                className=\"absolute right-4 top-1/2 -translate-y-1/2 bg-white/10 backdrop-blur-sm border border-white/30 text-white hover:bg-white/20 hidden md:flex\"\n                data-testid=\"button-lookbook-next\"\n              >\n                <ChevronRight className=\"h-6 w-6\" />\n              </Button>\n\n              <div className=\"absolute bottom-8 left-1/2 -translate-x-1/2 flex gap-2\">\n                {lookbookSlides.map((_, index) => (\n                  <button\n                    key={index}\n                    className={`h-2 rounded-full transition-all ${\n                      index === lookbookIndex \n                        ? 'w-8 bg-white' \n                        : 'w-2 bg-white/50'\n                    }`}\n                    data-testid={`button-lookbook-dot-${index}`}\n                  />\n                ))}\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Animated Category Cards */}\n        <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            whileInView={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.6 }}\n            viewport={{ once: true }}\n            className=\"mb-8 text-center\"\n          >\n            <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-serif font-light mb-4\">\n              Shop by Category\n            </h2>\n            <p className=\"text-muted-foreground\">\n              Find exactly what you're looking for\n            </p>\n          </motion.div>\n\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n            {categories.map((category, index) => {\n              const Icon = category.icon;\n              return (\n                <motion.div\n                  key={category.id}\n                  initial={{ opacity: 0, y: 30 }}\n                  whileInView={{ opacity: 1, y: 0 }}\n                  transition={{ duration: 0.5, delay: index * 0.1 }}\n                  viewport={{ once: true }}\n                  data-testid={`card-category-${category.id}`}\n                >\n                  <Card className=\"group relative overflow-hidden border-0 bg-gradient-to-br from-muted/50 to-muted hover-elevate cursor-pointer h-[280px]\">\n                    <div className=\"absolute inset-0\">\n                      <img \n                        src={category.image}\n                        alt={category.name}\n                        className=\"w-full h-full object-cover opacity-20 group-hover:opacity-30 transition-opacity duration-500 group-hover:scale-110 transition-transform duration-700\"\n                        data-testid={`img-category-${category.id}`}\n                      />\n                    </div>\n                    <div className=\"relative h-full flex flex-col items-center justify-center p-6 text-center\">\n                      <motion.div\n                        initial={{ scale: 1 }}\n                        whileHover={{ scale: 1.1, rotate: 5 }}\n                        transition={{ duration: 0.3 }}\n                        className={`mb-4 p-4 rounded-full bg-gradient-to-r ${category.color}`}\n                      >\n                        <Icon className=\"w-8 h-8 text-white\" data-testid={`icon-category-${category.id}`} />\n                      </motion.div>\n                      <h3 className=\"text-xl font-serif font-light\" data-testid={`text-category-name-${category.id}`}>\n                        {category.name}\n                      </h3>\n                      <motion.div\n                        initial={{ opacity: 0, y: 10 }}\n                        whileHover={{ opacity: 1, y: 0 }}\n                        className=\"mt-4 opacity-0 group-hover:opacity-100 transition-opacity\"\n                      >\n                        <Button variant=\"ghost\" size=\"sm\" className=\"text-primary\">\n                          Shop Now →\n                        </Button>\n                      </motion.div>\n                    </div>\n                  </Card>\n                </motion.div>\n              );\n            })}\n          </div>\n        </section>\n\n        {/* Testimonials Carousel */}\n        <section className=\"py-12 md:py-16 bg-gradient-to-br from-pink-500/5 via-purple-500/5 to-background\">\n          <div className=\"container mx-auto px-4 sm:px-6 lg:px-8\">\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              whileInView={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.6 }}\n              viewport={{ once: true }}\n              className=\"mb-12 text-center\"\n            >\n              <h2 className=\"text-3xl sm:text-4xl md:text-5xl font-serif font-light mb-4 bg-gradient-to-r from-pink-600 to-purple-600 bg-clip-text text-transparent\">\n                Style Inspiration\n              </h2>\n              <p className=\"text-muted-foreground max-w-2xl mx-auto\">\n                What our community is saying\n              </p>\n            </motion.div>\n\n            <div className=\"relative max-w-6xl mx-auto\" data-testid=\"carousel-testimonials\">\n              <div className=\"overflow-hidden\" ref={testimonialsRef}>\n                <div className=\"flex gap-6\">\n                  {testimonials.map((testimonial) => (\n                    <div \n                      key={testimonial.id} \n                      className=\"flex-[0_0_100%] md:flex-[0_0_50%] lg:flex-[0_0_33.333%] min-w-0\"\n                    >\n                      <motion.div\n                        initial={{ opacity: 0, scale: 0.95 }}\n                        whileInView={{ opacity: 1, scale: 1 }}\n                        transition={{ duration: 0.5 }}\n                        viewport={{ once: true }}\n                      >\n                        <Card className=\"p-8 h-full bg-card/50 backdrop-blur-sm border-pink-200/20 dark:border-purple-500/20\">\n                          <div className=\"flex items-start gap-3 mb-6\">\n                            <Star className=\"w-6 h-6 fill-pink-500 text-pink-500\" />\n                            <Star className=\"w-6 h-6 fill-pink-500 text-pink-500\" />\n                            <Star className=\"w-6 h-6 fill-pink-500 text-pink-500\" />\n                            <Star className=\"w-6 h-6 fill-pink-500 text-pink-500\" />\n                            <Star className=\"w-6 h-6 fill-pink-500 text-pink-500\" />\n                          </div>\n                          <blockquote className=\"text-foreground mb-6 italic leading-relaxed\" data-testid={`text-testimonial-quote-${testimonial.id}`}>\n                            \"{testimonial.quote}\"\n                          </blockquote>\n                          <div className=\"border-t pt-4\">\n                            <p className=\"font-medium\" data-testid={`text-testimonial-author-${testimonial.id}`}>\n                              {testimonial.author}\n                            </p>\n                            <p className=\"text-sm text-muted-foreground\" data-testid={`text-testimonial-role-${testimonial.id}`}>\n                              {testimonial.role}\n                            </p>\n                          </div>\n                        </Card>\n                      </motion.div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Products Section with Tabs */}\n        <section className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-12 md:py-16\">\n          <Tabs defaultValue=\"all\" className=\"w-full\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-8\">\n              <h2 className=\"text-3xl sm:text-4xl font-serif font-light\">Shop Women's</h2>\n              <TabsList className=\"w-full sm:w-auto\">\n                <TabsTrigger value=\"all\" className=\"flex-1 sm:flex-initial\" data-testid=\"tab-all\">All Items</TabsTrigger>\n                <TabsTrigger value=\"clothing\" className=\"flex-1 sm:flex-initial\" data-testid=\"tab-clothing\">Clothing</TabsTrigger>\n                <TabsTrigger value=\"accessories\" className=\"flex-1 sm:flex-initial\" data-testid=\"tab-accessories\">Accessories</TabsTrigger>\n              </TabsList>\n            </div>\n\n            <TabsContent value=\"all\" className=\"mt-0\">\n              <ProductGrid\n                products={mockProducts.all}\n                onAddToCart={handleAddToCart}\n                onWishlist={(id) => console.log('Added to wishlist:', id)}\n              />\n            </TabsContent>\n\n            <TabsContent value=\"clothing\" className=\"mt-0\">\n              <ProductGrid\n                products={mockProducts.clothing}\n                onAddToCart={handleAddToCart}\n                onWishlist={(id) => console.log('Added to wishlist:', id)}\n              />\n            </TabsContent>\n\n            <TabsContent value=\"accessories\" className=\"mt-0\">\n              <ProductGrid\n                products={mockProducts.accessories}\n                onAddToCart={handleAddToCart}\n                onWishlist={(id) => console.log('Added to wishlist:', id)}\n              />\n            </TabsContent>\n          </Tabs>\n        </section>\n      </main>\n\n      <Footer />\n\n      <CartDrawer\n        isOpen={isCartOpen}\n        onClose={() => setIsCartOpen(false)}\n        items={cartItems}\n        onUpdateQuantity={handleUpdateQuantity}\n        onRemoveItem={handleRemoveItem}\n        onCheckout={() => console.log('Checkout clicked')}\n      />\n    </div>\n  );\n}\n","size_bytes":25676},"client/src/pages/not-found.tsx":{"content":"import { motion } from \"framer-motion\";\nimport { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card } from \"@/components/ui/card\";\nimport { Home, ShoppingBag, ArrowLeft } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gradient-to-br from-background via-background to-muted/30 px-4\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n        className=\"w-full max-w-2xl\"\n      >\n        <Card className=\"border-2 shadow-2xl overflow-hidden\">\n          <div className=\"relative\">\n            {/* Decorative gradient background */}\n            <div className=\"absolute inset-0 bg-gradient-to-br from-primary/5 via-transparent to-primary/10\" />\n            \n            <div className=\"relative p-8 sm:p-12 md:p-16 text-center\">\n              {/* 404 Text */}\n              <motion.div\n                initial={{ scale: 0.8, opacity: 0 }}\n                animate={{ scale: 1, opacity: 1 }}\n                transition={{ delay: 0.2, duration: 0.5 }}\n                className=\"mb-8\"\n              >\n                <h1 className=\"text-8xl sm:text-9xl md:text-[12rem] font-serif font-light text-primary/20 leading-none mb-2\">\n                  404\n                </h1>\n                <div className=\"h-1 w-24 bg-primary mx-auto mb-6\" />\n              </motion.div>\n\n              {/* Message */}\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.4, duration: 0.5 }}\n                className=\"mb-8 space-y-3\"\n              >\n                <h2 className=\"text-2xl sm:text-3xl md:text-4xl font-serif font-light mb-3\">\n                  Page Not Found\n                </h2>\n                <p className=\"text-muted-foreground text-base sm:text-lg max-w-md mx-auto\">\n                  We couldn't find the page you're looking for. It might have been moved or no longer exists.\n                </p>\n              </motion.div>\n\n              {/* Action Buttons */}\n              <motion.div\n                initial={{ opacity: 0, y: 10 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ delay: 0.6, duration: 0.5 }}\n                className=\"flex flex-col sm:flex-row gap-3 sm:gap-4 justify-center items-center\"\n              >\n                <Link href=\"/\">\n                  <Button size=\"lg\" className=\"gap-2 w-full sm:w-auto\">\n                    <Home className=\"h-4 w-4\" />\n                    Back to Home\n                  </Button>\n                </Link>\n                <Link href=\"/shop\">\n                  <Button size=\"lg\" variant=\"outline\" className=\"gap-2 w-full sm:w-auto\">\n                    <ShoppingBag className=\"h-4 w-4\" />\n                    Browse Products\n                  </Button>\n                </Link>\n              </motion.div>\n\n              {/* Helper Link */}\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                transition={{ delay: 0.8, duration: 0.5 }}\n                className=\"mt-8\"\n              >\n                <Link href=\"/\">\n                  <button className=\"text-sm text-muted-foreground hover:text-foreground transition-colors inline-flex items-center gap-2 group\">\n                    <ArrowLeft className=\"h-3 w-3 transition-transform group-hover:-translate-x-1\" />\n                    Return to previous page\n                  </button>\n                </Link>\n              </motion.div>\n            </div>\n          </div>\n        </Card>\n\n        {/* Decorative elements */}\n        <motion.div\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 0.3 }}\n          transition={{ delay: 1, duration: 1 }}\n          className=\"mt-8 text-center text-xs text-muted-foreground\"\n        >\n          Need help? Contact our support team\n        </motion.div>\n      </motion.div>\n    </div>\n  );\n}\n","size_bytes":4073},"client/src/components/examples/CartDrawer.tsx":{"content":"import CartDrawer from '../CartDrawer';\nimport { useState } from 'react';\nimport coat from '@assets/generated_images/Black_minimalist_fashion_coat_cd5d7051.png';\nimport sweater from '@assets/generated_images/Beige_cashmere_luxury_sweater_f7741aad.png';\n\nexport default function CartDrawerExample() {\n  const [isOpen, setIsOpen] = useState(true);\n\n  const items = [\n    { id: '1', name: 'Minimalist Black Coat', price: 299, quantity: 1, image: coat, size: 'M' },\n    { id: '2', name: 'Cashmere Sweater', price: 189, quantity: 2, image: sweater, size: 'L' },\n  ];\n\n  return (\n    <div>\n      <button onClick={() => setIsOpen(true)}>Open Cart</button>\n      <CartDrawer\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n        items={items}\n        onUpdateQuantity={(id, qty) => console.log('Update quantity:', id, qty)}\n        onRemoveItem={(id) => console.log('Remove item:', id)}\n        onCheckout={() => console.log('Checkout clicked')}\n      />\n    </div>\n  );\n}\n","size_bytes":984},"client/src/components/examples/CategoryBanner.tsx":{"content":"import CategoryBanner from '../CategoryBanner';\nimport blazer from '@assets/generated_images/Navy_blue_tailored_blazer_cc037dc0.png';\n\nexport default function CategoryBannerExample() {\n  return (\n    <div className=\"space-y-8 p-4\">\n      <CategoryBanner\n        title=\"New Season Essentials\"\n        description=\"Discover our curated collection of timeless pieces\"\n        imageSrc={blazer}\n        onCtaClick={() => console.log('CTA clicked')}\n      />\n      \n      <CategoryBanner\n        title=\"Spring Collection\"\n        description=\"Fresh styles for the new season\"\n        imageSrc={blazer}\n        variant=\"split\"\n        onCtaClick={() => console.log('CTA clicked')}\n      />\n    </div>\n  );\n}\n","size_bytes":702},"client/src/components/examples/FilterSidebar.tsx":{"content":"import FilterSidebar from '../FilterSidebar';\n\nexport default function FilterSidebarExample() {\n  return (\n    <div className=\"max-w-xs p-4\">\n      <FilterSidebar\n        onFilterChange={(filters) => console.log('Filters changed:', filters)}\n      />\n    </div>\n  );\n}\n","size_bytes":269},"client/src/components/examples/Footer.tsx":{"content":"import Footer from '../Footer';\n\nexport default function FooterExample() {\n  return <Footer />;\n}\n","size_bytes":98},"client/src/components/examples/Header.tsx":{"content":"import Header from '../Header';\n\nexport default function HeaderExample() {\n  return (\n    <Header \n      cartItemCount={3}\n      onCartClick={() => console.log('Cart clicked')}\n      onSearchChange={(value) => console.log('Search:', value)}\n    />\n  );\n}\n","size_bytes":255},"client/src/components/examples/Hero.tsx":{"content":"import Hero from '../Hero';\nimport heroImage from '@assets/generated_images/Fashion_hero_editorial_image_5b15abc4.png';\n\nexport default function HeroExample() {\n  return (\n    <Hero \n      imageSrc={heroImage}\n      onCtaClick={() => console.log('CTA clicked')}\n    />\n  );\n}\n","size_bytes":276},"client/src/components/examples/ProductCard.tsx":{"content":"import ProductCard from '../ProductCard';\nimport productImage from '@assets/generated_images/Black_minimalist_fashion_coat_cd5d7051.png';\n\nexport default function ProductCardExample() {\n  return (\n    <div className=\"max-w-sm p-4\">\n      <ProductCard\n        id=\"1\"\n        name=\"Minimalist Black Coat\"\n        price={299}\n        image={productImage}\n        category=\"Outerwear\"\n        isNew={true}\n        onAddToCart={(id) => console.log('Added to cart:', id)}\n        onWishlist={(id) => console.log('Added to wishlist:', id)}\n      />\n    </div>\n  );\n}\n","size_bytes":560},"client/src/components/examples/ProductGrid.tsx":{"content":"import ProductGrid from '../ProductGrid';\nimport coat from '@assets/generated_images/Black_minimalist_fashion_coat_cd5d7051.png';\nimport sweater from '@assets/generated_images/Beige_cashmere_luxury_sweater_f7741aad.png';\nimport sneakers from '@assets/generated_images/White_minimalist_fashion_sneakers_ba10d597.png';\nimport blazer from '@assets/generated_images/Navy_blue_tailored_blazer_cc037dc0.png';\n\nexport default function ProductGridExample() {\n  const products = [\n    { id: '1', name: 'Minimalist Black Coat', price: 299, image: coat, category: 'Outerwear', isNew: true },\n    { id: '2', name: 'Cashmere Sweater', price: 189, image: sweater, category: 'Knitwear' },\n    { id: '3', name: 'Classic White Sneakers', price: 129, image: sneakers, category: 'Footwear', isSale: true, salePrice: 99 },\n    { id: '4', name: 'Navy Tailored Blazer', price: 349, image: blazer, category: 'Outerwear' },\n  ];\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <ProductGrid\n        products={products}\n        onAddToCart={(id) => console.log('Added to cart:', id)}\n        onWishlist={(id) => console.log('Added to wishlist:', id)}\n      />\n    </div>\n  );\n}\n","size_bytes":1172},"client/src/components/examples/ThemeToggle.tsx":{"content":"import ThemeToggle from '../ThemeToggle';\n\nexport default function ThemeToggleExample() {\n  return (\n    <div className=\"p-4\">\n      <ThemeToggle />\n    </div>\n  );\n}\n","size_bytes":167},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209}},"version":1}